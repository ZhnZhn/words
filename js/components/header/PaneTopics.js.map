{"version":3,"sources":["../../../src/components/header/PaneTopics.jsx"],"names":["PaneTopics","_ref","n","firstItem","_renderItems","clItem","items","onClose","map","item","index","undefined","caption","prevProps","prevState","props","isShow","prevFocused","document","activeElement","focus","className","paneStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;IAEMA,U;;;;;;;;;;;;;;8MAeJC,I,GAAO,UAACC,CAAD;AAAA,aAAO,MAAKC,SAAL,GAAiBD,CAAxB;AAAA,K,QAEPE,Y,GAAe,iBAAgC;AAAA,UAA7BC,MAA6B,SAA7BA,MAA6B;AAAA,UAArBC,KAAqB,SAArBA,KAAqB;AAAA,UAAdC,OAAc,SAAdA,OAAc;;AAC7C,aAAOD,MAAME,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,YAAMT,OAAOS,UAAU,CAAV,GACH,MAAKT,IADF,GAEHU,SAFV;AAGA,eACE,8CAAG,QAAH;AACE,eAAKF,KAAKG,OADZ;AAEE,eAAKX,IAFP;AAGE,qBAAWI;AAHb,WAIMI,IAJN;AAKE,mBAASF;AALX,WADF;AASD,OAbM,CAAP;AAcD,K;;;;;uCA/BkBM,S,EAAWC,S,EAAU;AACtC,UAAI,KAAKC,KAAL,KAAeF,SAAnB,EAA6B;AAAA,YACnBG,MADmB,GACR,KAAKD,KADG,CACnBC,MADmB;;AAE3B,YAAIA,UAAU,CAACH,UAAUG,MAAzB,EAAiC;AAC/B,eAAKC,WAAL,GAAmBC,SAASC,aAA5B;AACA,eAAKhB,SAAL,CAAeiB,KAAf;AACD,SAHD,MAGO,IAAK,CAACJ,MAAD,IAAWH,UAAUG,MAA1B,EAAkC;AACvC,cAAI,KAAKC,WAAT,EAAsB;AACpB,iBAAKA,WAAL,CAAiBG,KAAjB;AACD;AACF;AACF;AACF;;;6BAqBO;AAAA,mBAMG,KAAKL,KANR;AAAA,UAECM,SAFD,UAECA,SAFD;AAAA,UAEYC,SAFZ,UAEYA,SAFZ;AAAA,UAEuBN,MAFvB,UAEuBA,MAFvB;AAAA,UAGCX,MAHD,UAGCA,MAHD;AAAA,UAICC,KAJD,UAICA,KAJD;AAAA,UAKCC,OALD,UAKCA,OALD;;;AAQN,aACE;AAAA;AAAA;AACE,kBAAQS,MADV;AAEE,mBAAST;AAFX;AAIE;AAAA,0BAAG,QAAH;AAAA;AACE,uBAAWc,SADb;AAEE,mBAAOC,SAFT;AAGE,oBAAQN;AAHV;AAKG,eAAKZ,YAAL,CAAkB,EAAEC,cAAF,EAAUC,YAAV,EAAiBC,gBAAjB,EAAlB;AALH;AAJF,OADF;AAcD;;;;;kBAGYP,U","file":"PaneTopics.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport ModalPane from '../zhn-moleculs/ModalPane'\r\nimport A from '../zhn-atoms/Atoms'\r\n\r\nclass PaneTopics extends Component {\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (this.props !== prevProps){\r\n      const { isShow } = this.props;\r\n      if (isShow && !prevProps.isShow) {\r\n        this.prevFocused = document.activeElement\r\n        this.firstItem.focus()\r\n      } else if ( !isShow && prevProps.isShow) {\r\n        if (this.prevFocused) {\r\n          this.prevFocused.focus()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _ref = (n) => this.firstItem = n\r\n\r\n  _renderItems = ({ clItem, items, onClose }) => {\r\n    return items.map((item, index) => {\r\n      const _ref = index === 0\r\n              ? this._ref\r\n              : undefined;\r\n      return (\r\n        <A.MenuItem\r\n          key={item.caption}\r\n          ref={_ref}\r\n          className={clItem}\r\n          {...item}\r\n          onClose={onClose}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           className, paneStyle, isShow,\r\n           clItem,\r\n           items,\r\n           onClose\r\n         } = this.props;\r\n\r\n    return (\r\n      <ModalPane\r\n        isShow={isShow}\r\n        onClose={onClose}\r\n      >\r\n        <A.ShowHide\r\n          className={className}\r\n          style={paneStyle}\r\n          isShow={isShow}\r\n        >\r\n          {this._renderItems({ clItem, items, onClose })}\r\n        </A.ShowHide>\r\n     </ModalPane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaneTopics\r\n"]}