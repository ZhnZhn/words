{"version":3,"sources":["../../../src/components/header/LimitLabel.jsx"],"names":["S","LABEL","position","top","display","color","paddingRight","fontSize","fontWeight","LimitLabel","state","value","_onStore","actionType","ACTIONS","props","LOADING_COMPLETE","setState","componentDidMount","store","unsubscribe","listenLoading","componentWillUnmount","render","style","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,KAAK,EAAG;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAEN,aAAO,OAFD;AAGNC,IAAAA,GAAG,EAAE,KAHC;AAINC,IAAAA,OAAO,EAAE,cAJH;AAKNC,IAAAA,KAAK,EAAC,SALA;AAMNC,IAAAA,YAAY,EAAE,MANR;AAONC,IAAAA,QAAQ,EAAE,MAPJ;AAQNC,IAAAA,UAAU,EAAE;AARN;AADA,CAAV;;IAaMC,U;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAYRC,Q,GAAW,UAACC,UAAD,EAAaF,KAAb,EAAuB;AAAA,UACxBG,OADwB,GACZ,MAAKC,KADO,CACxBD,OADwB;;AAEhC,UAAID,UAAU,KAAKC,OAAO,CAACE,gBAA3B,EAA6C;AAC3C,YAAK,EAAEL,KAAK,IAAI,IAAX,CAAL,EAAwB;AACtB,gBAAKM,QAAL,CAAc;AAAEN,YAAAA,KAAK,EAAEA;AAAT,WAAd;AACD;AACF;AACF,K;;;;;;;SAfDO,iB,GAAA,6BAAoB;AAAA,QACVC,KADU,GACA,KAAKJ,KADL,CACVI,KADU;AAElB,SAAKC,WAAL,GAAmBD,KAAK,CAACE,aAAN,CAAoB,KAAKT,QAAzB,CAAnB;AACD,G;;SACDU,oB,GAAA,gCAAuB;AACrB,SAAKF,WAAL;AACD,G;;SAWDG,M,GAAA,kBAAS;AACD,QAAEC,KAAF,GAAY,KAAKT,KAAjB,CAAES,KAAF;AAAA,QACEb,KADF,GACY,KAAKD,KADjB,CACEC,KADF;AAEN,WACG;AAAM,MAAA,KAAK,gCAAOX,CAAC,CAACC,KAAT,MAAmBuB,KAAnB;AAAX,OACGb,KADH,CADH;AAKD,G;;;EA9BsBc,gB;;eAiCVhB,U","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst S = {\r\n  LABEL : {\r\n    position: 'relative',\r\n    float: 'right',\r\n    top: '9px',\r\n    display: 'inline-block',\r\n    color:'#2f7ed8',\r\n    paddingRight: '10px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold'\r\n  }\r\n}\r\n\r\nclass LimitLabel extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { store } = this.props;\r\n    this.unsubscribe = store.listenLoading(this._onStore)\r\n  }\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  _onStore = (actionType, value) => {\r\n    const { ACTIONS } = this.props;\r\n    if (actionType === ACTIONS.LOADING_COMPLETE) {\r\n      if ( !(value == null) ) {\r\n        this.setState({ value: value })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { style } = this.props\r\n        , { value } = this.state;\r\n    return (\r\n       <span style={{ ...S.LABEL, ...style }}>\r\n         {value}\r\n       </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LimitLabel\r\n"],"file":"LimitLabel.js"}