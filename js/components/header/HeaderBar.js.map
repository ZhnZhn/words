{"version":3,"sources":["../../../src/components/header/HeaderBar.jsx"],"names":["CL","HEADER","PANEL_BROWSER","ICON_APP","LABEL_APP","BROWSER_BTS","BTS","ARROW_DOWN","SETTINGS","BT_ABOUT","STYLE","DIV_STYLE","paddingLeft","paddingRight","verticalAlign","position","top","TITLE","LABEL_TITLE","HeaderBar","props","_onRegTopics","node","topicsNode","_hClickTopics","setState","isTopics","state","_hCloseTopics","event","contains","target","_hChangeTheme","theme","onChangeTheme","themeName","setThemeName","onDefinition","onSources","onWatch","_topicItems","caption","onClick","store","LPT","onSettings","onAbout","S","createStyle","PANE","CL_QUERY_ITEM","BT","FLAT_ROOT","CL_FLAT_DIV","BT_SETTINGS","LIMIT"],"mappings":"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","file":"HeaderBar.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './HeaderBar.Style'\r\n\r\nimport A from '../zhn-atoms/Atoms'\r\nimport PaneTopics from './PaneTopics'\r\nimport ProgressLoading from './ProgressLoading'\r\nimport IconAppLogo from './IconAppLogo'\r\nimport AppLabel from './AppLabel'\r\nimport LimitLabel from './LimitLabel'\r\n\r\nconst CL = {\r\n  HEADER: \"header\",\r\n  PANEL_BROWSER: \"header__panel-browser\",\r\n  ICON_APP: \"header__icon-app\",\r\n  LABEL_APP: \"header__label-app\",\r\n  BROWSER_BTS: \"header__browser-bts\",\r\n  BTS: \"header__bts\",\r\n  ARROW_DOWN: \"arrow-down\",\r\n  SETTINGS: \"header__bt-settins\",\r\n  BT_ABOUT: \"header__bt-about\"\r\n};\r\n\r\nconst STYLE = {\r\n  DIV_STYLE : {\r\n    paddingLeft: 6,\r\n    paddingRight: 6\r\n  },\r\n  SETTINGS: {\r\n    verticalAlign: 'middle',\r\n    position: 'relative',\r\n    top: -1\r\n  }\r\n};\r\n\r\nconst TITLE = 'Words v0.2.0';\r\nconst LABEL_TITLE = 'Click to change app UI theme';\r\n\r\nclass HeaderBar extends Component {\r\n\r\n  constructor(props){\r\n    super()\r\n\r\n    const { onDefinition, onSources, onWatch } = props;\r\n    this._topicItems = [\r\n      { caption: 'Words Definition', onClick: onDefinition },\r\n      { caption: 'Words Sources', onClick: onSources },\r\n      { caption: 'Watch', onClick: onWatch },\r\n    ]\r\n\r\n    this.state = {\r\n      isTopics: false\r\n    }\r\n  }\r\n\r\n  _onRegTopics = (node) => {\r\n    this.topicsNode = node\r\n  }\r\n  _hClickTopics = () => {\r\n    this.setState({ isTopics: !this.state.isTopics })\r\n  }\r\n  _hCloseTopics = (event) => {\r\n    if (!this.topicsNode.contains(event.target)){\r\n      this.setState({ isTopics: false })\r\n    }\r\n  }\r\n\r\n  _hChangeTheme = () => {\r\n    const { theme, onChangeTheme } = this.props;\r\n    if (theme.themeName === 'GREY'){\r\n      theme.setThemeName('WHITE')\r\n    } else {\r\n      theme.setThemeName('GREY')\r\n    }\r\n    onChangeTheme()\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            theme, store,\r\n            LPT,\r\n            onSettings,\r\n            onAbout\r\n          } = this.props\r\n        , { isTopics } = this.state\r\n        , S = theme.createStyle(styleConfig);\r\n    return (\r\n      <header className={CL.HEADER} style={S.HEADER}>\r\n        <PaneTopics\r\n          paneStyle={S.PANE}\r\n          className={CL.PANEL_BROWSER}\r\n          clItem={S.CL_QUERY_ITEM}\r\n          isShow={isTopics}\r\n          items={this._topicItems}\r\n          onClose={this._hCloseTopics}\r\n        />\r\n         <ProgressLoading\r\n           store={store}\r\n           ACTIONS={LPT}\r\n         />\r\n         <IconAppLogo\r\n           className={CL.ICON_APP}\r\n           title={TITLE}\r\n           onClick={this._hChangeTheme}\r\n         />\r\n         <AppLabel\r\n           className={CL.LABEL_APP}\r\n           caption={TITLE}\r\n           title={LABEL_TITLE}\r\n           onClick={this._hChangeTheme}\r\n         />\r\n         <span className={CL.BROWSER_BTS}>\r\n           <A.ModalButton\r\n              rootStyle={S.BT.FLAT_ROOT}\r\n              clDiv={S.BT.CL_FLAT_DIV}\r\n              caption=\"Topics\"\r\n              title=\"Topics\"\r\n              accessKey=\"t\"\r\n              onClick={this._hClickTopics}\r\n              onReg={this._onRegTopics}\r\n           >\r\n            <span className={CL.ARROW_DOWN} />\r\n          </A.ModalButton>\r\n         </span>\r\n         <div className={CL.BTS}>\r\n           <A.FlatButton\r\n               className={CL.SETTINGS}\r\n               rootStyle={{ ...S.BT.FLAT_ROOT, ...S.BT_SETTINGS }}\r\n               clDiv={S.BT.CL_FLAT_DIV}\r\n               divStyle={STYLE.DIV_STYLE}\r\n               title=\"User Settings Dialog\"\r\n               accessKey=\"s\"\r\n               onClick={onSettings}\r\n            >\r\n              <A.SvgSettings style={STYLE.SETTINGS} />\r\n            </A.FlatButton>\r\n            <A.FlatButton\r\n                className={CL.BT_ABOUT}\r\n                rootStyle={S.BT.FLAT_ROOT}\r\n                clDiv={S.BT.CL_FLAT_DIV}\r\n                divStyle={STYLE.DIV_STYLE}\r\n                title=\"About Words\"\r\n                accessKey=\"a\"\r\n                onClick={onAbout}\r\n            >\r\n              <A.SvgInfo style={STYLE.SETTINGS}/>\r\n            </A.FlatButton>\r\n         </div>\r\n         <LimitLabel\r\n           store={store}\r\n           ACTIONS={LPT}\r\n           style={S.LIMIT}\r\n         />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(HeaderBar)\r\n"]}