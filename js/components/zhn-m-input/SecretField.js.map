{"version":3,"sources":["../../../src/components/zhn-m-input/SecretField.jsx"],"names":["CL","SELECT","LABEL","DIV","INPUT","INPUT_LINE","INPUT_MSG_ERR","S","LABEL_TO_INPUT","transform","LABEL_ON_ERROR","color","LINE_ERROR","borderBottom","LINE_AFTER_ENTER","TextField","props","_hFocusInput","isFocus","forceUpdate","_hBlurInput","_hInputChange","event","setState","value","target","trim","_clearWasEnter","_wasEnter","_hKeyDown","keyCode","preventDefault","onEnter","_isValue","_input","_refInput","node","name","_id","state","render","rootStyle","caption","maxLength","errorMsg","onTest","isPassTest","_labelStyle","_labelErrStyle","_lineStyle","getValue","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst CL = {\r\n  SELECT: 'm-select',\r\n  LABEL: 'm-select__label',\r\n  DIV: 'm-textfield-input__div',\r\n  INPUT: 'm-textfield-input',\r\n  INPUT_LINE: 'm-input__line',\r\n  INPUT_MSG_ERR: 'm-input__msg-err'\r\n};\r\n\r\nconst S = {\r\n  LABEL_TO_INPUT: {\r\n     transform: 'scale(1) translate(0px, -6px)'\r\n  },\r\n  LABEL_ON_ERROR: {\r\n    color: '#f44336'\r\n  },\r\n  LINE_ERROR: {\r\n    borderBottom: '2px solid #f44336'\r\n  },\r\n  LINE_AFTER_ENTER: {\r\n    borderBottom: '2px solid greenyellow'\r\n  }\r\n};\r\n\r\nclass TextField extends Component {\r\n  static defaultProps = {\r\n    name: 'pwd',\r\n    maxLength: \"32\",\r\n    onTest: () => true,\r\n    onEnter: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this._wasEnter = false\r\n    this.isFocus = false;\r\n    const { name } = props;\r\n    this._id = name + '_sf'\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  }\r\n\r\n  _hFocusInput = () => {\r\n    this.isFocus = true\r\n    this.forceUpdate()\r\n  }\r\n  _hBlurInput = () => {\r\n    this.isFocus = false\r\n    this.forceUpdate()\r\n  }\r\n\r\n  _hInputChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value.trim(),\r\n    })\r\n  }\r\n\r\n  _clearWasEnter = () => {\r\n    this._wasEnter = false\r\n  }\r\n\r\n _hKeyDown = (event) => {\r\n   if (event.keyCode === 46){\r\n     this.setState({ value: '' })\r\n   } else if (event.keyCode === 13) {\r\n     event.preventDefault()\r\n     this.props.onEnter(event.target.value)\r\n     this._wasEnter = true\r\n     this.forceUpdate(this._clearWasEnter)\r\n   }\r\n }\r\n _isValue = () => {\r\n    return this._input\r\n       ? !!this._input.value\r\n       : false;\r\n }\r\n\r\n _refInput = node => this._input = node\r\n\r\n  render(){\r\n    const {\r\n        rootStyle, caption,\r\n        name,\r\n        maxLength, errorMsg='',\r\n        onTest\r\n      } = this.props\r\n    , { value } = this.state\r\n    , isPassTest = onTest(value)\r\n    , _labelStyle = (this._isValue() || this.isFocus)\r\n        ? null\r\n        : S.LABEL_TO_INPUT\r\n    , _labelErrStyle = isPassTest\r\n        ? null\r\n        : S.LABEL_ON_ERROR\r\n    , _lineStyle = isPassTest\r\n        ? this._wasEnter\r\n             ? S.LINE_AFTER_ENTER\r\n             : void 0\r\n        : S.LINE_ERROR;\r\n    return (\r\n      <div\r\n        className={CL.SELECT}\r\n        style={rootStyle}\r\n      >\r\n        <label\r\n          className={CL.LABEL}\r\n          style={{..._labelStyle, ..._labelErrStyle}}\r\n          htmlFor={this._id}\r\n         >\r\n          {caption}\r\n        </label>\r\n        <div className={CL.DIV}>\r\n          <input\r\n            hidden={true}\r\n            autoComplete=\"username\"\r\n            value={name}\r\n            readOnly={true}\r\n          />\r\n          <input\r\n            ref = {this._refInput}\r\n            id={this._id}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            className={CL.INPUT}\r\n            maxLength={maxLength}\r\n            value={value}\r\n            onChange={this._hInputChange}\r\n            onKeyDown={this._hKeyDown}\r\n            onFocus={this._hFocusInput}\r\n            onBlur={this._hBlurInput}\r\n          />\r\n          <div className={CL.INPUT_LINE} style={_lineStyle} />\r\n          {\r\n             !isPassTest && <div className={CL.INPUT_MSG_ERR}>\r\n                 {errorMsg}\r\n               </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return this._input && this._input.value;\r\n  }\r\n}\r\n\r\nexport default TextField\r\n"],"file":"SecretField.js"}