{"version":3,"sources":["../../../src/components/zhn-m-input/SecretField.jsx"],"names":["CL","SELECT","LABEL","DIV","INPUT","INPUT_LINE","INPUT_MSG_ERR","S","LABEL_TO_INPUT","transform","LABEL_ON_ERROR","color","LINE_ERROR","borderBottom","LINE_AFTER_ENTER","TextField","props","_hFocusInput","isFocus","forceUpdate","_hBlurInput","_hInputChange","event","setState","value","target","trim","_clearWasEnter","_wasEnter","_hKeyDown","keyCode","preventDefault","onEnter","_isValue","_input","_refInput","node","name","_id","state","rootStyle","caption","maxLength","errorMsg","onTest","isPassTest","_labelStyle","_labelErrStyle","_lineStyle","defaultProps"],"mappings":"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","file":"SecretField.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst CL = {\r\n  SELECT: 'm-select',\r\n  LABEL: 'm-select__label',\r\n  DIV: 'm-textfield-input__div',\r\n  INPUT: 'm-textfield-input',\r\n  INPUT_LINE: 'm-input__line',\r\n  INPUT_MSG_ERR: 'm-input__msg-err'\r\n};\r\n\r\nconst S = {\r\n  LABEL_TO_INPUT: {\r\n     transform: 'scale(1) translate(0px, -6px)'\r\n  },\r\n  LABEL_ON_ERROR: {\r\n    color: '#f44336'\r\n  },\r\n  LINE_ERROR: {\r\n    borderBottom: '2px solid #f44336'\r\n  },\r\n  LINE_AFTER_ENTER: {\r\n    borderBottom: '2px solid greenyellow'\r\n  }\r\n};\r\n\r\nclass TextField extends Component {\r\n  static defaultProps = {\r\n    name: 'pwd',\r\n    maxLength: \"32\",\r\n    onTest: () => true,\r\n    onEnter: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this._wasEnter = false\r\n    this.isFocus = false;\r\n    const { name } = props;\r\n    this._id = name + '_sf'\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  }\r\n\r\n  _hFocusInput = () => {\r\n    this.isFocus = true\r\n    this.forceUpdate()\r\n  }\r\n  _hBlurInput = () => {\r\n    this.isFocus = false\r\n    this.forceUpdate()\r\n  }\r\n\r\n  _hInputChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value.trim(),\r\n    })\r\n  }\r\n\r\n  _clearWasEnter = () => {\r\n    this._wasEnter = false\r\n  }\r\n\r\n _hKeyDown = (event) => {\r\n   if (event.keyCode === 46){\r\n     this.setState({ value: '' })\r\n   } else if (event.keyCode === 13) {\r\n     event.preventDefault()\r\n     this.props.onEnter(event.target.value)\r\n     this._wasEnter = true\r\n     this.forceUpdate(this._clearWasEnter)\r\n   }\r\n }\r\n _isValue = () => {\r\n    return this._input\r\n       ? !!this._input.value\r\n       : false;\r\n }\r\n\r\n _refInput = node => this._input = node\r\n\r\n  render(){\r\n    const {\r\n        rootStyle, caption,\r\n        name,\r\n        maxLength, errorMsg='',\r\n        onTest\r\n      } = this.props\r\n    , { value } = this.state\r\n    , isPassTest = onTest(value)\r\n    , _labelStyle = (this._isValue() || this.isFocus)\r\n        ? null\r\n        : S.LABEL_TO_INPUT\r\n    , _labelErrStyle = isPassTest\r\n        ? null\r\n        : S.LABEL_ON_ERROR\r\n    , _lineStyle = isPassTest\r\n        ? this._wasEnter\r\n             ? S.LINE_AFTER_ENTER\r\n             : void 0\r\n        : S.LINE_ERROR;\r\n    return (\r\n      <div\r\n        className={CL.SELECT}\r\n        style={rootStyle}\r\n      >\r\n        <label\r\n          className={CL.LABEL}\r\n          style={{..._labelStyle, ..._labelErrStyle}}\r\n          htmlFor={this._id}\r\n         >\r\n          {caption}\r\n        </label>\r\n        <div className={CL.DIV}>\r\n          <input\r\n            hidden={true}\r\n            autoComplete=\"username\"\r\n            value={name}\r\n            readOnly={true}\r\n          />\r\n          <input\r\n            ref = {this._refInput}\r\n            id={this._id}\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            className={CL.INPUT}\r\n            maxLength={maxLength}\r\n            value={value}\r\n            onChange={this._hInputChange}\r\n            onKeyDown={this._hKeyDown}\r\n            onFocus={this._hFocusInput}\r\n            onBlur={this._hBlurInput}\r\n          />\r\n          <div className={CL.INPUT_LINE} style={_lineStyle} />\r\n          {\r\n             !isPassTest && <div className={CL.INPUT_MSG_ERR}>\r\n                 {errorMsg}\r\n               </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return this._input && this._input.value;\r\n  }\r\n}\r\n\r\nexport default TextField\r\n"]}