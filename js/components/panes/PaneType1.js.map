{"version":3,"sources":["../../../src/components/panes/PaneType1.jsx"],"names":["SHOW_POPUP","CHILD_MARGIN","RESIZE_MIN_WIDTH","RESIZE_MAX_WIDTH","S","ROOT_DIV","backgroundColor","padding","position","borderRadius","width","height","minHeight","marginLeft","boxShadow","overflowY","overflowX","BR_CAPTION","marginRight","BT_CIRCLE","SCROLL_PANE","paddingRight","INLINE_BLOCK","display","NONE","_fnNoop","NewsPane","props","_onStore","actionType","option","id","updateAction","showAction","toggleAction","watchAction","setState","isShow","configs","prevState","word","caption","_hHide","onClose","_getRootDiv","rootDiv","_hLoadItem","itemConf","onLoad","_word","iWord","getValue","undefined","_refRootDiv","node","_refIWord","comp","childMargin","state","unsubscribe","store","listen","Item","onCloseItem","onRemoveUnder","onAddToWatch","map","config","paneCaption","theme","Input","onRemoveItems","TS","createStyle","_showStyle","_showCl","PANE_ROOT","PANE_CAPTION","SVG_RESIZE","CL_SCROLL_PANE","_renderConfigs","defaultProps"],"mappings":"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","file":"PaneType1.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Pane.Style'\r\n\r\nimport A from '../zhn-atoms/Atoms'\r\n\r\nconst SHOW_POPUP = \"show-popup\"\r\n    , CHILD_MARGIN = 36\r\n    , RESIZE_MIN_WIDTH = 375\r\n    , RESIZE_MAX_WIDTH = 1200;\r\n\r\nconst S = {\r\n  ROOT_DIV : {\r\n    backgroundColor: '#4D4D4D',\r\n    padding : '0px 0px 3px 0px',\r\n    position: 'relative',\r\n    borderRadius: 4,\r\n    width: 635,\r\n    height: 'calc(100vh - 71px)',\r\n    minHeight: 500,\r\n    marginLeft: 16,\r\n    boxShadow: '1px 4px 6px 1px rgba(0,0,0,0.6)',\r\n    overflowY: 'hidden',\r\n    overflowX : 'hidden'\r\n  },\r\n  BR_CAPTION: {\r\n    marginRight: -2\r\n  },\r\n  BT_CIRCLE: {\r\n    marginLeft: 16,\r\n    marginRight: 6\r\n  },\r\n  SCROLL_PANE : {\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    //height: '92%',\r\n    height: 'calc(100% - 120px)',\r\n    paddingRight: 10\r\n  },\r\n  INLINE_BLOCK : {\r\n    display : 'inline-block'\r\n  },\r\n  NONE : {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nconst _fnNoop = () => {};\r\n\r\nclass NewsPane extends Component {\r\n  /*\r\n    static propTypes = {\r\n      paneCaption: PropTypes.string,\r\n      store: PropTypes.shape({\r\n        listen; PropTypes.func\r\n      }),\r\n\r\n      id: PropTypes.string,\r\n      addAction: PropTypes.string,\r\n      showAction: PropTypes.string,\r\n      toggleAction: PropTypes.string\r\n      Input: PropTypes.element,\r\n\r\n      itemConf: PropTypes.object,\r\n      onLoad: PropTypes.func\r\n      onClose: PropTypes.func\r\n\r\n      onRemoveItems: PropTypes.func,\r\n      onRemoveUnder: PropTypes.func,\r\n      onCloseItem: PropTypes.func,\r\n      onAddToWatch: PropTypes.func\r\n    }\r\n  */\r\n\r\n  static defaultProps = {\r\n    onLoad: _fnNoop,\r\n    onClose: _fnNoop\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.childMargin = CHILD_MARGIN;\r\n    this.state = {\r\n      isShow: true,\r\n      word: 'example',\r\n      configs: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n\r\n\r\n   _onStore = (actionType, option={}) => {\r\n      const {\r\n              id,\r\n              updateAction, showAction, toggleAction,\r\n              watchAction\r\n            } = this.props;\r\n\r\n      if (option.id === id){\r\n        switch(actionType){\r\n          case updateAction:\r\n            this.setState({\r\n              isShow: true,\r\n              configs: option.configs\r\n            })\r\n            break;\r\n          case showAction:\r\n            this.setState(prevState => {\r\n              return prevState.isShow\r\n                ? null\r\n                : { isShow: true };\r\n            })\r\n            break;\r\n          case toggleAction:\r\n            this.setState(prevState => ({\r\n              isShow: !prevState.isShow\r\n            }))\r\n            break;\r\n          case watchAction:\r\n            this.setState({\r\n              word: option.caption\r\n            })\r\n            break;\r\n          default:\r\n            return void 0;\r\n        }\r\n      }\r\n   }\r\n\r\n   _hHide = () => {\r\n      this.props.onClose()\r\n      this.setState({ isShow: false })\r\n   }\r\n\r\n   _getRootDiv = () => {\r\n     return this.rootDiv;\r\n   }\r\n\r\n   _hLoadItem = () => {\r\n       const { itemConf, onLoad } = this.props\r\n           , _word = this.iWord\r\n                ? this.iWord.getValue()\r\n                : undefined;\r\n       onLoad({\r\n         itemConf,\r\n         word: _word,\r\n       })\r\n   }\r\n\r\n  _renderConfigs(configs=[]){\r\n     const {\r\n             Item,\r\n             onCloseItem,\r\n             onRemoveUnder,\r\n             onAddToWatch\r\n           } = this.props;\r\n     return configs.map(config => {\r\n        return (\r\n          <Item\r\n             key={config.id}\r\n             config={config}\r\n             onCloseItem={onCloseItem}\r\n             onRemoveUnder={onRemoveUnder}\r\n             onAddToWatch={onAddToWatch}\r\n          />\r\n        );\r\n     })\r\n  }\r\n\r\n\r\n   _refRootDiv = node => this.rootDiv = node\r\n   _refIWord = comp => this.iWord = comp\r\n\r\n   render(){\r\n      const {\r\n              paneCaption,\r\n              theme,\r\n              Input,\r\n              onRemoveItems\r\n            } = this.props\r\n          , { isShow, word, configs } = this.state\r\n          , TS = theme.createStyle(styleConfig)\r\n          , _showStyle = isShow\r\n               ? S.INLINE_BLOCK\r\n               : S.NONE\r\n         , _showCl = isShow\r\n               ? SHOW_POPUP\r\n               : undefined;\r\n     return(\r\n        <div\r\n           ref={this._refRootDiv}\r\n           className={_showCl}\r\n           style={{ ...S.ROOT_DIV, ...TS.PANE_ROOT, ..._showStyle }}\r\n        >\r\n          <A.BrowserCaption\r\n             rootStyle={{ ...S.BR_CAPTION, ...TS.PANE_CAPTION }}\r\n             caption={paneCaption}\r\n             onClose={this._hHide}\r\n          >\r\n            <A.CircleButton\r\n              caption=\"R\"\r\n              style={S.BT_CIRCLE}\r\n              onClick={onRemoveItems}\r\n            />\r\n            <A.SvgHrzResize\r\n              svgStyle={TS.SVG_RESIZE}\r\n              minWidth={RESIZE_MIN_WIDTH}\r\n              maxWidth={RESIZE_MAX_WIDTH}\r\n              getDomNode={this._getRootDiv}\r\n            />\r\n          </A.BrowserCaption>\r\n          <Input\r\n            ref={this._refIWord}\r\n            TS={TS}\r\n            initValue={word}\r\n            onEnter={this._hLoadItem}\r\n          />\r\n          <A.ScrollPane\r\n              className={TS.CL_SCROLL_PANE}\r\n              style={S.SCROLL_PANE}\r\n          >\r\n            { this._renderConfigs(configs) }\r\n          </A.ScrollPane>\r\n        </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default withTheme(NewsPane)\r\n"]}