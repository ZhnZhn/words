{"version":3,"sources":["../../../../src/components/watch-browser/decorators/withDnDList.js"],"names":["_crDragStartList","DRAG","ev","groupCaption","caption","dragStartWithDnDStyle","GROUP","LIST","setTransferTo","event","dragId","xType","_crDropList","WatchActions","dropWithDnDStyle","JSON","parse","dataTransfer","getData","data","dropId","preventDefault","dragDropList","undefined","ITEM","dragDropItem","_crDragEnterList","dragEnterWithDnDStyle","_handlerDragOverList","_handlerDragLeaveList","dragLeaveWithDnDStyle","withDnDList","target","Object","assign","prototype","_handlerDragStartList","_handlerDropList","_handlerDragEnterList"],"mappings":";;;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AACjC,SAAO,gBAAmCC,EAAnC,EAAsC;AAAA,QAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,QAAbC,OAAa,QAAbA,OAAa;;AAC3C,SAAKC,qBAAL,CAA2BH,EAA3B,EAA+B,CAACD,KAAKK,KAAN,EAAaL,KAAKM,IAAlB,CAA/B;AACA,oBAAMC,aAAN,CAAoB;AAClBC,aAAOP,EADW;AAElBQ,cAAWP,YAAX,SAA2BC,OAFT;AAGlBO,aAAOV,KAAKM;AAHM,KAApB;AAKF,GAPA;AAQD,CATD;;AAWA,IAAMK,cAAc,SAAdA,WAAc,CAACX,IAAD,EAAOY,YAAP,EAAwB;AAC1C,SAAO,iBAAoCX,EAApC,EAAuC;AAAA,QAA5BC,YAA4B,SAA5BA,YAA4B;AAAA,QAAdC,OAAc,SAAdA,OAAc;;AAC7C,SAAKU,gBAAL,CAAsBZ,EAAtB;AACA;;AAEM,eAAOa,KAAKC,KAAL,CAAWd,GAAGe,YAAH,CAAgBC,OAAhB,CAAwB,MAAxB,CAAX,CAAP;AAAA,QACEP,KADF,GACoBQ,IADpB,CACER,KADF;AAAA,QACSD,MADT,GACoBS,IADpB,CACST,MADT;AAAA,QAEAU,MAFA,GAEajB,YAFb,SAE6BC,OAF7B;;;AAIN,QAAIO,UAAUV,KAAKM,IAAnB,EAAyB;AACvB,UAAIG,WAAWU,MAAf,EAAuB;AACrBlB,WAAGmB,cAAH;AACAR,qBAAaS,YAAb,CAA0B;AACxBZ,kBAASA,MADe;AAExBU,kBAASA;AAFe,SAA1B;AAID,OAND,MAMO;AACL,eAAOG,SAAP;AACD;AACF,KAVD,MAUO,IAAIZ,UAAUV,KAAKuB,IAAnB,EAAyB;AAC9BtB,SAAGmB,cAAH;AACAR,mBAAaY,YAAb,CAA0B;AACxBf,gBAASA,MADe;AAExBU,gBAASA;AAFe,OAA1B;AAID;AACD,GAzBD;AA0BD,CA3BD;;AA6BA,IAAMM,mBAAmB,SAAnBA,gBAAmB,CAACzB,IAAD,EAAU;AACjC,SAAO,UAASC,EAAT,EAAY;AACjBA,OAAGmB,cAAH;AACA,SAAKM,qBAAL,CAA2BzB,EAA3B,EAA+BD,KAAKM,IAApC;AACD,GAHD;AAID,CALD;;AAOA,IAAMqB,uBAAuB,SAAvBA,oBAAuB,CAAS1B,EAAT,EAAY;AACtCA,KAAGmB,cAAH;AACF,CAFD;;AAIA,IAAMQ,wBAAwB,SAAxBA,qBAAwB,CAAS3B,EAAT,EAAY;AACvCA,KAAGmB,cAAH;AACA,OAAKS,qBAAL,CAA2B5B,EAA3B;AACF,CAHD;;AAKA,IAAM6B,cAAc,SAAdA,WAAc,CAAC9B,IAAD,EAAOY,YAAP,EAAwB;AAC1C,SAAO,UAACmB,MAAD,EAAY;AACjBC,WAAOC,MAAP,CAAcF,OAAOG,SAArB,EAAgC;AAC9BC,6BAAuBpC,iBAAiBC,IAAjB,CADO;AAE9BoC,wBAAkBzB,YAAYX,IAAZ,EAAkBY,YAAlB,CAFY;AAG9ByB,6BAAuBZ,iBAAiBzB,IAAjB,CAHO;AAI9B2B,4BAAsBA,oBAJQ;AAK9BC,6BAAuBA;AALO,KAAhC;AAOD,GARD;AASD,CAVD;;kBAYeE,W","file":"withDnDList.js","sourcesContent":["\r\nimport fnDnD from './fnDnD'\r\n\r\nconst _crDragStartList = (DRAG) => {\r\n  return function({ groupCaption, caption}, ev){\r\n    this.dragStartWithDnDStyle(ev, [DRAG.GROUP, DRAG.LIST])\r\n    fnDnD.setTransferTo({\r\n      event: ev,\r\n      dragId: `${groupCaption};${caption}`,\r\n      xType: DRAG.LIST\r\n    })\r\n };\r\n};\r\n\r\nconst _crDropList = (DRAG, WatchActions) => {\r\n  return function({ groupCaption, caption }, ev){\r\n   this.dropWithDnDStyle(ev)\r\n   //ev.currentTarget.style.borderLeft = \"\";\r\n\r\n   const data = JSON.parse(ev.dataTransfer.getData(\"text\"))\r\n      ,  { xType, dragId } = data\r\n      ,  dropId =  `${groupCaption};${caption};`;\r\n\r\n   if (xType === DRAG.LIST) {\r\n     if (dragId !== dropId) {\r\n       ev.preventDefault()\r\n       WatchActions.dragDropList({\r\n         dragId : dragId,\r\n         dropId : dropId\r\n       })\r\n     } else {\r\n       return undefined;\r\n     }\r\n   } else if (xType === DRAG.ITEM) {\r\n     ev.preventDefault()\r\n     WatchActions.dragDropItem({\r\n       dragId : dragId,\r\n       dropId : dropId\r\n     })\r\n   }\r\n  };\r\n};\r\n\r\nconst _crDragEnterList = (DRAG) => {\r\n  return function(ev){\r\n    ev.preventDefault()\r\n    this.dragEnterWithDnDStyle(ev, DRAG.LIST)\r\n  };\r\n};\r\n\r\nconst _handlerDragOverList = function(ev){\r\n   ev.preventDefault()\r\n};\r\n\r\nconst _handlerDragLeaveList = function(ev){\r\n   ev.preventDefault()\r\n   this.dragLeaveWithDnDStyle(ev)\r\n}\r\n\r\nconst withDnDList = (DRAG, WatchActions) => {\r\n  return (target) => {\r\n    Object.assign(target.prototype, {\r\n      _handlerDragStartList: _crDragStartList(DRAG),\r\n      _handlerDropList: _crDropList(DRAG, WatchActions),\r\n      _handlerDragEnterList: _crDragEnterList(DRAG),\r\n      _handlerDragOverList: _handlerDragOverList,\r\n      _handlerDragLeaveList: _handlerDragLeaveList\r\n    })    \r\n  };\r\n}\r\n\r\nexport default withDnDList\r\n"]}