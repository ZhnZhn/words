{"version":3,"sources":["../../../src/components/watch-browser/EditListDialog.jsx"],"names":["createList","Actions","renameList","deleteList","EDIT_WATCH_COMPLETED","WAT","EDIT_WATCH_FAILED","CREATE_LIST","RENAME_LIST","DELETE_LIST","notSelected","Msg","emptyName","EditListDialog","shouldComponentUpdate","nextProps","nextState","props","isShow","render","theme","store","onClose","TS","createStyle","styleConfig","R_DIALOG","S","DIALOG","BROWSER_CAPTION","TAB_PANE_WIDTH","TAB","INPUT","BT","FLAT_ROOT","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport Actions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\n\r\nimport Msg from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport A from '../zhn-atoms/Atoms';\r\nimport ListCreatePane from './ListCreatePane';\r\nimport ListEditPane from './ListEditPane';\r\nimport ListDeletePane from './ListDeletePane';\r\n\r\nimport S from './Dialog.Style'\r\n\r\nconst { createList, renameList, deleteList } = Actions\r\nconst {\r\n  EDIT_WATCH_COMPLETED, EDIT_WATCH_FAILED,\r\n  CREATE_LIST, RENAME_LIST, DELETE_LIST\r\n} = WAT;\r\nconst { notSelected, emptyName } = Msg;\r\n\r\nclass EditListDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow : PropTypes.bool,\r\n    store : PropTypes.object,\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n        && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            theme,\r\n            isShow, store, onClose\r\n          } = this.props\r\n        , TS = theme.createStyle(styleConfig);\r\n    return (\r\n      <ModalDialog\r\n        //STYLE={TS.BT}\r\n         style={{...TS.R_DIALOG, ...S.DIALOG }}\r\n         captionStyle={TS.BROWSER_CAPTION}\r\n         caption=\"Watch Lists Edit\"\r\n         isShow={isShow}\r\n         isWithButton={false}\r\n         onClose={onClose}\r\n      >\r\n        <A.TabPane width={S.TAB_PANE_WIDTH} isUpdateInit={true}>\r\n           <A.Tab title=\"Create\" style={TS.TAB}>\r\n             <ListCreatePane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={CREATE_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                msgOnIsEmptyName={emptyName}\r\n                onCreate={createList}\r\n                onClose={onClose} />\r\n           </A.Tab>\r\n           <A.Tab title=\"Rename\" style={TS.TAB}>\r\n             <ListEditPane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={RENAME_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                msgOnIsEmptyName={emptyName}\r\n                onRename={renameList}\r\n                onClose={onClose}\r\n             />\r\n           </A.Tab>\r\n           <A.Tab title=\"Delete\" style={TS.TAB}>\r\n             <ListDeletePane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={DELETE_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                onDelete={deleteList}\r\n                onClose={onClose}\r\n             />\r\n           </A.Tab>\r\n        </A.TabPane>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme(EditListDialog)\r\n"],"file":"EditListDialog.js"}