{"version":3,"sources":["../../../src/components/watch-browser/EditListDialog.jsx"],"names":["createList","renameList","deleteList","EDIT_WATCH_COMPLETED","EDIT_WATCH_FAILED","CREATE_LIST","RENAME_LIST","DELETE_LIST","notSelected","emptyName","TAB_PANE_WIDTH","EditListDialog","nextProps","nextState","props","isShow","theme","store","onClose","TS","createStyle","R_DIALOG","BROWSER_CAPTION","TAB","INPUT","BT","FLAT_ROOT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;;;AACA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEQA,U,0BAAAA,U;IAAYC,U,0BAAAA,U;IAAYC,U,0BAAAA,U;AAfhC;;IAiBEC,oB,kCAAAA,oB;IAAsBC,iB,kCAAAA,iB;IACtBC,W,kCAAAA,W;IAAaC,W,kCAAAA,W;IAAaC,W,kCAAAA,W;IAEpBC,W,sBAAAA,W;IAAaC,S,sBAAAA,S;;;AAErB,IAAMC,iBAAiB,OAAvB;;IAEMC,c;;;;;;;;;;;AACJ;;;;;;;;0CAQsBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKE,KAAnB,IACGF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MADvC,EAEE;AACA,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAEO;AAAA,mBAII,KAAKD,KAJT;AAAA,UAEEE,KAFF,UAEEA,KAFF;AAAA,UAGED,MAHF,UAGEA,MAHF;AAAA,UAGUE,KAHV,UAGUA,KAHV;AAAA,UAGiBC,OAHjB,UAGiBA,OAHjB;AAAA,UAKAC,EALA,GAKKH,MAAMI,WAAN,kBALL;;AAMN,aACE;AAAA;AACE;AADF;AAAA,UAEG,OAAOD,GAAGE,QAFb;AAGG,wBAAcF,GAAGG,eAHpB;AAIG,mBAAQ,kBAJX;AAKG,kBAAQP,MALX;AAMG,wBAAc,KANjB;AAOG,mBAASG;AAPZ;AASE;AAAA,0BAAG,OAAH;AAAA,YAAW,OAAOR,cAAlB,EAAkC,cAAc,IAAhD;AACG;AAAA,4BAAG,GAAH;AAAA,cAAO,OAAM,QAAb,EAAsB,OAAOS,GAAGI,GAAhC;AACE;AACG,qBAAON,KADV;AAEG,0BAAYE,GAAGK,KAFlB;AAGG,uBAASL,GAAGM,EAAH,CAAMC,SAHlB;AAIG,+BAAiBvB,oBAJpB;AAKG,4BAAcC,iBALjB;AAMG,6BAAeC,WANlB;AAOG,8BAAgBG,WAPnB;AAQG,gCAAkBC,SARrB;AASG,wBAAUT,UATb;AAUG,uBAASkB,OAVZ;AADF,WADH;AAcG;AAAA,4BAAG,GAAH;AAAA,cAAO,OAAM,QAAb,EAAsB,OAAOC,GAAGI,GAAhC;AACE;AACG,qBAAON,KADV;AAEG,0BAAYE,GAAGK,KAFlB;AAGG,uBAASL,GAAGM,EAAH,CAAMC,SAHlB;AAIG,+BAAiBvB,oBAJpB;AAKG,4BAAcC,iBALjB;AAMG,6BAAeE,WANlB;AAOG,8BAAgBE,WAPnB;AAQG,gCAAkBC,SARrB;AASG,wBAAUR,UATb;AAUG,uBAASiB;AAVZ;AADF,WAdH;AA4BG;AAAA,4BAAG,GAAH;AAAA,cAAO,OAAM,QAAb,EAAsB,OAAOC,GAAGI,GAAhC;AACE;AACG,qBAAON,KADV;AAEG,0BAAYE,GAAGK,KAFlB;AAGG,uBAASL,GAAGM,EAAH,CAAMC,SAHlB;AAIG,+BAAiBvB,oBAJpB;AAKG,4BAAcC,iBALjB;AAMG,6BAAeG,WANlB;AAOG,8BAAgBC,WAPnB;AAQG,wBAAUN,UARb;AASG,uBAASgB;AATZ;AADF;AA5BH;AATF,OADF;AAsDD;;;;;kBAGY,yBAAUP,cAAV,C","file":"EditListDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport Actions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\n\r\nimport Msg from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport A from '../zhn-atoms/Atoms';\r\nimport ListCreatePane from './ListCreatePane';\r\nimport ListEditPane from './ListEditPane';\r\nimport ListDeletePane from './ListDeletePane';\r\n\r\nconst { createList, renameList, deleteList } = Actions\r\nconst {\r\n  EDIT_WATCH_COMPLETED, EDIT_WATCH_FAILED,\r\n  CREATE_LIST, RENAME_LIST, DELETE_LIST\r\n} = WAT;\r\nconst { notSelected, emptyName } = Msg;\r\n\r\nconst TAB_PANE_WIDTH = \"380px\";\r\n\r\nclass EditListDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow : PropTypes.bool,\r\n    store : PropTypes.object,\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n        && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            theme,\r\n            isShow, store, onClose\r\n          } = this.props\r\n        , TS = theme.createStyle(styleConfig);\r\n    return (\r\n      <ModalDialog\r\n        //STYLE={TS.BT}\r\n         style={TS.R_DIALOG}\r\n         captionStyle={TS.BROWSER_CAPTION}\r\n         caption=\"Watch Lists Edit\"\r\n         isShow={isShow}\r\n         isWithButton={false}\r\n         onClose={onClose}\r\n      >\r\n        <A.TabPane width={TAB_PANE_WIDTH} isUpdateInit={true}>\r\n           <A.Tab title=\"Create\" style={TS.TAB}>\r\n             <ListCreatePane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={CREATE_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                msgOnIsEmptyName={emptyName}\r\n                onCreate={createList}\r\n                onClose={onClose} />\r\n           </A.Tab>\r\n           <A.Tab title=\"Rename\" style={TS.TAB}>\r\n             <ListEditPane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={RENAME_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                msgOnIsEmptyName={emptyName}\r\n                onRename={renameList}\r\n                onClose={onClose}\r\n             />\r\n           </A.Tab>\r\n           <A.Tab title=\"Delete\" style={TS.TAB}>\r\n             <ListDeletePane\r\n                store={store}\r\n                inputStyle={TS.INPUT}\r\n                btStyle={TS.BT.FLAT_ROOT}\r\n                actionCompleted={EDIT_WATCH_COMPLETED}\r\n                actionFailed={EDIT_WATCH_FAILED}\r\n                forActionType={DELETE_LIST}\r\n                msgOnNotSelect={notSelected}\r\n                onDelete={deleteList}\r\n                onClose={onClose}\r\n             />\r\n           </A.Tab>\r\n        </A.TabPane>\r\n      </ModalDialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTheme(EditListDialog)\r\n"]}