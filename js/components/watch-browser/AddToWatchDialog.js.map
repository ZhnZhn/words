{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["actionCompleted","WAT","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","notSelected","Msg","CL_BT_DIV","S2","DIALOG","left","BT_ROOT","color","AddToWatchDialog","withValidationLoad","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handleSelectGroup","group","caption","groupCaption","lists","listOptions","_handleSelectList","list","listCaption","_handleAdd","_getValidationMessages","isValid","config","WatchActions","addWatchItem","_updateValidationMessages","msg","push","_handleClose","_crCommandButtons","S","groupOptions","store","getWatchGroups","componentDidMount","unsubscribe","listen","componetWillUnmount","UNSAFE_componentWillReceiveProps","nextProps","isShow","groups","getWatchListsByGroup","shouldComponentUpdate","nextState","render","theme","TS","createStyle","styleConfig","_commandButtons","BT","R_DIALOG","BROWSER_CAPTION","INPUT","Component"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport WatchActions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\nimport Msg from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport RowInputSelect from './RowInputSelect'\r\nimport Row from '../dialogs/Row';\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad';\r\nimport A from './Atoms';\r\n\r\nconst actionCompleted = WAT.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WAT.EDIT_WATCH_FAILED\r\n    , forActionType = WAT.ADD_ITEM;\r\n\r\nconst { notSelected } = Msg;\r\n\r\nconst CL_BT_DIV = 'bt-flat__div';\r\n\r\nconst S2 = {\r\n  DIALOG: {\r\n    left: 'calc(50vw - 142px)'\r\n  },\r\n  BT_ROOT: {\r\n    color: '#3270b4'\r\n  }\r\n};\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow  : PropTypes.bool,\r\n    data    : PropTypes.object,\r\n    store   : PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n    this.state = {\r\n      groupOptions : props.store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] })\r\n       }\r\n       this.props.onClose()\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null\r\n        this.listCaption = null\r\n        this.setState({ groupOptions:groups, listOptions:[] })\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null\r\n          this.setState({ listOptions:lists })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({ listOptions : group.lists })\r\n       }  else {\r\n         this.setState({ listOptions : [] })\r\n       }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n  _handleSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption\r\n      } else {\r\n        this.listCaption = null\r\n      }\r\n  }\r\n  _handleAdd = () => {\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      WatchActions.addWatchItem({ caption, groupCaption, listCaption, config })\r\n    } else {\r\n      this._updateValidationMessages(validationMessages)\r\n    }\r\n  }\r\n  _getValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption) {\r\n      msg.push(notSelected('Group'))\r\n    }\r\n    if (!this.listCaption) {\r\n      msg.push(notSelected('List'))\r\n    }\r\n    msg.isValid = (msg.length === 0)\r\n      ? true\r\n      : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  _crCommandButtons = (S) => {\r\n    return [\r\n      <A.Button.Flat\r\n        key=\"_add\"\r\n        caption=\"Add\"\r\n        title=\"Add Item To Watch List\"\r\n        rootStyle={S2.BT_ROOT}\r\n        clDiv={CL_BT_DIV}\r\n        onClick={this._handleAdd}\r\n       />\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const { theme, isShow, data } = this.props\r\n        , { caption } = data\r\n        , {\r\n            groupOptions, listOptions,\r\n            validationMessages\r\n          } = this.state\r\n        , TS = theme.createStyle(styleConfig)\r\n        , _commandButtons = this._crCommandButtons(TS.BT);\r\n\r\n    return (\r\n      <ModalDialog\r\n         STYLE={TS.BT}\r\n         style={{...TS.R_DIALOG, ...S2.DIALOG}}\r\n         captionStyle={TS.BROWSER_CAPTION}\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={_commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <div>\r\n          <RowInputSelect\r\n            inputStyle={TS.INPUT}\r\n            caption=\"Group:\"\r\n            options={groupOptions}\r\n            onSelect={this._handleSelectGroup}\r\n          />\r\n        </div>\r\n        <div>\r\n          <RowInputSelect\r\n            inputStyle={TS.INPUT}\r\n            caption=\"List:\"\r\n            onSelect={this._handleSelectList}\r\n            options={listOptions}\r\n          />\r\n        </div>\r\n        <Row.Text\r\n          caption=\"Word:\"\r\n          text={caption}\r\n        />\r\n        <A.ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(AddToWatchDialog)\r\n"],"file":"AddToWatchDialog.js"}