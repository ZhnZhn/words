{"version":3,"sources":["../../../src/components/watch-browser/AddToWatchDialog.jsx"],"names":["actionCompleted","EDIT_WATCH_COMPLETED","actionFailed","EDIT_WATCH_FAILED","forActionType","ADD_ITEM","notSelected","AddToWatchDialog","props","_onStore","actionType","data","state","validationMessages","length","setState","onClose","messages","_handleSelectGroup","group","caption","groupCaption","lists","listOptions","_handleSelectList","list","listCaption","_handleAdd","_getValidationMessages","isValid","config","addWatchItem","_updateValidationMessages","msg","push","_handleClose","_crCommandButtons","S","RAISED_ROOT","CL_RAISED_DIV","groupOptions","store","getWatchGroups","unsubscribe","listen","nextProps","isShow","groups","getWatchListsByGroup","nextState","theme","TS","createStyle","_commandButtons","BT","R_DIALOG","BROWSER_CAPTION","INPUT"],"mappings":"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","file":"AddToWatchDialog.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport WatchActions, { WatchActionTypes as WAT } from '../../flux/actions/WatchActions';\r\nimport Msg from '../../constants/MsgWatch';\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\nimport RowInputSelect from '../dialogs/RowInputSelect';\r\nimport Row from '../dialogs/Row';\r\nimport withValidationLoad from '../dialogs/decorators/withValidationLoad';\r\nimport A from './Atoms';\r\n\r\nconst actionCompleted = WAT.EDIT_WATCH_COMPLETED\r\n    , actionFailed =  WAT.EDIT_WATCH_FAILED\r\n    , forActionType = WAT.ADD_ITEM;\r\n\r\nconst { notSelected } = Msg;\r\n\r\n@withValidationLoad\r\nclass AddToWatchDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow  : PropTypes.bool,\r\n    data    : PropTypes.object,\r\n    store   : PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func,\r\n      getWatchListsByGroup: PropTypes.func\r\n    }),\r\n    onClose : PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.groupCaption = null\r\n    this.listCaption = null\r\n    this.state = {\r\n      groupOptions : props.store.getWatchGroups(),\r\n      listOptions : [],\r\n      validationMessages : []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore)\r\n  }\r\n  componetWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    if (actionType === actionCompleted && data.forActionType === forActionType){\r\n       if (this.state.validationMessages.length>0){\r\n         this.setState({ validationMessages:[] })\r\n       }\r\n       this.props.onClose()\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n       this.setState({ validationMessages:data.messages });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props && nextProps.isShow !== this.props.isShow) {\r\n      const groups = nextProps.store.getWatchGroups();\r\n      if (groups !== this.state.groupOptions){\r\n        this.groupCaption = null\r\n        this.listCaption = null\r\n        this.setState({ groupOptions:groups, listOptions:[] })\r\n      } else if (this.groupCaption){\r\n        const lists = nextProps.store.getWatchListsByGroup(this.groupCaption);\r\n        if (lists !== this.state.listOptions){\r\n          this.listCaption = null\r\n          this.setState({ listOptions:lists })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleSelectGroup = (group) => {\r\n    if (group && group.caption){\r\n       this.groupCaption = group.caption;\r\n       if (group.lists){\r\n         this.setState({ listOptions : group.lists })\r\n       }  else {\r\n         this.setState({ listOptions : [] })\r\n       }\r\n    } else {\r\n      this.groupCaption = null\r\n    }\r\n  }\r\n  _handleSelectList = (list) => {\r\n      if (list && list.caption){\r\n        this.listCaption = list.caption\r\n      } else {\r\n        this.listCaption = null\r\n      }\r\n  }\r\n  _handleAdd = () => {\r\n    const validationMessages = this._getValidationMessages();\r\n    if (validationMessages.isValid){\r\n      const { data } = this.props\r\n          , { caption, config } = data\r\n          , { groupCaption, listCaption } = this;\r\n\r\n      WatchActions.addWatchItem({ caption, groupCaption, listCaption, config })\r\n    } else {\r\n      this._updateValidationMessages(validationMessages)\r\n    }\r\n  }\r\n  _getValidationMessages = () => {\r\n    const msg = [];\r\n    if (!this.groupCaption) {\r\n      msg.push(notSelected('Group'))\r\n    }\r\n    if (!this.listCaption) {\r\n      msg.push(notSelected('List'))\r\n    }\r\n    msg.isValid = (msg.length === 0)\r\n      ? true\r\n      : false\r\n    return msg;\r\n  }\r\n\r\n  _handleClose = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  _crCommandButtons = (S) => {\r\n    return [\r\n      <A.Button.Raised\r\n        caption=\"Add\"\r\n        title=\"Add Item To Watch List\"\r\n        rootStyle={S.RAISED_ROOT}\r\n        clDiv={S.CL_RAISED_DIV}\r\n        onClick={this._handleAdd}\r\n       />\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const { theme, isShow, data } = this.props\r\n        , { caption } = data\r\n        , {\r\n            groupOptions, listOptions,\r\n            validationMessages\r\n          } = this.state\r\n        , TS = theme.createStyle(styleConfig)\r\n        , _commandButtons = this._crCommandButtons(TS.BT);\r\n\r\n    return (\r\n      <ModalDialog\r\n         STYLE={TS.BT}\r\n         style={TS.R_DIALOG}\r\n         captionStyle={TS.BROWSER_CAPTION}\r\n         caption=\"Add To Watch List\"\r\n         isShow={isShow}\r\n         commandButtons={_commandButtons}\r\n         onClose={this._handleClose}\r\n      >\r\n        <RowInputSelect\r\n          inputStyle={TS.INPUT}\r\n          caption=\"Group:\"\r\n          options={groupOptions}\r\n          onSelect={this._handleSelectGroup}\r\n        />\r\n        <RowInputSelect\r\n          inputStyle={TS.INPUT}\r\n          caption=\"List:\"\r\n          onSelect={this._handleSelectList}\r\n          options={listOptions}\r\n        />\r\n        <Row.Text\r\n          caption=\"Item:\"\r\n          text={caption}\r\n        />\r\n        <A.ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(AddToWatchDialog)\r\n"]}