{"version":3,"sources":["../../../src/components/watch-browser/GroupEditPane.jsx"],"names":["GroupEditPane","props","_onStore","actionType","data","actionCompleted","actionFailed","forActionType","store","_handleClear","setState","groupOptions","getWatchGroups","validationMessages","messages","_handleSelectGroup","item","caption","captionFrom","inputText","setValue","state","length","_handleRename","onRename","msgOnNotSelect","msgOnIsEmptyName","captionTo","getValue","msg","push","_crPrimaryBt","btStyle","_refInputText","c","unsubscribe","listen","inputStyle","onClose"],"mappings":"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","file":"GroupEditPane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport A from './Atoms'\r\n\r\nclass GroupEditPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func\r\n    }),\r\n    actionCompleted: PropTypes.string,\r\n    actionFailed: PropTypes.string,\r\n    forActionType: PropTypes.string,\r\n    msgOnIsEmptyName: PropTypes.func,\r\n    msgOnNotSelect: PropTypes.func,\r\n\r\n    inputStyle: PropTypes.object,\r\n    btStyle: PropTypes.object,\r\n\r\n    onRename: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.captionFrom = null\r\n    this.state = {\r\n      groupOptions: props.store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const { actionCompleted, actionFailed, forActionType, store } = this.props\r\n    if (actionType === actionCompleted){\r\n      if (data.forActionType === forActionType){\r\n        this._handleClear()\r\n      }\r\n      this.setState({ groupOptions : store.getWatchGroups() })\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n      this.setState({ validationMessages: data.messages })\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n     if (item && item.caption){\r\n       this.captionFrom = item.caption\r\n     } else {\r\n       this.captionFrom = null\r\n     }\r\n  }\r\n\r\n  _handleClear = () => {\r\n    this.inputText.setValue('')\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n  }\r\n  _handleRename = () => {\r\n     const { onRename, msgOnNotSelect, msgOnIsEmptyName } = this.props\r\n         , captionTo = this.inputText.getValue();\r\n     if (captionTo && this.captionFrom) {\r\n       onRename({ captionFrom: this.captionFrom, captionTo })\r\n     } else {\r\n       const msg = [];\r\n       if (!this.captionFrom){\r\n         msg.push(msgOnNotSelect('Group From'))\r\n       }\r\n       if (!captionTo){\r\n         msg.push(msgOnIsEmptyName('Group To'))\r\n       }\r\n       this.setState({ validationMessages:msg })\r\n     }\r\n  }\r\n\r\n  _crPrimaryBt = (btStyle) => {\r\n    return (\r\n      <A.Button.Primary\r\n         style={btStyle}\r\n         caption=\"Edit\"\r\n         title=\"Edit Group Name\"\r\n         onClick={this._handleRename}\r\n      />\r\n    );\r\n  }\r\n\r\n  _refInputText = c => this.inputText = c\r\n\r\n  render(){\r\n    const {\r\n            inputStyle, btStyle,\r\n            onClose\r\n          } = this.props\r\n        , {\r\n            groupOptions, validationMessages\r\n          } = this.state;\r\n    return (\r\n       <div>\r\n          <A.RowInputSelect\r\n             caption=\"Group From:\"\r\n             inputStyle={inputStyle}\r\n             options={groupOptions}\r\n             onSelect={this._handleSelectGroup}\r\n          />\r\n         <A.RowInputText\r\n           ref={this._refInputText}\r\n           caption=\"Group To:\"\r\n           inputStyle={inputStyle}\r\n         />\r\n         <A.ValidationMessages\r\n           validationMessages={validationMessages}\r\n         />\r\n         <A.RowButtons\r\n            btStyle={btStyle}\r\n            Primary={this._crPrimaryBt(btStyle)}\r\n            onClear={this._handleClear}\r\n            onClose={onClose}\r\n         />\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupEditPane\r\n"]}