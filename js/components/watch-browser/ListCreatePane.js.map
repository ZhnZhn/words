{"version":3,"sources":["../../../src/components/watch-browser/ListCreatePane.jsx"],"names":["ListCreatePane","props","_onStore","actionType","data","actionCompleted","actionFailed","forActionType","store","isUpdateGroup","_handleClear","setState","groupOptions","getWatchGroups","validationMessages","messages","_handleSelectGroup","item","caption","captionGroup","inputText","setValue","state","length","_handleCreate","onCreate","msgOnNotSelect","msgOnIsEmptyName","captionList","getValue","msg","push","_crPrimaryBt","btStyle","_refInputText","c","unsubscribe","listen","inputStyle","onClose"],"mappings":"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","file":"ListCreatePane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport A from './Atoms'\r\n\r\nclass ListCreatePane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func\r\n    }),\r\n    actionCompleted: PropTypes.string,\r\n    actionFailed: PropTypes.string,\r\n    forActionType: PropTypes.string,\r\n    msgOnNotSelect: PropTypes.func,\r\n    msgOnIsEmptyName: PropTypes.func,\r\n\r\n    inputStyle: PropTypes.object,\r\n    btStyle: PropTypes.object,\r\n\r\n    onCreate: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.captionGroup = null\r\n    this.state = {\r\n      groupOptions: props.store.getWatchGroups(),\r\n      isUpdateGroup: false,\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n       .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const { actionCompleted, actionFailed, forActionType, store } = this.props;\r\n    if (actionType === actionCompleted){\r\n        let isUpdateGroup = true;\r\n        if (data.forActionType === forActionType){\r\n          this._handleClear()\r\n          isUpdateGroup = false\r\n        }\r\n        this.setState({\r\n           groupOptions: store.getWatchGroups(),\r\n           isUpdateGroup\r\n        });\r\n    } else if (actionType === actionFailed && data.forActionType === forActionType){\r\n      this.setState({\r\n        validationMessages: data.messages,\r\n        isUpdateGroup:false\r\n      })\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n    if (item && item.caption){\r\n      this.captionGroup = item.caption\r\n    } else {\r\n      this.captionGroup = null\r\n    }\r\n  }\r\n\r\n  _handleClear = () => {\r\n     this.inputText.setValue('')\r\n     if (this.state.validationMessages.length>0){\r\n       this.setState({ validationMessages: [], isUpdateGroup:false })\r\n     }\r\n  }\r\n\r\n  _handleCreate = () => {\r\n     const { onCreate, msgOnNotSelect, msgOnIsEmptyName } = this.props\r\n         , captionList = this.inputText.getValue();\r\n     if (this.captionGroup && captionList){\r\n       onCreate({\r\n          captionGroup : this.captionGroup,\r\n          captionList : captionList\r\n       });\r\n     } else {\r\n       const msg = [];\r\n       if (!this.captionGroup) { msg.push(msgOnNotSelect('In Group')); }\r\n       if (!captionList)       { msg.push(msgOnIsEmptyName('List')); }\r\n       this.setState({ validationMessages:msg, isUpdateGroup:false });\r\n     }\r\n  }\r\n\r\n  _crPrimaryBt = (btStyle) => {\r\n    return (\r\n      <A.Button.Primary\r\n         style={btStyle}\r\n         caption=\"Create\"\r\n         title=\"Create New List\"\r\n         onClick={this._handleCreate}\r\n      />\r\n    );\r\n  }\r\n\r\n  _refInputText = c => this.inputText = c\r\n\r\n  render(){\r\n    const {\r\n            inputStyle, btStyle,\r\n            onClose\r\n          } = this.props\r\n        , { groupOptions, validationMessages } = this.state;\r\n    return (\r\n      <div>\r\n        <A.RowInputSelect\r\n           inputStyle={inputStyle}\r\n           caption=\"In Group:\"\r\n           options={groupOptions}\r\n           onSelect={this._handleSelectGroup}\r\n        />\r\n        <A.RowInputText\r\n           ref={this._refInputText}\r\n           inputStyle={inputStyle}\r\n           caption=\"List:\"\r\n        />\r\n        <A.ValidationMessages\r\n          validationMessages={validationMessages}\r\n        />\r\n        <A.RowButtons\r\n           btStyle={btStyle}\r\n           Primary={this._crPrimaryBt(btStyle)}\r\n           onClear={this._handleClear}\r\n           onClose={onClose}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListCreatePane\r\n"]}