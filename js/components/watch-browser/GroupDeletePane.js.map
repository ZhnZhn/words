{"version":3,"sources":["../../../src/components/watch-browser/GroupDeletePane.jsx"],"names":["GroupDeletePane","props","_onStore","actionType","data","actionCompleted","forActionType","store","_handleClear","setState","groupOptions","getWatchGroups","_handleSelectGroup","item","caption","state","validationMessages","length","_handleDeleteGroup","onDelete","msgOnNotSelect","_crPrimaryBt","btStyle","unsubscribe","listen","inputStyle","onClose"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAGA;;;;;;IAEMA,e;;;AACJ;;;;;;;;;;;;;;;;AAkBA,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAgBlBC,QAhBkB,GAgBP,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,wBACmB,MAAKH,KADxB;AAAA,UACvBI,eADuB,eACvBA,eADuB;AAAA,UACNC,aADM,eACNA,aADM;AAAA,UACSC,KADT,eACSA,KADT;;AAE/B,UAAIJ,eAAeE,eAAnB,EAAoC;AAClC,YAAID,KAAKE,aAAL,KAAuBA,aAA3B,EAAyC;AACvC,gBAAKE,YAAL;AACD;AACD,cAAKC,QAAL,CAAc,EAAEC,cAAeH,MAAMI,cAAN,EAAjB,EAAd;AACD;AACF,KAxBiB;;AAAA,UA0BlBC,kBA1BkB,GA0BG,UAACC,IAAD,EAAU;AAC5B,UAAIA,QAAQA,KAAKC,OAAjB,EAAyB;AACvB,cAAKA,OAAL,GAAeD,KAAKC,OAApB;AACD,OAFD,MAEO;AACL,cAAKA,OAAL,GAAe,IAAf;AACD;AACH,KAhCiB;;AAAA,UAkClBN,YAlCkB,GAkCH,YAAM;AACnB,UAAI,MAAKO,KAAL,CAAWC,kBAAX,CAA8BC,MAA9B,GAAqC,CAAzC,EAA2C;AACzC,cAAKR,QAAL,CAAc,EAAEO,oBAAmB,EAArB,EAAd;AACD;AACF,KAtCiB;;AAAA,UAwClBE,kBAxCkB,GAwCG,YAAM;AAAA,yBACa,MAAKjB,KADlB;AAAA,UAChBkB,QADgB,gBAChBA,QADgB;AAAA,UACNC,cADM,gBACNA,cADM;;AAExB,UAAI,MAAKN,OAAT,EAAiB;AACfK,iBAAS,EAAEL,SAAQ,MAAKA,OAAf,EAAT;AACD,OAFD,MAEO;AACL,cAAKL,QAAL,CAAc,EAAEO,oBAAmB,CAACI,eAAe,OAAf,CAAD,CAArB,EAAd;AACD;AACH,KA/CiB;;AAAA,UAiDlBC,YAjDkB,GAiDH,UAACC,OAAD,EAAa;AAC1B,aACE,8CAAG,MAAH,CAAU,OAAV;AACG,eAAOA,OADV;AAEG,iBAAQ,QAFX;AAGG,eAAM,cAHT;AAIG,iBAAS,MAAKJ;AAJjB,QADF;AAQD,KA1DiB;;AAEhB,UAAKJ,OAAL,GAAe,IAAf;AACA,UAAKC,KAAL,GAAa;AACXL,oBAAcT,MAAMM,KAAN,CAAYI,cAAZ,EADH;AAEXK,0BAAoB;AAFT,KAAb;AAHgB;AAOjB;;;;wCAEkB;AACjB,WAAKO,WAAL,GAAmB,KAAKtB,KAAL,CAAWM,KAAX,CAChBiB,MADgB,CACT,KAAKtB,QADI,CAAnB;AAED;;;2CACqB;AACpB,WAAKqB,WAAL;AACD;;;6BA6CO;AAAA,mBAIM,KAAKtB,KAJX;AAAA,UAEIwB,UAFJ,UAEIA,UAFJ;AAAA,UAEgBH,OAFhB,UAEgBA,OAFhB;AAAA,UAGII,OAHJ,UAGIA,OAHJ;AAAA,mBAOM,KAAKX,KAPX;AAAA,UAMIL,YANJ,UAMIA,YANJ;AAAA,UAMkBM,kBANlB,UAMkBA,kBANlB;;;AASJ,aACG;AAAA;AAAA;AACE,sDAAG,cAAH;AACE,sBAAYS,UADd;AAEE,mBAAQ,QAFV;AAGE,mBAASf,YAHX;AAIE,oBAAU,KAAKE;AAJjB,UADF;AAOE,sDAAG,kBAAH;AACE,8BAAoBI;AADtB,UAPF;AAUE,sDAAG,UAAH;AACE,mBAASM,OADX;AAEE,mBAAS,KAAKD,YAAL,CAAkBC,OAAlB,CAFX;AAGE,wBAAc,IAHhB;AAIE,mBAASI;AAJX;AAVF,OADH;AAmBH;;;;AA/GH;;kBAkHe1B,e","file":"GroupDeletePane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport A from './Atoms'\r\n\r\nclass GroupDeletePane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func,\r\n      getWatchGroups: PropTypes.func\r\n    }),\r\n    actionCompleted: PropTypes.string,\r\n    forActionType: PropTypes.string,\r\n    msgOnNotSelect: PropTypes.func,\r\n\r\n    inputStyle: PropTypes.object,\r\n    btStyle: PropTypes.object,\r\n\r\n    onDelete: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.caption = null\r\n    this.state = {\r\n      groupOptions: props.store.getWatchGroups(),\r\n      validationMessages: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const { actionCompleted, forActionType, store } = this.props;\r\n    if (actionType === actionCompleted) {\r\n      if (data.forActionType === forActionType){\r\n        this._handleClear()\r\n      }\r\n      this.setState({ groupOptions : store.getWatchGroups() })\r\n    }\r\n  }\r\n\r\n  _handleSelectGroup = (item) => {\r\n     if (item && item.caption){\r\n       this.caption = item.caption\r\n     } else {\r\n       this.caption = null\r\n     }\r\n  }\r\n\r\n  _handleClear = () => {\r\n    if (this.state.validationMessages.length>0){\r\n      this.setState({ validationMessages:[] })\r\n    }\r\n  }\r\n\r\n  _handleDeleteGroup = () => {\r\n     const { onDelete, msgOnNotSelect } = this.props;\r\n     if (this.caption){\r\n       onDelete({ caption:this.caption })\r\n     } else {\r\n       this.setState({ validationMessages:[msgOnNotSelect('Group')] })\r\n     }\r\n  }\r\n\r\n  _crPrimaryBt = (btStyle) => {\r\n    return (\r\n      <A.Button.Primary\r\n         style={btStyle}\r\n         caption=\"Delete\"\r\n         title=\"Delete Group\"\r\n         onClick={this._handleDeleteGroup}\r\n      />\r\n    );\r\n  }\r\n\r\n  render(){\r\n      const {\r\n              inputStyle, btStyle,\r\n              onClose\r\n            } = this.props\r\n          , {\r\n              groupOptions, validationMessages\r\n            } = this.state;\r\n\r\n      return (\r\n         <div>\r\n           <A.RowInputSelect\r\n             inputStyle={inputStyle}\r\n             caption=\"Group:\"\r\n             options={groupOptions}\r\n             onSelect={this._handleSelectGroup}\r\n           />\r\n           <A.ValidationMessages\r\n             validationMessages={validationMessages}\r\n           />\r\n           <A.RowButtons\r\n             btStyle={btStyle}\r\n             Primary={this._crPrimaryBt(btStyle)}\r\n             withoutClear={true}\r\n             onClose={onClose}\r\n           />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroupDeletePane\r\n"]}