{"version":3,"sources":["../../../../src/components/items/word/WordDef.jsx"],"names":["S","FILL_OPEN","OC_CAPTION","color","OC_AFTER","fontWeight","OC_CHILDREN","paddingLeft","paddingRight","Span","style","text","WordDef","_renderDefinitions","results","map","result","index","definition","partOfSpeech","_afterComp","render","props","isShow","config","Component","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,SAAS,EAAE,OADH;AAERC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAFJ;AAKRC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,KAAK,EAAE,SADC;AAERE,IAAAA,UAAU,EAAE;AAFJ,GALF;AASRC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAE,EADF;AAEXC,IAAAA,YAAY,EAAE;AAFH;AATL,CAAV;;AAeA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,SACX;AAAM,IAAA,KAAK,EAAED;AAAb,aACSC,IADT,CADW;AAAA,CAAb;;IAOMC,O;;;;;;;;;;;;;;UAMJC,kB,GAAqB,UAACC,OAAD,EAAaJ,KAAb,EAAuB;AAAA,UAAtBI,OAAsB;AAAtBA,QAAAA,OAAsB,GAAd,EAAc;AAAA;;AAC1C,aAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,YAE5BC,UAF4B,GAI1BF,MAJ0B,CAE5BE,UAF4B;AAAA,YAG5BC,YAH4B,GAI1BH,MAJ0B,CAG5BG,YAH4B;AAAA,YAK9BC,UAL8B,GAM3B,gCAAC,IAAD;AACG,UAAA,KAAK,EAAEpB,CAAC,CAACI,QADZ;AAEG,UAAA,IAAI,EAAEe;AAFT,UAN2B;;AAWpC,eACE,gCAAC,gBAAD,CAAG,SAAH;AACE,UAAA,GAAG,EAAEF,KADP;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,KAAK,EAAEP,KAHT;AAIE,UAAA,OAAO,EAAEQ,UAJX;AAKE,UAAA,QAAQ,EAAElB,CAAC,CAACC,SALd;AAME,UAAA,YAAY,EAAED,CAAC,CAACE,UANlB;AAOE,UAAA,gBAAgB,EAAEkB,UAPpB;AAQE,UAAA,aAAa,EAAEpB,CAAC,CAACM;AARnB,WAUE,gCAAC,mBAAD;AACE,UAAA,MAAM,EAAEU;AADV,UAVF,EAaE,gCAAC,oBAAD;AACE,UAAA,MAAM,EAAEA;AADV,UAbF,CADF;AAmBD,OA9BM,CAAP;AA+BD,K;;;;;;;SAEDK,M,GAAA,kBAAQ;AAAA,sBAII,KAAKC,KAJT;AAAA,QAEEC,MAFF,eAEEA,MAFF;AAAA,QAEUb,KAFV,eAEUA,KAFV;AAAA,QAGEc,MAHF,eAGEA,MAHF;AAKN,WACE,gCAAC,gBAAD,CAAG,QAAH;AACE,MAAA,KAAK,EAAEd,KADT;AAEE,MAAA,MAAM,EAAEa;AAFV,OAIG,KAAKV,kBAAL,CAAwBW,MAAM,CAACV,OAA/B,EAAwCJ,KAAxC,CAJH,CADF;AAQD,G;;;EArDmBe,gB;;AAAhBb,O,CAEGc,Y,GAAe;AACpBF,EAAAA,MAAM,EAAE;AADY,C;eAsDTZ,O","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport A from '../../Comp'\r\nimport WordSyn from './WordSyn'\r\nimport WordNyms from './WordNyms'\r\n\r\nconst S = {\r\n  FILL_OPEN: \"black\",\r\n  OC_CAPTION: {\r\n    color: 'black'\r\n  },\r\n  OC_AFTER: {\r\n    color: '#0c7abf',\r\n    fontWeight: 800\r\n  },\r\n  OC_CHILDREN: {\r\n    paddingLeft: 16,\r\n    paddingRight: 16\r\n  }\r\n};\r\n\r\nconst Span = ({ style, text }) => (\r\n  <span style={style}>\r\n    &nbsp;{text}\r\n  </span>\r\n);\r\n\r\n\r\nclass WordDef extends Component {\r\n\r\n  static defaultProps = {\r\n    config: {}\r\n  }\r\n\r\n  _renderDefinitions = (results=[], style) => {\r\n    return results.map((result, index) => {\r\n      const {\r\n              definition,\r\n              partOfSpeech,\r\n            } = result\r\n          , _afterComp = (\r\n               <Span\r\n                  style={S.OC_AFTER}\r\n                  text={partOfSpeech}\r\n                />\r\n              );\r\n      return (\r\n        <A.OpenClose\r\n          key={index}\r\n          isClose={true}\r\n          style={style}\r\n          caption={definition}\r\n          fillOpen={S.FILL_OPEN}\r\n          captionStyle={S.OC_CAPTION}\r\n          afterCaptionComp={_afterComp}\r\n          childrenStyle={S.OC_CHILDREN}\r\n        >\r\n          <WordSyn\r\n            result={result}\r\n          />\r\n          <WordNyms\r\n            result={result}\r\n          />\r\n        </A.OpenClose>\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            isShow, style,\r\n            config\r\n          } = this.props;\r\n    return (\r\n      <A.ShowHide\r\n        style={style}\r\n        isShow={isShow}\r\n      >\r\n        {this._renderDefinitions(config.results, style)}\r\n      </A.ShowHide>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordDef\r\n"],"file":"WordDef.js"}