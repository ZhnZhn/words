{"version":3,"sources":["../../../src/components/zhn-atoms/SvgHrzResize.jsx"],"names":["CL_RESIZE","S","ROOT_DIV","display","lineHeight","position","top","LEFT_DIV","marginLeft","SvgHrzResize","props","_initDomNode","minWidth","maxWidth","getDomNode","domNode","initWidth","getBoundingClientRect","width","currentWidth","minDelta","maxDelta","_increaseStepValue","countStep","step","delta","_resizeLeft","style","_resizeRight","_handlerStartResize","fnResize","id","_handlerStopResize","setInterval","isOnResizeAfter","clearInterval","isResizeAfter","onResizeAfter","state","svgStyle","bind","defaultProps"],"mappings":"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","file":"SvgHrzResize.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst CL_RESIZE = 'svg-resize';\r\nconst S = {\r\n  ROOT_DIV : {\r\n    display : 'inline-block',\r\n    lineHeight: '24px',\r\n    position: 'relative',\r\n    top: '2px'\r\n  },\r\n  LEFT_DIV : {\r\n    marginLeft : '10px'\r\n  }\r\n};\r\n\r\nclass SvgHrzResize extends Component {\r\n  static defaultProps = {\r\n    getDomNode: () => {}\r\n  }\r\n\r\n  constructor(props){\r\n    super();\r\n    this.id = null;\r\n    this.domNode = null;\r\n    this.delta = 0;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n    this.isResizeAfter = (typeof props.onResizeAfter === 'function')\r\n           ? true\r\n           : false;\r\n    this.state = {};\r\n  }\r\n\r\n  _initDomNode = () => {\r\n    const { minWidth, maxWidth, getDomNode} = this.props;\r\n    this.domNode = getDomNode()\r\n    this.initWidth = this.domNode.getBoundingClientRect().width;\r\n    this.currentWidth = this.initWidth;\r\n    this.minDelta = minWidth - this.initWidth;\r\n    this.maxDelta = maxWidth - this.initWidth;\r\n  }\r\n\r\n  _increaseStepValue = () => {\r\n    this.countStep +=1;\r\n    if ( this.countStep > 30){\r\n      this.step = 3;\r\n    } else if ( this.countStep > 15){\r\n      this.step = 2;\r\n    }\r\n    if ( (this.maxDelta - this.delta) < 20 ||\r\n         (this.delta - this.minDelta) < 20    ){\r\n      this.step = 1;\r\n    }\r\n  }\r\n\r\n  _resizeLeft = () => {\r\n    if (this.delta > this.minDelta){\r\n      this.delta -= this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n  _resizeRight = () => {\r\n    if (this.delta < this.maxDelta){\r\n      this.delta += this.step;\r\n      this.currentWidth = this.initWidth + this.delta;\r\n      this.domNode.style.width = this.currentWidth + 'px';\r\n      this._increaseStepValue();\r\n    }\r\n  }\r\n  _handlerStartResize = (fnResize) => {\r\n    if (!this.domNode){\r\n       this._initDomNode()\r\n    }\r\n\r\n    if (this.id !== null){\r\n      this._handlerStopResize(false);\r\n    }\r\n    this.id = setInterval(fnResize, 5);\r\n  }\r\n  _handlerStopResize = (isOnResizeAfter) => {\r\n    clearInterval(this.id);\r\n    this.id = null;\r\n    this.step = 1;\r\n    this.countStep = 0;\r\n\r\n    if (isOnResizeAfter && this.isResizeAfter){\r\n      this.props.onResizeAfter(this.currentWidth);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { svgStyle } = this.props;\r\n    return (\r\n      <div style={S.ROOT_DIV}>\r\n        <div\r\n           className={CL_RESIZE}\r\n           style={{ ...S.LEFT_DIV, ...svgStyle }}\r\n           title=\"Resize container horizontal left\"\r\n           onMouseDown={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onMouseUp={this._handlerStopResize.bind(null, true)}\r\n           onTouchStart={this._handlerStartResize.bind(null, this._resizeLeft)}\r\n           onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n        >\r\n           <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n               preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                />\r\n               <path\r\n                   d=\"M 6,2 L 1,6 6,10\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n                   fill=\"none\"\r\n               />\r\n          </svg>\r\n      </div>\r\n      <div\r\n         className={CL_RESIZE}\r\n         style={{ ...S.LEFT_DIV, ...svgStyle }}         \r\n         title=\"Resize container horizontal right\"\r\n         onMouseDown={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onMouseUp={this._handlerStopResize.bind(null, true)}\r\n         onTouchStart={this._handlerStartResize.bind(null, this._resizeRight)}\r\n         onTouchEnd={this._handlerStopResize.bind(null, true)}\r\n      >\r\n        <svg viewBox=\"0 0 12 12\" width=\"100%\" height=\"100%\"\r\n             preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n             <path\r\n                   d=\"M 1,6 L 11,6\"\r\n                   strokeWidth=\"2\"\r\n                   strokeLinecap=\"round\"\r\n            />\r\n            <path\r\n                  d=\"M 6,2 L 11,6 6,10\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  fill=\"none\"\r\n           />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default SvgHrzResize\r\n"]}