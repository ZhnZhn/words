{"version":3,"sources":["../../../src/components/zhn-atoms/TabPane.jsx"],"names":["S","TAB_CAPTIONS","paddingTop","paddingLeft","paddingRight","TABS","width","height","TAB_SELECTED","display","NONE","TabPane","state","selectedTabIndex","_handleClickTab","index","setState","_renderTabs","children","props","map","tab","isSelected","key","id","onClick","bind","_renderComponents","_isSelected","_divStyle","getSelectedTabIndex","render","style","tabStyle","Component"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,WAAW,EAAE,EAFD;AAGZC,IAAAA,YAAY,EAAE;AAHF,GADN;AAMRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GANE;AAURC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,OADG;AAEZH,IAAAA,KAAK,EAAE,MAFK;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAVN;AAeRG,EAAAA,IAAI,EAAE;AACJD,IAAAA,OAAO,EAAE;AADL;AAfE,CAAV;;IAoBME,O;;;;;;;;;;;UAUJC,K,GAAQ;AACNC,MAAAA,gBAAgB,EAAE;AADZ,K;;UAKRC,e,GAAkB,UAACC,KAAD,EAAW;AAC3B,YAAKC,QAAL,CAAc;AAAEH,QAAAA,gBAAgB,EAAEE;AAApB,OAAd;AACD,K;;UAEDE,W,GAAc,YAAM;AACT,UAAEC,QAAF,GAAe,MAAKC,KAApB,CAAED,QAAF;AAAA,UACFL,gBADE,GACmB,MAAKD,KADxB,CACFC,gBADE;AAEN,aAAOK,QAAQ,CAACE,GAAT,CAAa,UAACC,GAAD,EAAMN,KAAN,EAAgB;AACjC,YAAMO,UAAU,GAAIP,KAAK,KAAKF,gBAA9B;AACA,4BAAO,yBAAaQ,GAAb,EAAkB;AACvBE,UAAAA,GAAG,EAAER,KADkB;AAEvBS,UAAAA,EAAE,EAAET,KAFmB;AAGvBU,UAAAA,OAAO,EAAE,MAAKX,eAAL,CAAqBY,IAArB,CAA0B,IAA1B,EAAgCX,KAAhC,CAHc;AAIvBO,UAAAA,UAAU,EAAVA;AAJuB,SAAlB,CAAP;AAMF,OARM,CAAP;AASJ,K;;UAEDK,iB,GAAoB,YAAM;AAChB,UAAET,QAAF,GAAe,MAAKC,KAApB,CAAED,QAAF;AAAA,UACFL,gBADE,GACmB,MAAKD,KADxB,CACFC,gBADE;AAEN,aAAOK,QAAQ,CAACE,GAAT,CAAa,UAACC,GAAD,EAAMN,KAAN,EAAgB;AAClC,YAAMa,WAAW,GAAIb,KAAK,KAAKF,gBAA/B;AAAA,YACEgB,SAAS,GAAGD,WAAW,GAAG5B,CAAC,CAACQ,YAAL,GAAoBR,CAAC,CAACU,IAD/C;;AAEA,4BACE;AAAK,UAAA,KAAK,EAAEmB,SAAZ;AAAA,iCAEI,yBAAaR,GAAG,CAACF,KAAJ,CAAUD,QAAvB,EAAiC;AAC/BK,YAAAA,GAAG,EAAE,SAASR,KADiB;AAE/BO,YAAAA,UAAU,EAAEM;AAFmB,WAAjC;AAFJ,WAA4B,MAAIb,KAAhC,CADF;AAUD,OAbM,CAAP;AAcH,K;;UAmBDe,mB,GAAsB,YAAM;AAC1B,aAAO,MAAKlB,KAAL,CAAWC,gBAAlB;AACD,K;;;;;;;SAnBDkB,M,GAAA,kBAAQ;AAAA,sBAIF,KAAKZ,KAJH;AAAA,QAEJa,KAFI,eAEJA,KAFI;AAAA,QAGJC,QAHI,eAGJA,QAHI;AAKN,wBACE;AAAK,MAAA,KAAK,EAAED,KAAZ;AAAA,8BACE;AAAM,QAAA,KAAK,gCAAMhC,CAAC,CAACC,YAAR,EAAyBgC,QAAzB,CAAX;AAAA,kBACI,KAAKhB,WAAL;AADJ,QADF,eAIE;AAAK,QAAA,KAAK,EAAEjB,CAAC,CAACK,IAAd;AAAA,kBACI,KAAKsB,iBAAL;AADJ,QAJF;AAAA,MADF;AAUD,G;;;EAnEmBO,gB;;eA0EPvB,O","sourcesContent":["import { Component, cloneElement } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst S = {\r\n  TAB_CAPTIONS: {\r\n    paddingTop: 10,\r\n    paddingLeft: 10,\r\n    paddingRight: 5\r\n  },\r\n  TABS: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  TAB_SELECTED: {\r\n    display: 'block',\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass TabPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    children: PropTypes.arrayOf(PropTypes.node)\r\n  }\r\n  */\r\n\r\n\r\n  state = {\r\n    selectedTabIndex: 0,\r\n  }\r\n\r\n\r\n  _handleClickTab = (index) => {\r\n    this.setState({ selectedTabIndex: index });\r\n  }\r\n\r\n  _renderTabs = () => {\r\n       const { children } = this.props\r\n       , { selectedTabIndex } = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex);\r\n          return cloneElement(tab, {\r\n            key: index,\r\n            id: index,\r\n            onClick: this._handleClickTab.bind(null, index),\r\n            isSelected\r\n          })\r\n       })\r\n  }\r\n\r\n  _renderComponents = () => {\r\n      const { children } = this.props\r\n      , { selectedTabIndex } = this.state;\r\n      return children.map((tab, index) => {\r\n        const _isSelected = (index === selectedTabIndex)\r\n        , _divStyle = _isSelected ? S.TAB_SELECTED : S.NONE;\r\n        return (\r\n          <div style={_divStyle} key={'a'+index}>\r\n            {\r\n              cloneElement(tab.props.children, {\r\n                key: 'comp' + index,\r\n                isSelected: _isSelected\r\n              })\r\n            }\r\n          </div>\r\n        );\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      style,\r\n      tabStyle\r\n    } = this.props;\r\n    return (\r\n      <div style={style}>\r\n        <div  style={{...S.TAB_CAPTIONS, ...tabStyle}}>\r\n           {this._renderTabs()}\r\n        </div>\r\n        <div style={S.TABS}>\r\n           {this._renderComponents()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex = () => {\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"],"file":"TabPane.js"}