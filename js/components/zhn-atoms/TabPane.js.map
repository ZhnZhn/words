{"version":3,"sources":["../../../src/components/zhn-atoms/TabPane.jsx"],"names":["CL_UL","S","UL","listStyle","marginTop","marginLeft","marginRight","borderBottom","DIV","width","height","BLOCK","display","NONE","TabPane","props","_handleClickTab","index","setState","selectedTabIndex","_renderTabs","children","state","map","tab","isSelected","React","cloneElement","key","onClick","bind","_renderComponents","components","comp","divStyle","getSelectedTabIndex","isUpdateInit","UNSAFE_componentWillReceiveProps","nextProps","render","Component"],"mappings":";;;;;;;;;;;AAAA;;AACA;AAEA,IAAMA,KAAK,GAAG,eAAd;AAEA,IAAMC,CAAC,GAAG;AACRC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EAAG,mBADV;AAEFC,IAAAA,SAAS,EAAE,EAFT;AAGFC,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,WAAW,EAAE,CAJX;AAKFC,IAAAA,YAAY,EAAG;AALb,GADI;AAQRC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAG;AAFN,GARG;AAYRC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELH,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,MAAM,EAAG;AAHJ,GAZC;AAiBRG,EAAAA,IAAI,EAAE;AACJD,IAAAA,OAAO,EAAE;AADL;AAjBE,CAAV;;IAsBME,O;;;;;AACJ;;;;;;;;AAUA,mBAAYC,KAAZ,EAAkB;AAAA;;AAChB,kCAAMA,KAAN;;AADgB,UAuBlBC,eAvBkB,GAuBA,UAACC,KAAD,EAAW;AAC3B,YAAKC,QAAL,CAAc;AAACC,QAAAA,gBAAgB,EAAGF;AAApB,OAAd;AACD,KAzBiB;;AAAA,UA2BlBG,WA3BkB,GA2BJ,UAACC,QAAD,EAAc;AAAA,UAChBF,gBADgB,GACI,MAAKG,KADT,CAChBH,gBADgB;AAEvB,aAAOE,QAAQ,CAACE,GAAT,CAAa,UAACC,GAAD,EAAMP,KAAN,EAAgB;AACjC,YAAMQ,UAAU,GAAIR,KAAK,KAAKE,gBAAX,GACd,IADc,GACP,KADZ;AAEA,eAAOO,kBAAMC,YAAN,CAAmBH,GAAnB,EAAwB;AAC7BI,UAAAA,GAAG,EAAEX,KADwB;AAE7BY,UAAAA,OAAO,EAAE,MAAKb,eAAL,CAAqBc,IAArB,CAA0B,IAA1B,EAAgCb,KAAhC,CAFoB;AAG7BQ,UAAAA,UAAU,EAAVA;AAH6B,SAAxB,CAAP;AAKF,OARM,CAAP;AASJ,KAtCiB;;AAAA,UAwClBM,iBAxCkB,GAwCE,YAAM;AAAA,wBACiB,MAAKT,KADtB;AAAA,UACfH,gBADe,eACfA,gBADe;AAAA,UACGa,UADH,eACGA,UADH;AAEtB,aAAOA,UAAU,CAACT,GAAX,CAAe,UAACU,IAAD,EAAOhB,KAAP,EAAiB;AACpC,YAAMiB,QAAQ,GAAIjB,KAAK,KAAKE,gBAAX,GACJlB,CAAC,CAACU,KADE,GAEJV,CAAC,CAACY,IAFf;AAGC,eACG;AAAK,UAAA,KAAK,EAAEqB,QAAZ;AAAsB,UAAA,GAAG,EAAE,MAAIjB;AAA/B,WACIgB,IADJ,CADH;AAKH,OATM,CAAP;AAUH,KApDiB;;AAAA,UAqElBE,mBArEkB,GAqEI,YAAM;AAC1B,aAAO,MAAKb,KAAL,CAAWH,gBAAlB;AACD,KAvEiB;;AAGhB,UAAKiB,YAAL,GAAoBrB,KAAK,CAACqB,YAA1B;;AAEA,QAAMJ,WAAU,GAAGjB,KAAK,CAACM,QAAN,CAAeE,GAAf,CAAmB,UAACC,GAAD,EAAMP,KAAN,EAAgB;AACnD,aAAQS,kBAAMC,YAAN,CAAmBH,GAAG,CAACT,KAAJ,CAAUM,QAA7B,EAAuC;AAAEO,QAAAA,GAAG,EAAG,SAASX;AAAjB,OAAvC,CAAR;AACF,KAFkB,CAAnB;;AAGA,UAAKK,KAAL,GAAa;AACXH,MAAAA,gBAAgB,EAAG,CADR;AAEXa,MAAAA,UAAU,EAAVA;AAFW,KAAb;AARgB;AAYjB;;;;SAEDK,gC,GAAA,0CAAiCC,SAAjC,EAA2C;AACzC,QAAI,KAAKF,YAAL,IAAqB,KAAKrB,KAAL,KAAeuB,SAAxC,EAAkD;AAChD,UAAMN,UAAU,GAAGM,SAAS,CAACjB,QAAV,CAAmBE,GAAnB,CAAuB,UAACC,GAAD,EAAMP,KAAN,EAAgB;AACvD,eAAQS,kBAAMC,YAAN,CAAmBH,GAAG,CAACT,KAAJ,CAAUM,QAA7B,EAAuC;AAAEO,UAAAA,GAAG,EAAG,SAASX;AAAjB,SAAvC,CAAR;AACF,OAFkB,CAAnB;AAGA,WAAKC,QAAL,CAAc;AAAEc,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACD;AACF,G;;SAiCDO,M,GAAA,kBAAQ;AAAA,sBAC8B,KAAKxB,KADnC;AAAA,QACEM,QADF,eACEA,QADF;AAAA,QACYZ,KADZ,eACYA,KADZ;AAAA,QACmBC,MADnB,eACmBA,MADnB;AAGN,WACE;AAAK,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,MAAM,EAANA;AAAT;AAAZ,OACE;AAAI,MAAA,SAAS,EAAEV,KAAf;AAAsB,MAAA,KAAK,EAAEC,CAAC,CAACC;AAA/B,OACI,KAAKkB,WAAL,CAAiBC,QAAjB,CADJ,CADF,EAIE;AAAK,MAAA,KAAK,EAAEpB,CAAC,CAACO;AAAd,OACI,KAAKuB,iBAAL,EADJ,CAJF,CADF;AAUD,G;;;EA9EmBS,gB;;eAqFP1B,O","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst CL_UL = \"tabpane__tabs\";\r\n\r\nconst S = {\r\n  UL: {\r\n    listStyle : 'outside none none',\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n    marginRight: 5,\r\n    borderBottom : '2px solid #80c040'\r\n  },\r\n  DIV: {\r\n    width: \"100%\",\r\n    height : \"100%\"\r\n  },\r\n  BLOCK: {\r\n    display: 'block',\r\n    width: \"100%\",\r\n    height : \"100%\"\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass TabPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isUpdateInit: PropTypes.bool,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    children: PropTypes.arrayOf(PropTypes.node)\r\n  }\r\n  */\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.isUpdateInit = props.isUpdateInit\r\n\r\n    const components = props.children.map((tab, index) => {\r\n       return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n    })\r\n    this.state = {\r\n      selectedTabIndex : 0,\r\n      components\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (this.isUpdateInit && this.props !== nextProps){\r\n      const components = nextProps.children.map((tab, index) => {\r\n         return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n      })\r\n      this.setState({ components })\r\n    }\r\n  }\r\n\r\n  _handleClickTab = (index) => {\r\n    this.setState({selectedTabIndex : index});\r\n  }\r\n\r\n  _renderTabs = (children) => {\r\n       const {selectedTabIndex} = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex)\r\n             ? true : false;\r\n          return React.cloneElement(tab, {\r\n            key: index,\r\n            onClick: this._handleClickTab.bind(null, index),\r\n            isSelected\r\n          })\r\n       })\r\n  }\r\n\r\n  _renderComponents = () => {\r\n      const {selectedTabIndex, components} = this.state;\r\n      return components.map((comp, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? S.BLOCK\r\n                    : S.NONE;\r\n          return (\r\n             <div style={divStyle} key={'a'+index}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const { children, width, height } = this.props;\r\n\r\n    return (\r\n      <div style={{ width, height }}>\r\n        <ul className={CL_UL} style={S.UL}>\r\n           {this._renderTabs(children)}\r\n        </ul>\r\n        <div style={S.DIV}>\r\n           {this._renderComponents()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex = () => {\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"],"file":"TabPane.js"}