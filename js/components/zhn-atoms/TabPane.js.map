{"version":3,"sources":["../../../src/components/zhn-atoms/TabPane.jsx"],"names":["CL_UL","S","UL","listStyle","marginTop","marginLeft","marginRight","borderBottom","DIV","width","height","BLOCK","display","NONE","TabPane","props","isUpdateInit","components","children","map","tab","index","cloneElement","key","state","selectedTabIndex","nextProps","setState","_renderTabs","_renderComponents","_handleClickTab","isSelected","onClick","bind","comp","divStyle","getSelectedTabIndex"],"mappings":"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","file":"TabPane.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst CL_UL = \"tabpane__tabs\";\r\n\r\nconst S = {\r\n  UL: {\r\n    listStyle : 'outside none none',\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n    marginRight: 5,\r\n    borderBottom : '2px solid #80c040'\r\n  },\r\n  DIV: {\r\n    width: \"100%\",\r\n    height : \"100%\"\r\n  },\r\n  BLOCK: {\r\n    display: 'block',\r\n    width: \"100%\",\r\n    height : \"100%\"\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass TabPane extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isUpdateInit: PropTypes.bool,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    children: PropTypes.arrayOf(PropTypes.node)\r\n  }\r\n  */\r\n\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.isUpdateInit = props.isUpdateInit\r\n\r\n    const components = props.children.map((tab, index) => {\r\n       return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n    })\r\n    this.state = {\r\n      selectedTabIndex : 0,\r\n      components\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps){\r\n    if (this.isUpdateInit && this.props !== nextProps){\r\n      const components = nextProps.children.map((tab, index) => {\r\n         return  React.cloneElement(tab.props.children, { key : 'comp' + index });\r\n      })\r\n      this.setState({ components })\r\n    }\r\n  }\r\n\r\n  _handleClickTab = (index) => {\r\n    this.setState({selectedTabIndex : index});\r\n  }\r\n\r\n  _renderTabs = (children) => {\r\n       const {selectedTabIndex} = this.state;\r\n       return children.map((tab, index) => {\r\n          const isSelected = (index === selectedTabIndex)\r\n             ? true : false;\r\n          return React.cloneElement(tab, {\r\n            key: index,\r\n            onClick: this._handleClickTab.bind(null, index),\r\n            isSelected\r\n          })\r\n       })\r\n  }\r\n\r\n  _renderComponents = () => {\r\n      const {selectedTabIndex, components} = this.state;\r\n      return components.map((comp, index) => {\r\n         const divStyle = (index === selectedTabIndex)\r\n                    ? S.BLOCK\r\n                    : S.NONE;\r\n          return (\r\n             <div style={divStyle} key={'a'+index}>\r\n                {comp}\r\n             </div>\r\n           )\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const { children, width, height } = this.props;\r\n\r\n    return (\r\n      <div style={{ width, height }}>\r\n        <ul className={CL_UL} style={S.UL}>\r\n           {this._renderTabs(children)}\r\n        </ul>\r\n        <div style={S.DIV}>\r\n           {this._renderComponents()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSelectedTabIndex = () => {\r\n    return this.state.selectedTabIndex;\r\n  }\r\n}\r\n\r\nexport default TabPane\r\n"]}