{"version":3,"sources":["../../../src/components/zhn-atoms/OpenClose2.jsx"],"names":["styles","rootDiv","backgroundColor","lineHeight","divSvg","display","width","height","marginLeft","labelCaption","paddingLeft","verticalAlign","color","fontFamily","fontWeight","fontSize","cursor","itemRow","FILL_OPEN","FILL_CLOSE","pathOpen","pathClose","OpenClose2","props","_handleClickOpenClose","setState","prev","isOpen","isClose","fillOpen","fillClose","state","render","style","styleNotSelected","styleCaption","caption","isDraggable","option","onDragStart","onDragEnter","onDragOver","onDragLeave","onDrop","children","_dragOption","draggable","bind","undefined","_pathV","_fillV","_displayDivStyle","_classShow","_styleNotSelected","Object","assign","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst styles = {\r\n  rootDiv: {\r\n    backgroundColor: '#4D4D4D',\r\n    //backgroundColor: 'inherit',\r\n    lineHeight: 1.5\r\n  },\r\n  divSvg : {\r\n    display: 'inline-block',\r\n    width: '16px',\r\n    height: '16px',\r\n    marginLeft: '8px'\r\n  },\r\n  labelCaption: {\r\n    paddingLeft: '4px',\r\n    verticalAlign: 'top',\r\n    color: 'rgba(164, 135, 212, 1)',\r\n    fontFamily: 'Roboto, Arial Unicode MS, Arial, sans-serif',\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n    cursor: 'pointer'\r\n  },\r\n  itemRow : {\r\n    backgroundColor: '#404040'\r\n  }\r\n};\r\n\r\nconst FILL_OPEN = '#9e9e9e'\r\n    , FILL_CLOSE = 'transparent';\r\n\r\nconst pathOpen = \"M 2,14 L 14,14 14,2 2,14\";\r\nconst pathClose = \"M 2,2 L 14,8 2,14 2,2\";\r\n\r\nclass OpenClose2 extends Component {\r\n   constructor(props){\r\n     super();\r\n     const { isClose, fillOpen, fillClose } = props;\r\n\r\n      this.state = {\r\n        isOpen: isClose ? false : true,\r\n        fillOpen: fillOpen || FILL_OPEN,\r\n        fillClose: fillClose || FILL_CLOSE\r\n      }\r\n   }\r\n\r\n  _handleClickOpenClose = () => {\r\n    this.setState(prev => ({ isOpen: !prev.isOpen }));\r\n  }\r\n\r\n  render(){\r\n    const {\r\n            style, styleNotSelected, styleCaption, caption,\r\n            isDraggable, option, onDragStart, onDragEnter, onDragOver, onDragLeave, onDrop,\r\n            children\r\n          } = this.props\r\n        , _dragOption = (isDraggable)\r\n              ? {\r\n                  draggable : true,\r\n                  onDragStart : onDragStart.bind(null, option),\r\n                  onDrop : onDrop.bind(null, option),\r\n                  onDragEnter : onDragEnter,\r\n                  onDragOver : onDragOver,\r\n                  onDragLeave : onDragLeave\r\n                }\r\n              : undefined ;\r\n\r\n    let _pathV, _fillV, _displayDivStyle, _classShow, _styleNotSelected;\r\n    if (this.state.isOpen){\r\n      _pathV = pathOpen;\r\n      _fillV = this.state.fillOpen;\r\n      _displayDivStyle = 'block';\r\n      _classShow = 'show-popup';\r\n      _styleNotSelected = null;\r\n\r\n    } else {\r\n      _pathV = pathClose;\r\n      _fillV = this.state.fillClose;\r\n      _displayDivStyle = 'none';\r\n      _classShow = null;\r\n      _styleNotSelected = styleNotSelected;\r\n    }\r\n\r\n\r\n    return (\r\n      <div style={Object.assign({}, styles.rootDiv, style)}>\r\n        <div\r\n           className=\"not-selected\"\r\n           style={_styleNotSelected}\r\n           onClick={this._handleClickOpenClose}\r\n           {..._dragOption}\r\n         >\r\n          <div style={styles.divSvg}>\r\n             <svg\r\n                viewBox=\"0 0 16 16\" width=\"100%\" height=\"100%\"\r\n                preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                style={{display: 'inline-block'}}\r\n              >\r\n             <path\r\n                d={_pathV}\r\n                fill={_fillV}\r\n                strokeWidth=\"1\" stroke={this.state.fillOpen}\r\n             >\r\n             </path>\r\n             </svg>\r\n         </div>\r\n         <span style={Object.assign({}, styles.labelCaption, styleCaption)} >\r\n            {caption}\r\n         </span>\r\n       </div>\r\n      <div className={_classShow} style={{display: _displayDivStyle}}>\r\n        {children}\r\n      </div>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OpenClose2;\r\n"],"file":"OpenClose2.js"}