{"version":3,"sources":["../../../src/components/zhn-dnd/DndOnlyX.jsx"],"names":["BORDER_LEFT","DRAG_START_BORDER_LEFT","LONG_TOUCH","_getClientX","ev","targetTouches","changedTouches","clientX","DndOnlyX","props","_dragTouchEnd","_isDragTouch","_isMoveStart","preventDefault","persist","_clientX","_dX","Math","abs","onDragTouchEnd","_dragTouchEndStyle","currentTarget","clearTimeout","_dragTouchId","_dragStartStyle","bind","_dragEndStyle","_dragStart","_dragEnd","_startDragTouch","_dragTouchStart","_dragTouchMove","_node","style","removeProperty","setProperty","dataTransfer","effectAllowed","dropEffect","onDragEnd","node","_dragTouchStartStyle","setTimeout","dX","_opacity","right","opacity","_startMoveX","_dragTouchMoveStyle","isBack","children","_preventDefault"],"mappings":"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","file":"DndOnlyX.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst BORDER_LEFT = 'border-left';\r\nconst DRAG_START_BORDER_LEFT = \"4px solid #D64336\";\r\n\r\nconst LONG_TOUCH = 1000;\r\n\r\nconst _getClientX = (ev) => {\r\n  const { targetTouches, changedTouches } = ev;\r\n  return (targetTouches && targetTouches[0])\r\n    ? targetTouches[0].clientX\r\n    : (changedTouches && changedTouches[0])\r\n        ? changedTouches[0].clientX\r\n        : 0;\r\n};\r\n\r\nclass DndOnlyX extends Component {\r\n  /*\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n\r\n    onDragEnd: PropTypes.func,\r\n    onDragTouchEnd: PropTypes.func\r\n  }\r\n  */\r\n\r\n  constructor(props){\r\n    super()\r\n    this.clientX = 0\r\n    this._isDragTouch = false\r\n\r\n    this._dragStartStyle = this._dragStartStyle.bind(this)\r\n    this._dragEndStyle = this._dragEndStyle.bind(this)\r\n    this._dragStart = this._dragStart.bind(this)\r\n    this._dragEnd = this._dragEnd.bind(this)\r\n\r\n    this._startDragTouch = this._startDragTouch.bind(this)\r\n    this._dragTouchStart = this._dragTouchStart.bind(this)\r\n    this._dragTouchMove = this._dragTouchMove.bind(this)\r\n    this._dragTouchEnd = this._dragTouchEnd.bind(this)\r\n\r\n  }\r\n\r\n  _dragStartStyle(ev) {\r\n    if (this._node){\r\n      this._node.style.removeProperty(BORDER_LEFT)\r\n    }\r\n    this._node = ev.currentTarget\r\n    this._node.style.setProperty(BORDER_LEFT, DRAG_START_BORDER_LEFT)\r\n  }\r\n  _dragEndStyle() {\r\n    this._node.style.removeProperty(BORDER_LEFT)\r\n    this._node = null\r\n  }\r\n\r\n  _dragStart(ev) {\r\n    ev.persist()\r\n    this.clientX = ev.clientX\r\n    this._dragStartStyle(ev)\r\n    ev.dataTransfer.effectAllowed=\"move\"\r\n    ev.dataTransfer.dropEffect=\"move\"\r\n  }\r\n  _dragEnd(ev) {\r\n    ev.preventDefault()\r\n    ev.persist()\r\n    this._dragEndStyle()\r\n    this.props.onDragEnd(Math.abs(\r\n      this.clientX - ev.clientX\r\n    ))\r\n  }\r\n\r\n  _preventDefault(ev){\r\n    ev.preventDefault()\r\n  }\r\n\r\n  _dragTouchStartStyle(node) {\r\n    node.style.setProperty(BORDER_LEFT, DRAG_START_BORDER_LEFT)\r\n  }\r\n  _startDragTouch(node) {\r\n    this._isDragTouch = true\r\n    this._dragTouchStartStyle(node)\r\n  }\r\n   _dragTouchStart(ev){\r\n     const node = ev.currentTarget;\r\n     this._dragTouchId = setTimeout(\r\n       () => this._startDragTouch(node),\r\n       LONG_TOUCH\r\n     )\r\n   }\r\n\r\n   _dragTouchMoveStyle(node, dX){\r\n     const _opacity = (1 - (0.5*Math.abs(dX))/60);\r\n     node.style.right = dX + 'px'\r\n     node.style.opacity = _opacity\r\n   }\r\n   _dragTouchMove(ev) {\r\n     if (this._isDragTouch) {\r\n       ev.persist()\r\n       const _clientX = _getClientX(ev);\r\n       if (_clientX) {\r\n         if (!this._isMoveStart){\r\n           this.clientX = this._startMoveX = _clientX\r\n           this._isMoveStart = true\r\n         } else {\r\n           const _dX = this._startMoveX - _clientX;\r\n           this._dragTouchMoveStyle(ev.currentTarget, _dX)\r\n         }\r\n       }\r\n     }\r\n   }\r\n\r\n   _dragTouchEndStyle(node, isBack){\r\n     node.style.removeProperty(BORDER_LEFT)\r\n     if (isBack) {\r\n       node.style.right = '0px'\r\n       node.style.opacity = 1\r\n     }\r\n   }\r\n   _dragTouchEnd = (ev) => {\r\n     if (this._isDragTouch) {\r\n       if (this._isMoveStart) {\r\n         ev.preventDefault()\r\n         ev.persist()\r\n         const _clientX = _getClientX(ev)\r\n             , _dX = Math.abs(this.clientX - _clientX);\r\n        if (this.props.onDragTouchEnd(_dX)){\r\n          this._dragTouchEndStyle(ev.currentTarget, true)\r\n        }\r\n         this._isMoveStart = false\r\n       } else {\r\n         this._dragTouchEndStyle(ev.currentTarget)\r\n       }\r\n       this._isDragTouch = false\r\n     } else {\r\n       clearTimeout(this._dragTouchId)\r\n     }\r\n   }\r\n\r\n  render(){\r\n    const { style, children } = this.props;\r\n    return (\r\n      <div\r\n        style={style}\r\n        draggable={true}\r\n        onDragStart={this._dragStart}\r\n        onDragEnd={this._dragEnd}\r\n\r\n        onDrop={this._preventDefault}\r\n        onDragOver={this._preventDefault}\r\n        onDragEnter={this._preventDefault}\r\n        onDragLeave={this._preventDefault}\r\n\r\n        onTouchStart={this._dragTouchStart}\r\n        onTouchMove={this._dragTouchMove}\r\n        onTouchEnd={this._dragTouchEnd}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DndOnlyX\r\n"]}