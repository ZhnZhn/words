{"version":3,"sources":["../../../src/components/about/About.jsx"],"names":["CL_SHOW","About","state","isShow","_onStore","actionType","data","props","showAction","closeAction","setState","prevState","_handleClose","unsubscribe","store","listen","theme","TS","createStyle","_rootClass","_rootStyle","BLOCK","NONE","ABOUT_ROOT","ROOT","BROWSER_CAPTION","CL_SCROLL_PANE","SCROLL_DIV","DIV_WRAPPER","DIV_TEXT","APP_TITLE","MARGIN_TOP","ICON","ICON_GITHUB","BLACK"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,UAAU,YAAhB;;IAEMC,K;;;;;;;;;;;;;;kMAEJC,K,GAAQ;AACNC,cAAQ;AADF,K,QAURC,Q,GAAW,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAAA,wBACK,MAAKC,KADV;AAAA,UACvBC,UADuB,eACvBA,UADuB;AAAA,UACXC,WADW,eACXA,WADW;;AAE/B,cAAOJ,UAAP;AACE,aAAKG,UAAL;AACG,gBAAKE,QAAL,CAAc,qBAAa;AACzB,mBAAOC,UAAUR,MAAV,GACF,IADE,GAEF,EAAEA,QAAQ,IAAV,EAFL;AAGD,WAJD;AAKA;AACH,aAAKM,WAAL;AACE,gBAAKC,QAAL,CAAc,qBAAa;AACzB,mBAAOC,UAAUR,MAAV,GACH,EAAEA,QAAQ,KAAV,EADG,GAEH,IAFJ;AAGD,WAJD;AAKA;AACF;AAAS,iBAAO,KAAK,CAAZ;AAfX;AAiBD,K,QAEDS,Y,GAAe,YAAM;AACnB,YAAKF,QAAL,CAAc,EAAEP,QAAS,KAAX,EAAd;AACD,K;;;;;wCA7BkB;AACjB,WAAKU,WAAL,GAAmB,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwB,KAAKX,QAA7B,CAAnB;AACD;;;2CACqB;AACpB,WAAKS,WAAL;AACD;;;6BA0BO;AACC,UAAEG,KAAF,GAAY,KAAKT,KAAjB,CAAES,KAAF;AAAA,UACAC,EADA,GACKD,MAAME,WAAN,iBADL;AAAA,UAEEf,MAFF,GAEa,KAAKD,KAFlB,CAEEC,MAFF;AAAA,UAGAgB,UAHA,GAGahB,SACRH,OADQ,GAER,IALL;AAAA,UAMAoB,UANA,GAMajB,SACRc,GAAGI,KADK,GAERJ,GAAGK,IARR;;AASP,aACE;AAAA;AAAA;AACE,qBAAWH,UADb;AAEE,4CAAW,yBAAMI,UAAjB,EAAgCH,UAAhC,EAA+CH,GAAGO,IAAlD;AAFF;AAIG,sDAAG,cAAH;AACG,qBAAWP,GAAGQ,eADjB;AAEG,mBAAQ,OAFX;AAGG,mBAAS,KAAKb;AAHjB,UAJH;AAUG;AAAA,0BAAG,UAAH;AAAA;AACG,uBAAWK,GAAGS,cADjB;AAEG,mBAAOT,GAAGU;AAFb;AAIE;AAAA;AAAA,cAAK,OAAOV,GAAGW,WAAf;AACG;AAAA;AAAA,gBAAK,OAAOX,GAAGY,QAAf;AACG;AAAA;AAAA;AACE;AAAA;AAAA,oBAAM,OAAOZ,GAAGa,SAAhB;AAAA;AAAA,iBADF;AAAA;AAAA,eADH;AAIG;AAAA;AAAA;AAAA;AAAA,eAJH;AAOG;AAAA;AAAA;AACG,8DAAM,QAAN;AADH,eAPH;AAUG;AAAA;AAAA,kBAAG,OAAOb,GAAGc,UAAb;AAAA;AAAA,eAVH;AAaG;AAAA;AAAA;AAAA;AAAA;AAbH,aADH;AAkBE;AACG,yBAAWd,GAAGe,IADjB;AAEG,+BAAiBf,GAAGgB;AAFvB,cAlBF;AAsBE;AAAA;AAAA,gBAAG,OAAOhB,GAAGiB,KAAb;AAAA;AAAA;AAtBF;AAJF;AAVH,OADF;AA4CD;;;;;kBAGY,yBAAUjC,KAAV,C","file":"About.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './About.Style'\r\n\r\nimport A from '../zhn-atoms/Atoms'\r\nimport Link from '../links/Links'\r\nimport IconLogoBar from './IconLogoBar'\r\n\r\nimport STYLE from '../styles/ContainerStyle'\r\n\r\nconst CL_SHOW = \"show-popup\";\r\n\r\nclass About extends Component {\r\n\r\n  state = {\r\n    isShow: true\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store.listen(this._onStore);\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe();\r\n  }\r\n  _onStore = (actionType, data) => {\r\n    const { showAction, closeAction } = this.props;\r\n    switch(actionType){\r\n      case showAction:\r\n         this.setState(prevState => {\r\n           return prevState.isShow\r\n              ? null\r\n              : { isShow: true };\r\n         })\r\n         break;\r\n      case closeAction:\r\n        this.setState(prevState => {\r\n          return prevState.isShow\r\n            ? { isShow: false }\r\n            : null;\r\n        })\r\n        break;\r\n      default: return void 0;\r\n    }\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this.setState({ isShow : false })\r\n  }\r\n\r\n  render(){\r\n    const  { theme } = this.props\r\n         , TS = theme.createStyle(styleConfig)\r\n         , { isShow } = this.state\r\n         , _rootClass = isShow\r\n              ? CL_SHOW\r\n              : null\r\n         , _rootStyle = isShow\r\n              ? TS.BLOCK\r\n              : TS.NONE;\r\n    return (\r\n      <div\r\n        className={_rootClass}\r\n        style={{...STYLE.ABOUT_ROOT, ..._rootStyle, ...TS.ROOT}}\r\n       >\r\n         <A.BrowserCaption\r\n            rootStyle={TS.BROWSER_CAPTION}\r\n            caption=\"About\"\r\n            onClose={this._handleClose}\r\n         />\r\n\r\n         <A.ScrollPane\r\n            className={TS.CL_SCROLL_PANE}\r\n            style={TS.SCROLL_DIV}\r\n         >\r\n           <div style={TS.DIV_WRAPPER}>\r\n              <div style={TS.DIV_TEXT}>\r\n                 <p>\r\n                   <span style={TS.APP_TITLE}>Words</span> is web app, RESTful client.\r\n                 </p>\r\n                 <p>\r\n                   Words data provider:\r\n                 </p>\r\n                 <div>\r\n                    <Link.WordsApi/>\r\n                 </div>\r\n                 <p style={TS.MARGIN_TOP}>\r\n                   Provider's API Key is required for using app.\r\n                 </p>\r\n                 <p>\r\n                   API Key can be set in Settings Dialog [s].\r\n                 </p>\r\n             </div>\r\n             <IconLogoBar\r\n                iconStyle={TS.ICON}\r\n                iconGitHubStyle={TS.ICON_GITHUB}\r\n             />\r\n             <p style={TS.BLACK}>\r\n               *Logos Fair Use.\r\n              </p>\r\n           </div>\r\n        </A.ScrollPane>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(About)\r\n"]}