{"version":3,"sources":["../../../src/components/zhn-moleculs/DynamicMenuBrowser.jsx"],"names":["S","BROWSER","paddingRight","SCROLL_PANE","overflowY","height","SPINNER_LOADING","position","display","textAlign","margin","marginTop","width","ROOT_MENU","paddingLeft","DynamicMenuBrowser","props","_onStore","actionType","id","showAction","browserId","setState","isShow","_loadMenu","url","onError","fetch","then","status","response","json","isLoading","menuModel","catch","isLoadingFailed","err","_handleHide","state","store","listen","unsubscribe","styleConfig","restProps","menu","items","map","menuPart","index","TS","caption","children","BROWSER_CAPTION","CL_SCROLL_PANE","_renderMenuParts","defaultProps"],"mappings":"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","file":"DynamicMenuBrowser.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport A from '../zhn-atoms/Atoms'\r\nimport MenuPart from './MenuPart'\r\n\r\nconst S = {\r\n  BROWSER: {\r\n    paddingRight: '0px'\r\n  },\r\n  SCROLL_PANE: {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: '10px',\r\n    //paddingLeft: '4px'\r\n  },\r\n  SPINNER_LOADING: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    textAlign: 'middle',\r\n    margin: '0 auto',\r\n    marginTop: '32px',\r\n    width: '32px',\r\n    height: '32px'\r\n  },\r\n  ROOT_MENU: {\r\n    paddingLeft: '4px'\r\n  }\r\n}\r\n\r\nclass DynamicMenuBrowser extends Component {\r\n\r\n  static defaultProps = {\r\n    onError: ()=>{}\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.state = {\r\n      isShow: true,\r\n      isLoading: true,\r\n      isLoadingFailed: false,\r\n      menuModel: {}\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    const { store={} } = this.props;\r\n    if (typeof store.listen === 'function'){\r\n      this.unsubscribe = store.listen(this._onStore)\r\n    }\r\n    this._loadMenu()\r\n  }\r\n  componetWillUnmaount(){\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  _onStore = (actionType, id) => {\r\n    const { showAction, browserId } = this.props;\r\n    if (actionType === showAction && id === browserId ){\r\n       this.setState({ isShow: true })\r\n    }\r\n  }\r\n\r\n\r\n  _loadMenu = () => {\r\n    const { url, onError } = this.props;\r\n    fetch(url)\r\n      .then(response => {\r\n          const { status } = response;\r\n          if (status>=200 && status<400){\r\n            return response.json();\r\n          } else {\r\n            throw { status, url };\r\n          }\r\n      })\r\n      .then(json => {\r\n         this.setState({ isLoading: false, menuModel: json })\r\n      })\r\n      .catch(err => {\r\n          this.setState({ isLoadingFailed: true, isLoading: false })\r\n          onError(err)\r\n      })\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({ isShow: false })\r\n  }\r\n\r\n  _renderMenuParts({ styleConfig, menuModel, restProps }){\r\n    const { menu=[], items={} } = menuModel;\r\n    return menu.map((menuPart, index) => {\r\n      return (\r\n        <MenuPart\r\n          {...menuPart}\r\n          key={index}\r\n          hmItems={items}\r\n          styleConfig={styleConfig}\r\n          {...restProps}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { styleConfig:TS={},\r\n            caption,\r\n            children, ...restProps } = this.props\r\n        , { isShow, isLoading, isLoadingFailed, menuModel } = this.state;\r\n    return (\r\n      <A.Browser\r\n         isShow={isShow}\r\n         style={{...S.BROWSER, ...TS.BROWSER}}\r\n       >\r\n        <A.BrowserCaption\r\n          rootStyle={TS.BROWSER_CAPTION}\r\n          caption={caption}\r\n          onClose={this._handleHide}\r\n        />\r\n        {\r\n          isLoading &&\r\n          <A.SpinnerLoading\r\n               style={S.SPINNER_LOADING}\r\n          />\r\n        }\r\n        {\r\n          isLoadingFailed &&\r\n          <A.SpinnerLoading\r\n             style={S.SPINNER_LOADING}\r\n             isFailed={true}\r\n           />\r\n         }\r\n        <A.ScrollPane\r\n           className={TS.CL_SCROLL_PANE}\r\n           style={S.SCROLL_PANE}\r\n        >\r\n          {this._renderMenuParts({ styleConfig: TS, menuModel, restProps})}\r\n          {children}\r\n        </A.ScrollPane>\r\n      </A.Browser>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicMenuBrowser\r\n"]}