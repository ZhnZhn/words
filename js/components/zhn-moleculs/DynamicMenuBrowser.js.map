{"version":3,"sources":["../../../src/components/zhn-moleculs/DynamicMenuBrowser.jsx"],"names":["S","BROWSER","paddingRight","SCROLL_PANE","overflowY","height","SPINNER_LOADING","position","display","width","margin","marginTop","textAlign","ROOT_MENU","paddingLeft","DynamicMenuBrowser","state","isShow","isLoading","isLoadingFailed","menuModel","_onStore","actionType","id","props","showAction","browserId","setState","_loadMenu","url","onError","fetch","then","response","status","json","err","_handleHide","componentDidMount","store","listen","unsubscribe","componetWillUnmaount","_renderMenuParts","styleConfig","restProps","menu","items","map","menuPart","index","render","TS","caption","children","BROWSER_CAPTION","CL_SCROLL_PANE","Component","defaultProps"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\n\r\nimport A from '../zhn-atoms/Atoms'\r\nimport MenuPart from './MenuPart'\r\n\r\nconst S = {\r\n  BROWSER: {\r\n    paddingRight: 0\r\n  },\r\n  SCROLL_PANE: {\r\n    overflowY: 'auto',\r\n    height: '92%',\r\n    paddingRight: 10,\r\n\r\n  },\r\n  SPINNER_LOADING: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    width: 32,\r\n    height: 32,\r\n    margin: '0 auto',\r\n    marginTop: 32,\r\n    textAlign: 'middle'\r\n  },\r\n  ROOT_MENU: {\r\n    paddingLeft: 4\r\n  }\r\n}\r\n\r\nclass DynamicMenuBrowser extends Component {\r\n\r\n  static defaultProps = {\r\n    onError: ()=>{}\r\n  }\r\n\r\n  state = {\r\n    isShow: true,\r\n    isLoading: true,\r\n    isLoadingFailed: false,\r\n    menuModel: {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { store={} } = this.props;\r\n    if (typeof store.listen === 'function'){\r\n      this.unsubscribe = store.listen(this._onStore)\r\n    }\r\n    this._loadMenu()\r\n  }\r\n  componetWillUnmaount(){\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  _onStore = (actionType, id) => {\r\n    const { showAction, browserId } = this.props;\r\n    if (actionType === showAction && id === browserId ){\r\n       this.setState({ isShow: true })\r\n    }\r\n  }\r\n\r\n\r\n  _loadMenu = () => {\r\n    const { url, onError } = this.props;\r\n    fetch(url)\r\n      .then(response => {\r\n          const { status } = response;\r\n          if (status>=200 && status<400){\r\n            return response.json();\r\n          } else {\r\n            throw { status, url };\r\n          }\r\n      })\r\n      .then(json => {\r\n         this.setState({ isLoading: false, menuModel: json })\r\n      })\r\n      .catch(err => {\r\n          this.setState({ isLoadingFailed: true, isLoading: false })\r\n          onError(err)\r\n      })\r\n  }\r\n\r\n  _handleHide = () => {\r\n    this.setState({ isShow: false })\r\n  }\r\n\r\n  _renderMenuParts({ styleConfig, menuModel, restProps }){\r\n    const { menu=[], items={} } = menuModel;\r\n    return menu.map((menuPart, index) => {\r\n      return (\r\n        <MenuPart\r\n          {...menuPart}\r\n          key={index}\r\n          hmItems={items}\r\n          styleConfig={styleConfig}\r\n          {...restProps}\r\n        />\r\n      );\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { styleConfig:TS={},\r\n            caption,\r\n            children, ...restProps } = this.props\r\n        , { isShow, isLoading, isLoadingFailed, menuModel } = this.state;\r\n    return (\r\n      <A.Browser\r\n         isShow={isShow}\r\n         style={{...S.BROWSER, ...TS.BROWSER}}\r\n       >\r\n        <A.BrowserCaption\r\n          rootStyle={TS.BROWSER_CAPTION}\r\n          caption={caption}\r\n          onClose={this._handleHide}\r\n        />\r\n        {\r\n          isLoading &&\r\n          <A.SpinnerLoading\r\n               style={S.SPINNER_LOADING}\r\n          />\r\n        }\r\n        {\r\n          isLoadingFailed &&\r\n          <A.SpinnerLoading\r\n             style={S.SPINNER_LOADING}\r\n             isFailed={true}\r\n           />\r\n         }\r\n        <A.ScrollPane\r\n           className={TS.CL_SCROLL_PANE}\r\n           style={S.SCROLL_PANE}\r\n        >\r\n          {this._renderMenuParts({ styleConfig: TS, menuModel, restProps})}\r\n          {children}\r\n        </A.ScrollPane>\r\n      </A.Browser>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicMenuBrowser\r\n"],"file":"DynamicMenuBrowser.js"}