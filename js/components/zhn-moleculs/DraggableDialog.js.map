{"version":3,"sources":["../../../src/components/zhn-moleculs/DraggableDialog.jsx"],"names":["CL_DIALOG","CL_DIALOG_OPEN","STYLE","ROOT","zIndex","position","top","left","backgroundColor","border","borderRadius","boxShadow","CHILDREN","cursor","COMMAND","marginTop","marginBottom","marginRight","BLOCK","display","NONE","DraggableDialog","_handleKeyDown","event","focused","document","activeElement","rootDiv","props","onKeyDown","_handleClose","prevFocusedEl","focus","onClose","_renderCommandButton","commandButtons","styleButton","S","onShowChart","RAISED_ROOT","CL_RAISED_DIV","componentDidMount","Interact","makeDragable","componentDidUpdate","prevProps","prevState","isShow","render","rootStyle","caption","browserCaptionStyle","children","_styleShow","_classShow","c","Object","assign","focusPrevEl","Component"],"mappings":";;;;;;;;;;;AAAA;;AAGA;;AACA;;AAEA;;AALA;AAOA,IAAMA,SAAS,GAAG,QAAlB;AACA,IAAMC,cAAc,GAAG,mBAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,QAAQ,EAAE,UAFN;AAGJC,IAAAA,GAAG,EAAE,EAHD;AAIJC,IAAAA,IAAI,EAAE,EAJF;AAKJC,IAAAA,eAAe,EAAE,SALb;AAMJC,IAAAA,MAAM,EAAE,mBANJ;AAOJC,IAAAA,YAAY,EAAE,CAPV;AAQJC,IAAAA,SAAS,EAAE;AARP,GADM;AAWZC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GAXE;AAcZC,EAAAA,OAAO,EAAG;AACPD,IAAAA,MAAM,EAAE,SADD;AAEP,aAAO,OAFA;AAGPE,IAAAA,SAAS,EAAE,EAHJ;AAIPC,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,WAAW,EAAE;AALN,GAdE;AAqBZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GArBK;AAwBZC,EAAAA,IAAI,EAAE;AACJD,IAAAA,OAAO,EAAE;AADL;AAxBM,CAAd;;IA6BME,e;;;;;;;;;;;;UA0BJC,c,GAAiB,UAACC,KAAD,EAAW;AAC1B,UAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAzB;;AACC,UAAIF,OAAO,IAAI,MAAKG,OAApB,EAA4B;AAC1B,cAAKC,KAAL,CAAWC,SAAX,CAAqBN,KAArB;AACD;AACH,K;;UAEDO,Y,GAAe,UAACP,KAAD,EAAW;AACxB,UAAI,MAAKQ,aAAT,EAAwB;AACtB,cAAKA,aAAL,CAAmBC,KAAnB;AACD;;AACD,YAAKJ,KAAL,CAAWK,OAAX;AACD,K;;UAEDC,oB,GAAuB,gBAEjB;AAAA,UADJC,cACI,QADJA,cACI;AAAA,kCADYC,WACZ;AAAA,UADwBC,CACxB,iCAD0B,EAC1B;AAAA,UAD8BC,WAC9B,QAD8BA,WAC9B;AAAA,UAD2CL,OAC3C,QAD2CA,OAC3C;AACJ,0BACE;AAAK,QAAA,KAAK,EAAE/B,KAAK,CAACY;AAAlB,SACGqB,cADH,EAEG,OAAOG,WAAP,KAAuB,UAAvB,iBACC,gCAAC,wBAAD;AACG,QAAA,SAAS,EAAED,CAAC,CAACE,WADhB;AAEG,QAAA,KAAK,EAAEF,CAAC,CAACG,aAFZ;AAGG,QAAA,OAAO,EAAC,MAHX;AAIG,QAAA,OAAO,EAAEF;AAJZ,QAHJ,eAUE,gCAAC,wBAAD;AACG,QAAA,SAAS,EAAED,CAAC,CAACE,WADhB;AAEG,QAAA,KAAK,EAAEF,CAAC,CAACG,aAFZ;AAGG,QAAA,OAAO,EAAC,OAHX;AAIG,QAAA,OAAO,EAAE,MAAKV;AAJjB,QAVF,CADF;AAmBD,K;;;;;;;AA7DD;;;;;;;;;;;;;SAcAW,iB,GAAA,6BAAmB;AAChBC,yBAASC,YAAT,CAAsB,KAAKhB,OAA3B;;AACA,SAAKI,aAAL,GAAqBN,QAAQ,CAACC,aAA9B;AACA,SAAKC,OAAL,CAAaK,KAAb;AACF,G;;SACDY,kB,GAAA,4BAAmBC,SAAnB,EAA8BC,SAA9B,EAAwC;AACtC,QAAI,KAAKlB,KAAL,CAAWmB,MAAX,IAAqB,CAACF,SAAS,CAACE,MAApC,EAA4C;AAC1C,WAAKpB,OAAL,CAAaK,KAAb;AACD;AACF,G;;SAwCDgB,M,GAAA,kBAAQ;AAAA;;AAAA,sBAOG,KAAKpB,KAPR;AAAA,QAECmB,MAFD,eAECA,MAFD;AAAA,QAESE,SAFT,eAESA,SAFT;AAAA,QAGCC,OAHD,eAGCA,OAHD;AAAA,QAGUC,mBAHV,eAGUA,mBAHV;AAAA,QAIChB,cAJD,eAICA,cAJD;AAAA,QAIiBC,WAJjB,eAIiBA,WAJjB;AAAA,QAKCgB,QALD,eAKCA,QALD;AAAA,QAMCd,WAND,eAMCA,WAND;AAAA,QAMcL,OANd,eAMcA,OANd;AAAA,QAQAoB,UARA,GAQaN,MAAM,GAAG7C,KAAK,CAACgB,KAAT,GAAiBhB,KAAK,CAACkB,IAR1C;AAAA,QASAkC,UATA,GASaP,MAAM,GAAG9C,cAAH,GAAoBD,SATvC;;AAUN,wBACE;AACK,MAAA,GAAG,EAAE,aAAAuD,CAAC;AAAA,eAAI,MAAI,CAAC5B,OAAL,GAAe4B,CAAnB;AAAA,OADX;AAEK,MAAA,SAAS,EAAED,UAFhB;AAGK,MAAA,KAAK,EAAEE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvD,KAAK,CAACC,IAAxB,EAA8B8C,SAA9B,EAAyCI,UAAzC,CAHZ;AAIK,MAAA,QAAQ,EAAC,GAJd;AAKK,MAAA,SAAS,EAAE,KAAK/B;AALrB,oBAOE,gCAAC,0BAAD;AACG,MAAA,SAAS,EAAE6B,mBADd;AAEG,MAAA,OAAO,EAAED,OAFZ;AAGG,MAAA,OAAO,EAAEjB;AAHZ,MAPF,eAYE;AAAK,MAAA,KAAK,EAAE/B,KAAK,CAACU;AAAlB,OACIwC,QADJ,CAZF,EAeG,KAAKlB,oBAAL,CAA0B;AAAEC,MAAAA,cAAc,EAAdA,cAAF;AAAkBC,MAAAA,WAAW,EAAXA,WAAlB;AAA+BE,MAAAA,WAAW,EAAXA,WAA/B;AAA4CL,MAAAA,OAAO,EAAPA;AAA5C,KAA1B,CAfH,CADF;AAmBD,G;;SAEDyB,W,GAAA,uBAAa;AACX,QAAI,KAAK3B,aAAT,EAAuB;AACrB,WAAKA,aAAL,CAAmBC,KAAnB;AACD;AACF,G;;;EAnG2B2B,gB;;eAuGftC,e","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport BrowserCaption from '../zhn-atoms/BrowserCaption'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nimport Interact from '../../utils/Interact'\r\n\r\nconst CL_DIALOG = 'dialog';\r\nconst CL_DIALOG_OPEN = 'dialog show-popup';\r\n\r\nconst STYLE = {\r\n  ROOT: {\r\n    zIndex: 10,\r\n    position: 'absolute',\r\n    top: 30,\r\n    left: 50,\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #3f5178',\r\n    borderRadius: 5,\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px'\r\n  },\r\n  CHILDREN: {\r\n    cursor: 'default'\r\n  },\r\n  COMMAND : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: 16,\r\n     marginBottom: 10,\r\n     marginRight: 4\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass DraggableDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n    commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n    onShowChart: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n     Interact.makeDragable(this.rootDiv)\r\n     this.prevFocusedEl = document.activeElement\r\n     this.rootDiv.focus()\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (this.props.isShow && !prevProps.isShow) {\r\n      this.rootDiv.focus()\r\n    }\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    const focused = document.activeElement;\r\n     if (focused == this.rootDiv){\r\n       this.props.onKeyDown(event)\r\n     }\r\n  }\r\n\r\n  _handleClose = (event) => {\r\n    if (this.prevFocusedEl) {\r\n      this.prevFocusedEl.focus()\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  _renderCommandButton = ({\r\n    commandButtons, styleButton:S={}, onShowChart, onClose\r\n  }) => {\r\n    return (\r\n      <div style={STYLE.COMMAND}>\r\n        {commandButtons}\r\n        {typeof onShowChart === 'function' &&\r\n          <RaisedButton\r\n             rootStyle={S.RAISED_ROOT}\r\n             clDiv={S.CL_RAISED_DIV}\r\n             caption=\"Show\"\r\n             onClick={onShowChart}\r\n          />\r\n        }\r\n        <RaisedButton\r\n           rootStyle={S.RAISED_ROOT}\r\n           clDiv={S.CL_RAISED_DIV}\r\n           caption=\"Close\"\r\n           onClick={this._handleClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           isShow, rootStyle,\r\n           caption, browserCaptionStyle,\r\n           commandButtons, styleButton,\r\n           children,\r\n           onShowChart, onClose\r\n         } = this.props\r\n        , _styleShow = isShow ? STYLE.BLOCK : STYLE.NONE\r\n        , _classShow = isShow ? CL_DIALOG_OPEN : CL_DIALOG;\r\n    return (\r\n      <div\r\n           ref={c => this.rootDiv = c}\r\n           className={_classShow}\r\n           style={Object.assign({}, STYLE.ROOT, rootStyle, _styleShow)}\r\n           tabIndex=\"0\"\r\n           onKeyDown={this._handleKeyDown}\r\n      >\r\n        <BrowserCaption\r\n           rootStyle={browserCaptionStyle}\r\n           caption={caption}\r\n           onClose={onClose}\r\n        />\r\n        <div style={STYLE.CHILDREN}>\r\n           {children}\r\n        </div>\r\n        {this._renderCommandButton({ commandButtons, styleButton, onShowChart, onClose })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusPrevEl(){\r\n    if (this.prevFocusedEl){\r\n      this.prevFocusedEl.focus()\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default DraggableDialog\r\n"],"file":"DraggableDialog.js"}