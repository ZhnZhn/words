{"version":3,"sources":["../../../src/components/zhn-moleculs/DraggableDialog.jsx"],"names":["CL_DIALOG","CL_DIALOG_OPEN","STYLE","ROOT","position","top","left","backgroundColor","border","borderRadius","boxShadow","zIndex","CHILDREN","cursor","COMMAND","float","marginTop","marginBottom","marginRight","BLOCK","display","NONE","DraggableDialog","_handleKeyDown","event","focused","document","activeElement","rootDiv","props","onKeyDown","_handleClose","prevFocusedEl","focus","onClose","_renderCommandButton","commandButtons","styleButton","S","onShowChart","RAISED_ROOT","CL_RAISED_DIV","makeDragable","prevProps","prevState","isShow","rootStyle","caption","browserCaptionStyle","children","_styleShow","_classShow","c","Object","assign"],"mappings":"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","file":"DraggableDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport BrowserCaption from '../zhn-atoms/BrowserCaption'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nimport Interact from '../../utils/Interact'\r\n\r\nconst CL_DIALOG = 'dialog';\r\nconst CL_DIALOG_OPEN = 'dialog show-popup';\r\n\r\nconst STYLE = {\r\n  ROOT: {\r\n    position: 'absolute',\r\n    top: '30px',\r\n    left: '50px',\r\n    backgroundColor: '#4D4D4D',\r\n    border: 'solid 2px #3f5178',\r\n    borderRadius: '5px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 0px 0px 6px',\r\n    zIndex: 10\r\n  },\r\n  CHILDREN: {\r\n    cursor: 'default'\r\n  },\r\n  COMMAND : {\r\n     cursor: 'default',\r\n     float: 'right',\r\n     marginTop: '16px',\r\n     marginBottom: '10px',\r\n     marginRight: '4px'\r\n  },\r\n  BLOCK: {\r\n    display: 'block'\r\n  },\r\n  NONE: {\r\n    display: 'none'\r\n  }\r\n};\r\n\r\nclass DraggableDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    caption: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n    commandButtons: PropTypes.arrayOf(PropTypes.element),\r\n    onShowChart: PropTypes.func,\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  componentDidMount(){\r\n     Interact.makeDragable(this.rootDiv)\r\n     this.prevFocusedEl = document.activeElement\r\n     this.rootDiv.focus()\r\n  }\r\n  componentDidUpdate(prevProps, prevState){\r\n    if (this.props.isShow && !prevProps.isShow) {\r\n      this.rootDiv.focus()\r\n    }\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    const focused = document.activeElement;\r\n     if (focused == this.rootDiv){\r\n       this.props.onKeyDown(event)\r\n     }\r\n  }\r\n\r\n  _handleClose = (event) => {\r\n    if (this.prevFocusedEl) {\r\n      this.prevFocusedEl.focus()\r\n    }\r\n    this.props.onClose()\r\n  }\r\n\r\n  _renderCommandButton = ({\r\n    commandButtons, styleButton:S={}, onShowChart, onClose\r\n  }) => {\r\n    return (\r\n      <div style={STYLE.COMMAND}>\r\n        {commandButtons}\r\n        {typeof onShowChart === 'function' &&\r\n          <RaisedButton\r\n             rootStyle={S.RAISED_ROOT}\r\n             clDiv={S.CL_RAISED_DIV}\r\n             caption=\"Show\"\r\n             onClick={onShowChart}\r\n          />\r\n        }\r\n        <RaisedButton\r\n           rootStyle={S.RAISED_ROOT}\r\n           clDiv={S.CL_RAISED_DIV}\r\n           caption=\"Close\"\r\n           onClick={this._handleClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n           isShow, rootStyle,\r\n           caption, browserCaptionStyle,\r\n           commandButtons, styleButton,\r\n           children,\r\n           onShowChart, onClose\r\n         } = this.props\r\n        , _styleShow = isShow ? STYLE.BLOCK : STYLE.NONE\r\n        , _classShow = isShow ? CL_DIALOG_OPEN : CL_DIALOG;\r\n    return (\r\n      <div\r\n           ref={c => this.rootDiv = c}\r\n           className={_classShow}\r\n           style={Object.assign({}, STYLE.ROOT, rootStyle, _styleShow)}\r\n           tabIndex=\"0\"\r\n           onKeyDown={this._handleKeyDown}\r\n      >\r\n        <BrowserCaption\r\n           rootStyle={browserCaptionStyle}\r\n           caption={caption}\r\n           onClose={onClose}\r\n        />\r\n        <div style={STYLE.CHILDREN}>\r\n           {children}\r\n        </div>\r\n        {this._renderCommandButton({ commandButtons, styleButton, onShowChart, onClose })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  focusPrevEl(){\r\n    if (this.prevFocusedEl){\r\n      this.prevFocusedEl.focus()\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default DraggableDialog\r\n"]}