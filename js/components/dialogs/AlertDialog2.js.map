{"version":3,"sources":["../../../src/components/dialogs/AlertDialog2.jsx"],"names":["CL","ELL","S","CAPTION","color","fontWeight","ROW","display","alignItems","marginRight","marginTop","marginLeft","marginBottom","TITLE","width","paddingLeft","fontSize","lineHeight","ITEM_ID","verticalAlign","DESCR","paddingRight","whiteSpace","wordWrap","AlertDialog2","nextProps","nextState","props","isShow","theme","data","onClose","TS","createStyle","caption","itemId","descr","_caption","BT","R_DIALOG","BROWSER_CAPTION","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,KAAK;AACTC,OAAK;AADI,CAAX;;AAIA,IAAMC,IAAI;AACRC,WAAS;AACP;AACAC,WAAO,SAFA;AAGPC,gBAAY;AAHL,GADD;AAMRC,OAAK;AACH;AACAC,aAAS,MAFN;AAGHC,gBAAY,QAHT;AAIHC,iBAAa,KAJV;AAKHC,eAAW,KALR;AAMHC,gBAAY,KANT;AAOHC,kBAAc;AAPX,GANG;AAeRC,SAAQ;AACNN,aAAU,cADJ;AAENO,WAAQ,OAFF;AAGNC,iBAAc,MAHR;AAINX,WAAQ,SAJF;AAKNY,cAAU,MALJ;AAMNX,gBAAa,MANP;AAONY,gBAAa;AAPP,GAfA;AAwBRC,WAAU;AACRJ,WAAO,OADC;AAERV,WAAO,SAFC;AAGRC,gBAAa,MAHL;AAIRc,mBAAe;AAJP,GAxBF;AA8BRC,SAAO;AACLhB,WAAO,MADF;AAELU,WAAO,OAFF;AAGLC,iBAAa,MAHR;AAILM,kBAAc,KAJT;AAKLhB,gBAAY,MALP;AAMLY,gBAAY,GANP;AAOLK,gBAAY,UAPP;AAQLC,cAAU;AARL;AA9BC,CAAV;;IA0CMC,Y;;;;;;;;;;0CAkBkBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKE,KAAnB,IAA4BF,UAAUG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;AArBD;;;;;;;;;;;;;;6BAuBQ;AAAA,mBACmC,KAAKD,KADxC;AAAA,UACEE,KADF,UACEA,KADF;AAAA,UACSD,MADT,UACSA,MADT;AAAA,UACiBE,IADjB,UACiBA,IADjB;AAAA,UACuBC,OADvB,UACuBA,OADvB;AAAA,UAEAC,EAFA,GAEKH,MAAMI,WAAN,kBAFL;AAAA,0BAGuCH,IAHvC,CAGEI,OAHF;AAAA,UAGEA,OAHF,iCAGU,MAHV;AAAA,yBAGuCJ,IAHvC,CAGkBK,MAHlB;AAAA,UAGkBA,MAHlB,gCAGyB,EAHzB;AAAA,UAG6BC,KAH7B,GAGuCN,IAHvC,CAG6BM,KAH7B;AAAA,UAIAC,QAJA,GAIWH,UAAU,IAJrB;;AAKN,aACE;AAAA;AAAA;AACE,iBAAOF,GAAGM,EADZ;AAEE,iBAAON,GAAGO,QAFZ;AAGE,mBAAQ,WAHV;AAIE,mDAAmBP,GAAGQ,eAAtB,EAA0CtC,EAAEC,OAA5C,CAJF;AAKE,kBAAQyB,MALV;AAME,0BAAgB,IANlB;AAOE,mBAASG;AAPX;AASG;AAAA;AAAA,YAAK,OAAO7B,EAAEI,GAAd;AACG;AAAA;AAAA,cAAM,OAAOJ,EAAEW,KAAf;AACGwB,oBADH;AAEE;AAAA;AAAA;AACE,2BAAWrC,GAAGC,GADhB;AAEE,uBAAOC,EAAEgB,OAFX;AAGE,uBAAOiB;AAHT;AAKGA;AALH;AAFF;AADH,SATH;AAqBG;AAAA;AAAA,YAAK,OAAOjC,EAAEI,GAAd;AACG;AAAA;AAAA,cAAG,OAAOJ,EAAEkB,KAAZ;AACGgB;AADH;AADH;AArBH,OADF;AA6BD;;;4BA7CMK,Y,GAAe;AACpBX,QAAM;AADc,C;kBAgDT,yBAAUN,YAAV,C","file":"AlertDialog2.js","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Dialog.Style'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog';\r\n\r\nconst CL = {\r\n  ELL: 'ellipsis'\r\n};\r\n\r\nconst S = {\r\n  CAPTION: {\r\n    //color: '#f44336',\r\n    color: '#f44336',\r\n    fontWeight: 'bold'\r\n  },\r\n  ROW: {\r\n    //display: 'block',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: '5px',\r\n    marginTop: '5px',\r\n    marginLeft: '5px',\r\n    marginBottom: '5px'\r\n  },\r\n  TITLE : {\r\n    display : 'inline-block',\r\n    width : '360px',\r\n    paddingLeft : '10px',\r\n    color : '#F44336',\r\n    fontSize: '18px',\r\n    fontWeight : 'bold',\r\n    lineHeight : 2\r\n  },\r\n  ITEM_ID : {\r\n    width: '120px',\r\n    color: '#a487d4',\r\n    fontWeight : 'bold',\r\n    verticalAlign: 'bottom'\r\n  },\r\n  DESCR: {\r\n    color: 'gray',\r\n    width: '360px',\r\n    paddingLeft: '10px',\r\n    paddingRight: '8px',\r\n    fontWeight: 'bold',\r\n    lineHeight: 1.4,\r\n    whiteSpace: 'pre-line',\r\n    wordWrap: 'break-word'\r\n  }\r\n}\r\n\r\nclass AlertDialog2 extends Component{\r\n\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      caption: PropTypes.string,\r\n      itemId: PropTypes.string,\r\n      descr: PropTypes.string\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(){\r\n    const { theme, isShow, data, onClose } = this.props\r\n        , TS = theme.createStyle(styleConfig)\r\n        , { caption='Item', itemId='', descr } = data\r\n        , _caption = caption + ': ';\r\n    return (\r\n      <ModalDialog\r\n        STYLE={TS.BT}\r\n        style={TS.R_DIALOG }\r\n        caption=\"Exception\"\r\n        captionStyle={{ ...TS.BROWSER_CAPTION, ...S.CAPTION }}\r\n        isShow={isShow}\r\n        isClosePrimary={true}\r\n        onClose={onClose}\r\n      >\r\n         <div style={S.ROW}>\r\n            <span style={S.TITLE}>\r\n              {_caption}\r\n              <span\r\n                className={CL.ELL}\r\n                style={S.ITEM_ID}\r\n                title={itemId}\r\n              >\r\n                {itemId}\r\n              </span>\r\n            </span>\r\n         </div>\r\n         <div style={S.ROW}>\r\n            <p style={S.DESCR}>\r\n              {descr}\r\n            </p>\r\n         </div>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(AlertDialog2)\r\n"]}