{"version":3,"sources":["../../../../src/components/dialogs/decorators/withValidationLoad.js"],"names":["_handleWithValidationLoad","validationMessages","fnCreateOption","onLoad","props","isValid","_updateValidationMessages","_handleWithValidationClose","onClose","setState","prevState","state","length","withValidationLoad","target","Object","assign","prototype"],"mappings":";;;;;AACA,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAC9BC,kBAD8B,EACVC,cADU,EACMC,MADN,EAEjC;AAAA,MADuCA,MACvC;AADuCA,IAAAA,MACvC,GADgD,KAAKC,KAAL,CAAWD,MAC3D;AAAA;;AACC,MAAIF,kBAAkB,CAACI,OAAvB,EAA+B;AAC7BF,IAAAA,MAAM,CAACD,cAAc,EAAf,CAAN;AACD;;AACD,OAAKI,yBAAL,CAA+BL,kBAA/B;AACD,CAPD;;AASA,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAChCC,OADgC,EAEjC;AAAA,MADCA,OACD;AADCA,IAAAA,OACD,GADS,KAAKJ,KAAL,CAAWI,OACpB;AAAA;;AACE,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AAChCA,IAAAA,OAAO;AACT;;AACD,OAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzBA,IAAAA,SAAS,CAACT,kBAAV,GAA+B,EAA/B;AACA,WAAOS,SAAP;AACD,GAHD;AAIH,CAVD;;AAaA,IAAMJ,yBAAyB,GAAG,SAA5BA,yBAA4B,CAASL,kBAAT,EAA4B;AAC5D,MAAIA,kBAAkB,CAACI,OAAvB,EAA+B;AAC7B,QAAI,KAAKM,KAAL,CAAWV,kBAAX,CAA8BW,MAA9B,GAAuC,CAA3C,EAA6C;AAC3C,WAAKH,QAAL,CAAc;AAAER,QAAAA,kBAAkB,EAAlBA;AAAF,OAAd;AACD;AACF,GAJD,MAIO;AACL,SAAKQ,QAAL,CAAc;AAAER,MAAAA,kBAAkB,EAAlBA;AAAF,KAAd;AACD;AACF,CARD;;AAUA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AACrCC,EAAAA,MAAM,CAACC,MAAP,CAAcF,MAAM,CAACG,SAArB,EAAgC;AAC9BjB,IAAAA,yBAAyB,EAAzBA,yBAD8B;AAE9BO,IAAAA,0BAA0B,EAA1BA,0BAF8B;AAG9BD,IAAAA,yBAAyB,EAAzBA;AAH8B,GAAhC;AAKD,CAND;;eAQeO,kB","sourcesContent":["\r\nconst _handleWithValidationLoad = function(\r\n    validationMessages, fnCreateOption, onLoad = this.props.onLoad\r\n){\r\n  if (validationMessages.isValid){\r\n    onLoad(fnCreateOption())\r\n  }\r\n  this._updateValidationMessages(validationMessages)\r\n};\r\n\r\nconst _handleWithValidationClose = function(\r\n   onClose=this.props.onClose\r\n ){\r\n    if (typeof onClose === 'function') {\r\n       onClose()\r\n    }\r\n    this.setState(prevState => {\r\n      prevState.validationMessages = []\r\n      return prevState;\r\n    })\r\n};\r\n\r\n\r\nconst _updateValidationMessages = function(validationMessages){\r\n  if (validationMessages.isValid){\r\n    if (this.state.validationMessages.length > 0){\r\n      this.setState({ validationMessages })\r\n    }\r\n  } else {\r\n    this.setState({ validationMessages })\r\n  }\r\n};\r\n\r\nconst withValidationLoad = (target) => {\r\n  Object.assign(target.prototype, {\r\n    _handleWithValidationLoad,\r\n    _handleWithValidationClose,\r\n    _updateValidationMessages\r\n  })\r\n}\r\n\r\nexport default withValidationLoad\r\n"],"file":"withValidationLoad.js"}