{"version":3,"sources":["../../../src/components/zhn-containers/WrapperContainer.jsx"],"names":["WrapperContainer","state","isShow","inits","shows","data","dialogs","currentDialog","_onStore","actionType","option","SHOW_ACTION","props","type","modalDialogType","setState","Router","getDialog","then","comp","push","_handleClose","_renderDialogs","store","map","dialog","index","React","createElement","key","onClose","bind","componentDidMount","unsubscribe","listen","componentWillUnmount","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import PropTypes from \"prop-types\";\r\n\r\nimport Router from '../dialogs/RouterModal';\r\nimport ModalContainer from './ModalContainer';\r\n\r\nclass WrapperContainer extends Component {\r\n  /*\r\n  static propTypes = {\r\n    store: PropTypes.shape({\r\n      listen: PropTypes.func\r\n    }),\r\n    SHOW_ACTION: PropTypes.string\r\n  }\r\n  */\r\n\r\n  state = {\r\n    isShow : false,\r\n    inits : {},\r\n    shows : {},\r\n    data : {},\r\n    dialogs : [],\r\n    currentDialog : null\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.unsubscribe = this.props.store\r\n      .listen(this._onStore)\r\n  }\r\n  componentWillUnmount(){\r\n    this.unsubscribe()\r\n  }\r\n  _onStore = (actionType, option) => {\r\n     const { SHOW_ACTION } = this.props;\r\n     if (actionType === SHOW_ACTION){       \r\n       const type = option.modalDialogType\r\n           , { inits, shows, data, dialogs } = this.state;\r\n\r\n       data[type] = option\r\n       shows[type] = true\r\n       if (inits[type]){\r\n         this.setState({\r\n           isShow: true, currentDialog: type,\r\n           shows, data\r\n         })\r\n       } else {\r\n         Router.getDialog(type)\r\n           .then(comp => {\r\n             if (comp) {\r\n               dialogs.push({ type, comp })\r\n               inits[type] = true\r\n               this.setState({\r\n                 isShow: true, currentDialog: type,\r\n                 shows, data, dialogs\r\n               });\r\n             }\r\n           })\r\n       }\r\n     }\r\n  }\r\n\r\n  _handleClose = (type) => {\r\n    this.state.shows[type] = false;\r\n    this.setState({\r\n      isShow : false,\r\n      currentDialog: null,\r\n      shows : this.state.shows\r\n    })\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { store } = this.props\r\n        , { shows, data, dialogs } = this.state;\r\n\r\n    return dialogs.map((dialog, index) => {\r\n      const { type, comp } = dialog;\r\n      return React.createElement(comp, {\r\n         key: type,\r\n         isShow: shows[type],\r\n         data: data[type],\r\n         store : store,\r\n         onClose: this._handleClose.bind(null, type)\r\n      })\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { isShow, currentDialog } = this.state;\r\n\r\n    return (\r\n      <ModalContainer\r\n          isShow={isShow}\r\n          onClose={this._handleClose.bind(null, currentDialog)}\r\n      >\r\n         {this._renderDialogs()}\r\n     </ModalContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WrapperContainer\r\n"],"file":"WrapperContainer.js"}