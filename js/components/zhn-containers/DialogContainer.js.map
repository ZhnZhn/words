{"version":3,"sources":["../../../src/components/zhn-containers/DialogContainer.jsx"],"names":["S","ROOT","zIndex","position","top","left","width","_doVisible","arr","keyValue","index","max","length","i","key","slice","_updateVisible","state","maxDialog","hmIs","visibleDialogs","push","DialogContainer","props","_onStore","actionType","option","showAction","setState","Comp","prevState","compDialogs","_handleToggleDialog","filter","value","elHtml","style","cursor","_renderDialogs","map","cloneElement","isShow","onClose","bind","document","getElementsByTagName","unsubscribe","store","listen"],"mappings":"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","file":"DialogContainer.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    zIndex : 1030,\r\n    position: 'absolute',\r\n    top: '70px',\r\n    left: '10px',\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst _doVisible = function(arr, keyValue){\r\n  let index\r\n    , max = arr.length\r\n    , i;\r\n  for (i=0; i<max; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i\r\n      break;\r\n    }\r\n  }\r\n  return [ ...arr.slice(0, index), ...arr.slice(index+1), arr[index] ];\r\n}\r\n\r\nconst _updateVisible = (state, key, maxDialog) => {\r\n  const { hmIs } = state;\r\n  if (!hmIs[key]){\r\n    let { visibleDialogs } = state;\r\n    hmIs[key] = true\r\n    visibleDialogs.push(key)\r\n    if (visibleDialogs.length > maxDialog){\r\n      hmIs[visibleDialogs[0]] = false\r\n      visibleDialogs = visibleDialogs.slice(1)\r\n    }\r\n  }\r\n}\r\n\r\nclass DialogContainer extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.elHtml = document.getElementsByTagName('html')[0]\r\n    this.state = {\r\n      hmIs: {},\r\n      compDialogs : [],\r\n      visibleDialogs: []\r\n    }\r\n  }\r\n\r\n   componentDidMount(){\r\n     this.unsubscribe = this.props.store.listen(this._onStore)\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe()\r\n   }\r\n\r\n   _onStore = (actionType, option) => {\r\n      const { showAction } = this.props;\r\n      if (actionType === showAction){\r\n         this.setState(prevState => {\r\n           const { key, Comp } = option\r\n               , { maxDialog } = this.props;\r\n           _updateVisible(prevState, key, maxDialog)\r\n           if (!Comp){\r\n              prevState.compDialogs = _doVisible(prevState.compDialogs, key)\r\n           } else {\r\n              prevState.compDialogs.push(Comp)\r\n           }\r\n           return prevState;\r\n         })\r\n      }\r\n   }\r\n\r\n  _handleToggleDialog = (key) => {\r\n    this.setState(prevState => {\r\n      const { hmIs } = prevState;\r\n      hmIs[key] = !hmIs[key]\r\n      if (!hmIs[key]) {\r\n        prevState.visibleDialogs = prevState.visibleDialogs.filter(value => {\r\n           return value !== key;\r\n        })\r\n        this.elHtml.style.cursor = ''\r\n      }\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { hmIs, compDialogs } = this.state;\r\n    return compDialogs.map(Comp => {\r\n       const key = Comp.key;\r\n       return React.cloneElement(Comp, {\r\n             key : key,\r\n             isShow  : hmIs[key],\r\n             onClose : this._handleToggleDialog.bind(this, key)\r\n       });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer\r\n"]}