{"version":3,"sources":["../../../src/components/zhn-containers/DialogContainer.jsx"],"names":["S","ROOT","zIndex","position","top","left","width","_doVisible","arr","keyValue","index","max","length","i","key","slice","_updateVisible","state","maxDialog","hmIs","visibleDialogs","push","DialogContainer","props","_onStore","actionType","option","showAction","setState","prevState","Comp","compDialogs","_handleToggleDialog","filter","value","elHtml","style","cursor","_renderDialogs","map","React","cloneElement","isShow","onClose","bind","document","getElementsByTagName","componentDidMount","unsubscribe","store","listen","componentWillUnmount","render","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst S = {\r\n  ROOT: {\r\n    zIndex : 1030,\r\n    position: 'absolute',\r\n    top: '70px',\r\n    left: '10px',\r\n    width: '99%'\r\n  }\r\n};\r\n\r\nconst _doVisible = function(arr, keyValue){\r\n  let index\r\n    , max = arr.length\r\n    , i;\r\n  for (i=0; i<max; i++){\r\n    if (arr[i].key === keyValue){\r\n      index = i\r\n      break;\r\n    }\r\n  }\r\n  return [ ...arr.slice(0, index), ...arr.slice(index+1), arr[index] ];\r\n}\r\n\r\nconst _updateVisible = (state, key, maxDialog) => {\r\n  const { hmIs } = state;\r\n  if (!hmIs[key]){\r\n    let { visibleDialogs } = state;\r\n    hmIs[key] = true\r\n    visibleDialogs.push(key)\r\n    if (visibleDialogs.length > maxDialog){\r\n      hmIs[visibleDialogs[0]] = false\r\n      visibleDialogs = visibleDialogs.slice(1)\r\n    }\r\n  }\r\n}\r\n\r\nclass DialogContainer extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.elHtml = document.getElementsByTagName('html')[0]\r\n    this.state = {\r\n      hmIs: {},\r\n      compDialogs : [],\r\n      visibleDialogs: []\r\n    }\r\n  }\r\n\r\n   componentDidMount(){\r\n     this.unsubscribe = this.props.store.listen(this._onStore)\r\n   }\r\n   componentWillUnmount(){\r\n     this.unsubscribe()\r\n   }\r\n\r\n   _onStore = (actionType, option) => {\r\n      const { showAction } = this.props;\r\n      if (actionType === showAction){\r\n         this.setState(prevState => {\r\n           const { key, Comp } = option\r\n               , { maxDialog } = this.props;\r\n           _updateVisible(prevState, key, maxDialog)\r\n           if (!Comp){\r\n              prevState.compDialogs = _doVisible(prevState.compDialogs, key)\r\n           } else {\r\n              prevState.compDialogs.push(Comp)\r\n           }\r\n           return prevState;\r\n         })\r\n      }\r\n   }\r\n\r\n  _handleToggleDialog = (key) => {\r\n    this.setState(prevState => {\r\n      const { hmIs } = prevState;\r\n      hmIs[key] = !hmIs[key]\r\n      if (!hmIs[key]) {\r\n        prevState.visibleDialogs = prevState.visibleDialogs.filter(value => {\r\n           return value !== key;\r\n        })\r\n        this.elHtml.style.cursor = ''\r\n      }\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  _renderDialogs = () => {\r\n    const { hmIs, compDialogs } = this.state;\r\n    return compDialogs.map(Comp => {\r\n       const key = Comp.key;\r\n       return React.cloneElement(Comp, {\r\n             key : key,\r\n             isShow  : hmIs[key],\r\n             onClose : this._handleToggleDialog.bind(this, key)\r\n       });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={S.ROOT}>\r\n        {this._renderDialogs()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer\r\n"],"file":"DialogContainer.js"}