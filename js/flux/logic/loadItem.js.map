{"version":3,"sources":["../../../src/flux/logic/loadItem.js"],"names":["_fnCatch","error","onFailed","_fFetch","adapter","json","option","onCompleted","config","toConfig","itemConf","loadItem","api","getRequestUrl","crOptions","checkResponse","fetchOptions","undefined","uri","onCheckResponse","onFetch","onCatch"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxCA,EAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,CAFD;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD;AAAA,SAAa,iBAAuC;AAAA,QAA5BC,IAA4B,SAA5BA,IAA4B;AAAA,QAAtBC,MAAsB,SAAtBA,MAAsB;AAAA,QAAdC,WAAc,SAAdA,WAAc;AAClE,QAAMC,MAAM,GAAGJ,OAAO,CAACK,QAAR,CAAiBJ,IAAjB,EAAuBC,MAAvB,CAAf;AACA,QAAMI,QAAQ,GAAGJ,MAAM,CAACI,QAAxB;AACAH,IAAAA,WAAW,CAAC;AAAEC,MAAAA,MAAM,EAANA,MAAF;AAAUE,MAAAA,QAAQ,EAARA;AAAV,KAAD,EAAuBJ,MAAvB,CAAX;AACD,GAJe;AAAA,CAAhB;;AAMA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAASL,MAAT,EAAiBC,WAAjB,EAA8BL,QAA9B,EAAuC;AAAA,MAC9CU,GAD8C,GAC7BN,MAD6B,CAC9CM,GAD8C;AAAA,MACzCR,OADyC,GAC7BE,MAD6B,CACzCF,OADyC;AAAA,MAE9CS,aAF8C,GAEFD,GAFE,CAE9CC,aAF8C;AAAA,MAE/BC,SAF+B,GAEFF,GAFE,CAE/BE,SAF+B;AAAA,MAEpBC,aAFoB,GAEFH,GAFE,CAEpBG,aAFoB;AAAA,MAGhDC,YAHgD,GAGhC,OAAOF,SAAP,KAAqB,UAAtB,GACXA,SAAS,CAACR,MAAD,CADE,GAEXW,SAL4C;AAMtD,sBAAQ;AACNC,IAAAA,GAAG,EAAEL,aAAa,CAACP,MAAD,CADZ;AAENA,IAAAA,MAAM,EAAEA,MAFF;AAGNU,IAAAA,YAAY,EAAEA,YAHR;AAING,IAAAA,eAAe,EAAEJ,aAJX;AAKNK,IAAAA,OAAO,EAAEjB,OAAO,CAACC,OAAD,CALV;AAMNG,IAAAA,WAAW,EAAEA,WANP;AAONc,IAAAA,OAAO,EAAErB,QAPH;AAQNE,IAAAA,QAAQ,EAAEA;AARJ,GAAR;AAUD,CAhBD;;eAkBeS,Q","sourcesContent":["import fnFetch from '../../utils/fn'\r\n\r\nconst _fnCatch = ({ error, onFailed }) => {\r\n  onFailed(error)\r\n};\r\n\r\nconst _fFetch = (adapter) => function({ json, option, onCompleted }){\r\n  const config = adapter.toConfig(json, option);\r\n  const itemConf = option.itemConf;\r\n  onCompleted({ config, itemConf }, option)\r\n};\r\n\r\nconst loadItem = function(option, onCompleted, onFailed){\r\n  const { api, adapter } = option\r\n      , { getRequestUrl, crOptions, checkResponse } = api\r\n      , fetchOptions = (typeof crOptions === 'function')\r\n          ? crOptions(option)\r\n          : undefined;\r\n  fnFetch({\r\n    uri: getRequestUrl(option),\r\n    option: option,\r\n    fetchOptions: fetchOptions,\r\n    onCheckResponse: checkResponse,\r\n    onFetch: _fFetch(adapter),\r\n    onCompleted: onCompleted,\r\n    onCatch: _fnCatch,\r\n    onFailed: onFailed\r\n  })\r\n};\r\n\r\nexport default loadItem\r\n"],"file":"loadItem.js"}