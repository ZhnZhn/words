{"version":3,"sources":["../../../src/flux/stores/ComponentSlice.js"],"names":["DF_WATCH_PANE_ID","DialogLogic","showDialog","slice","itemConf","type","key","Comp","crDialog","PaneLogic","showPane","store","paneId","id","crPane","CompLogic","crAbout","ComponentSlice","dialogInit","paneInit","showAlertDialog","option","modalDialogType","EXCEPTION","trigger","SHOW_MODAL_DIALOG","onShowBrowser","browserId","SHOW_BROWSER","onShowDialog","event","r","SHOW_DIALOG","onShowModalDialog","onShowPane","pane","SHOW_PANE","CLOSE_ABOUT","onShowAbout","_initAbout","SHOW_ABOUT","onChangeTheme","themeName","CHANGE_THEME","onClickWatchItem","item","CLICK_WATCH_ITEM"],"mappings":"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","file":"ComponentSlice.js","sourcesContent":["import { T } from '../actions/ComponentActions'\r\n\r\nimport Factory from '../logic/Factory'\r\nimport { ModalDialog as MD } from '../../constants/Type'\r\n\r\nconst DF_WATCH_PANE_ID = 'P_WD_W';\r\n\r\nconst DialogLogic = {\r\n  showDialog(slice, itemConf){\r\n    const { type } = itemConf;\r\n    if (slice[type]) {\r\n      return { key: type };\r\n    } else {\r\n      const Comp = Factory.crDialog(itemConf);\r\n      slice[type] = true\r\n      return { key: type, Comp };\r\n    }\r\n  }\r\n};\r\n\r\nconst PaneLogic = {\r\n  showPane(slice, itemConf, store){\r\n    const { type, paneId } = itemConf;\r\n    if (slice[type]){\r\n      return { id: paneId };\r\n    } else {\r\n      const Comp = Factory.crPane(itemConf, store)\r\n      slice[type] = true;\r\n      return { Comp };\r\n    }\r\n  },\r\n\r\n  /*\r\n  togglePane(itemConf){\r\n    return {\r\n      id: itemConf.paneId\r\n    };\r\n  }\r\n  */\r\n\r\n}\r\n\r\nconst CompLogic = {\r\n  crAbout(store) {\r\n    const Comp = Factory.crAbout(store)\r\n    return { Comp };\r\n  }\r\n}\r\n\r\nconst ComponentSlice = {\r\n  dialogInit: {},\r\n  paneInit: {},\r\n\r\n  showAlertDialog(option={}){\r\n   option.modalDialogType = MD.EXCEPTION;\r\n   this.trigger(T.SHOW_MODAL_DIALOG, option);\r\n },\r\n\r\n  onShowBrowser(browserId) {\r\n    this.trigger(T.SHOW_BROWSER, browserId)\r\n  },\r\n\r\n  onShowDialog(itemConf, event){\r\n    const r = DialogLogic.showDialog(this.dialogInit, itemConf);\r\n    this.trigger(T.SHOW_DIALOG, r)\r\n  },\r\n\r\n  onShowModalDialog(modalDialogType, option={}){\r\n    option.modalDialogType = modalDialogType\r\n    this.trigger(T.SHOW_MODAL_DIALOG, option)\r\n  },\r\n\r\n  onShowPane(itemConf){\r\n    const pane = PaneLogic.showPane(this.paneInit, itemConf, this);\r\n    //const browser = BrowserLogic.updateBadge(this.hmBrowser, itemConf);\r\n    this.trigger(T.SHOW_PANE, pane)\r\n    this.trigger(T.CLOSE_ABOUT)\r\n    //this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  /*\r\n  onTogglePane(itemConf){\r\n    //const browser = BrowserLogic.toggleBadge(this.hmBrowser, itemConf);\r\n    const pane = PaneLogic.togglePane(itemConf);\r\n    this.trigger(T.TOGGLE_PANE, pane)\r\n    //this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  */\r\n  /*\r\n  onClosePane(itemConf){\r\n    //const r = BrowserLogic.updateBadge(this.hmBrowser, itemConf, {isOpen:false});\r\n    //this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n  */\r\n\r\n  onShowAbout(){\r\n    if (!this._initAbout) {\r\n      const pane = CompLogic.crAbout(this);\r\n      this._initAbout = true\r\n      this.trigger(T.SHOW_PANE, pane)\r\n    } else {\r\n      this.trigger(T.SHOW_ABOUT)\r\n    }\r\n  },\r\n\r\n  onChangeTheme(themeName){\r\n    this.trigger(T.CHANGE_THEME, themeName)\r\n  },\r\n\r\n  onClickWatchItem(item){\r\n    item.id = item.id || DF_WATCH_PANE_ID;\r\n    this.trigger(T.CLICK_WATCH_ITEM, item)\r\n  }\r\n\r\n}\r\n\r\nexport default ComponentSlice\r\n"]}