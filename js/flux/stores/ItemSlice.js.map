{"version":3,"sources":["../../../src/flux/stores/ItemSlice.js"],"names":["Logic","addItem","slice","config","itemConf","paneId","paneSlice","configs","Array","isArray","_isItem","id","unshift","findIndex","c","isItem","_isConfigs","removeItem","filter","undefined","removeItems","removeItemsUnder","_undexIndex","ItemSlice","items","word","onLoadItem","option","ComponentActions","showPane","triggerLoading","LPT","LOADING","onLoadItemCompleted","result","limitRemaining","_option","trigger","T","LOAD_ITEM_COMPLETED","LOADING_COMPLETE","onLoadItemFailed","showModalDialog","LOADING_FAILED","onRemoveItem","_options","onRemoveItems","onRemoveItemsUnder"],"mappings":"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","sourcesContent":["\r\nimport { T } from '../actions/ItemActions'\r\nimport ComponentActions from '../actions/ComponentActions'\r\nimport { T as LPT } from '../actions/LoadingActions'\r\n\r\n\r\nconst Logic = {\r\n  addItem(slice, config, itemConf){\r\n    const { paneId='paneId' } = itemConf;\r\n    config.paneId = paneId\r\n\r\n    const paneSlice = slice[paneId] || {}\r\n       , { configs } = paneSlice;\r\n    if (Array.isArray(configs)) {\r\n      if (!Logic._isItem(configs, config.id)) {\r\n        configs.unshift(config)\r\n      }\r\n    } else {\r\n      slice[paneId] = {\r\n        configs: [ config ]\r\n      };\r\n    }\r\n    return {\r\n      configs: slice[paneId].configs,\r\n      id: paneId\r\n    };\r\n  },\r\n\r\n  _isItem(configs, id){\r\n    return  Array.isArray(configs) &&\r\n      configs.findIndex(c => c.id === id) !== -1\r\n      ? true\r\n      : false;\r\n  },\r\n\r\n  isItem(slice, paneId, id){\r\n    const paneSlice = slice[paneId] || {}\r\n       , { configs } = paneSlice;\r\n    return Logic._isItem(configs, id);\r\n  },\r\n\r\n  _isConfigs(slice){\r\n    return slice\r\n      && Array.isArray(slice.configs);\r\n  },\r\n\r\n  removeItem(slice, config){\r\n    const { paneId, id } = config\r\n        , paneSlice = slice[paneId];\r\n    if ( this._isConfigs(paneSlice) ) {\r\n      slice[paneId].configs = paneSlice.configs\r\n        .filter(c => c.id !== id )\r\n      return {\r\n        configs: slice[paneId].configs,\r\n        id: paneId\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  },\r\n\r\n  removeItems(slice, paneId){\r\n    const paneSlice = slice[paneId]\r\n    if (paneSlice) {\r\n      paneSlice.configs = []\r\n    }\r\n  },\r\n\r\n  removeItemsUnder(slice, config={}){\r\n    const { paneId, id } = config\r\n        , paneSlice = slice[paneId];\r\n    if ( this._isConfigs(paneSlice) ) {\r\n      const _undexIndex = paneSlice.configs\r\n        .findIndex(c => c.id === id )\r\n      paneSlice.configs = paneSlice.configs\r\n         .slice(_undexIndex+1)\r\n      return {\r\n         configs: paneSlice.configs,\r\n         id: paneId\r\n       };\r\n    }\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst ItemSlice = {\r\n  items: {},\r\n\r\n  isItem(paneId, word) {\r\n    return Logic.isItem(this.items, paneId, word);\r\n  },\r\n\r\n  onLoadItem(option={}){\r\n    ComponentActions.showPane(option.itemConf)\r\n    this.triggerLoading(LPT.LOADING)\r\n  },\r\n  onLoadItemCompleted(result, option){\r\n    const {\r\n            config, itemConf\r\n          } = result\r\n        , { limitRemaining } = option;\r\n    if (config) {\r\n      const _option = Logic.addItem(this.items, config, itemConf);\r\n      this.trigger(T.LOAD_ITEM_COMPLETED, _option)\r\n    }\r\n    this.triggerLoading(LPT.LOADING_COMPLETE, limitRemaining)\r\n  },\r\n  onLoadItemFailed(option){\r\n    ComponentActions.showModalDialog('ALERT_DIALOG', option)\r\n    this.triggerLoading(LPT.LOADING_FAILED)\r\n  },\r\n\r\n  onRemoveItem(config){\r\n    const _options = Logic.removeItem(this.items, config)\r\n    if (_options) {\r\n      this.trigger(T.LOAD_ITEM_COMPLETED, _options)\r\n    }  \r\n  },\r\n  onRemoveItems(paneId){\r\n    Logic.removeItems(this.items, paneId)\r\n    this.trigger(T.LOAD_ITEM_COMPLETED, {\r\n      configs: [], id: paneId\r\n    })\r\n  },\r\n  onRemoveItemsUnder(config){\r\n    const _option = Logic.removeItemsUnder(this.items, config)\r\n    if (_option){\r\n      this.trigger(T.LOAD_ITEM_COMPLETED, _option)\r\n    }\r\n  }\r\n};\r\n\r\nexport default ItemSlice\r\n"],"file":"ItemSlice.js"}