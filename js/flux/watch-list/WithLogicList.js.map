{"version":3,"sources":["../../../src/flux/watch-list/WithLogicList.js"],"names":["crMsgNotFound","crMsgListExisted","findGroup","isInArraySameCaption","getArrayWithObj","findIndex","getArrayWithRename","filter","WithLogicList","createList","watchList","captionGroup","captionList","groupTo","lists","caption","isDone","renameList","captionListFrom","captionListTo","groupIn","listIndex","deleteList","groupFrom"],"mappings":";;;;;;AACA;;;;;;IAGEA,a,qBAAAA,a;IACAC,gB,qBAAAA,gB;IAEAC,S,qBAAAA,S;IACAC,oB,qBAAAA,oB;IACAC,e,qBAAAA,e;IACAC,S,qBAAAA,S;IACAC,kB,qBAAAA,kB;IACAC,M,qBAAAA,M;;;AAGF,IAAMC,gBAAgB;AAEpBC,YAFoB,sBAETC,SAFS,QAE8B;AAAA,QAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,QAAbC,WAAa,QAAbA,WAAa;;AAChD,QAAMC,UAAUX,UAAUQ,SAAV,EAAqBC,YAArB,CAAhB;;AAEA,QAAI,CAACE,OAAL,EAAa;AACX,aAAOb,cAAc,OAAd,EAAuBW,YAAvB,CAAP;AACD;AACD,QAAMG,QAAQD,QAAQC,KAAtB;AACA,QAAIX,qBAAqBW,KAArB,EAA4BF,WAA5B,CAAJ,EAA6C;AAC3C,aAAOX,iBAAiBW,WAAjB,EAA8BD,YAA9B,CAAP;AACD;;AAEDE,YAAQC,KAAR,GAAgBV,gBAAgBU,KAAhB,EAAuB,EAAEC,SAASH,WAAX,EAAvB,CAAhB;AACA,WAAO,EAAEI,QAAQ,IAAV,EAAP;AACD,GAfmB;AAiBpBC,YAjBoB,sBAiBTP,SAjBS,SAiBiD;AAAA,QAA9CC,YAA8C,SAA9CA,YAA8C;AAAA,QAAhCO,eAAgC,SAAhCA,eAAgC;AAAA,QAAfC,aAAe,SAAfA,aAAe;;AACnE,QAAMC,UAAUlB,UAAUQ,SAAV,EAAqBC,YAArB,CAAhB;;AAEA,QAAI,CAACS,OAAL,EAAa;AACX,aAAOpB,cAAc,OAAd,EAAuBW,YAAvB,CAAP;AACD;AACD,QAAMG,QAAQM,QAAQN,KAAtB;AACA,QAAMO,YAAYhB,UAAUS,KAAV,EAAiBI,eAAjB,CAAlB;AACA,QAAIG,cAAc,CAAC,CAAnB,EAAqB;AACnB,aAAOrB,cAAc,MAAd,EAAsBkB,eAAtB,CAAP;AACD;AACD,QAAKf,qBAAqBW,KAArB,EAA4BK,aAA5B,CAAL,EAAiD;AAC/C,aAAOlB,iBAAiBkB,aAAjB,EAAgCR,YAAhC,CAAP;AACD;;AAEDS,YAAQN,KAAR,GAAgBR,mBAAmBQ,KAAnB,EAA0BO,SAA1B,EAAqCF,aAArC,CAAhB;AACA,WAAO,EAAEH,QAAQ,IAAV,EAAP;AACD,GAlCmB;AAoCpBM,YApCoB,sBAoCTZ,SApCS,SAoC8B;AAAA,QAA3BC,YAA2B,SAA3BA,YAA2B;AAAA,QAAbC,WAAa,SAAbA,WAAa;;AAChD,QAAMW,YAAYrB,UAAUQ,SAAV,EAAqBC,YAArB,CAAlB;;AAEA,QAAI,CAACY,SAAL,EAAe;AACb,aAAOvB,cAAc,OAAd,EAAuBW,YAAvB,CAAP;AACD;;AAEDY,cAAUT,KAAV,GAAkBP,OAAOgB,UAAUT,KAAjB,EAAwBF,WAAxB,CAAlB;AACA,WAAO,EAAEI,QAAQ,IAAV,EAAP;AACD;AA7CmB,CAAtB;;kBAiDeR,a","file":"WithLogicList.js","sourcesContent":["\r\nimport LogicFn from './LogicFn';\r\n\r\nconst {\r\n  crMsgNotFound,\r\n  crMsgListExisted,\r\n\r\n  findGroup,\r\n  isInArraySameCaption,\r\n  getArrayWithObj,\r\n  findIndex,\r\n  getArrayWithRename,\r\n  filter\r\n} = LogicFn;\r\n\r\nconst WithLogicList = {\r\n\r\n  createList(watchList, {captionGroup, captionList}){\r\n    const groupTo = findGroup(watchList, captionGroup)\r\n\r\n    if (!groupTo){\r\n      return crMsgNotFound('group', captionGroup);\r\n    }\r\n    const lists = groupTo.lists;\r\n    if (isInArraySameCaption(lists, captionList)){\r\n      return crMsgListExisted(captionList, captionGroup);\r\n    }\r\n\r\n    groupTo.lists = getArrayWithObj(lists, { caption: captionList });\r\n    return { isDone: true };\r\n  },\r\n\r\n  renameList(watchList, {captionGroup, captionListFrom, captionListTo}){\r\n    const groupIn = findGroup(watchList, captionGroup);\r\n\r\n    if (!groupIn){\r\n      return crMsgNotFound('group', captionGroup);\r\n    }\r\n    const lists = groupIn.lists;\r\n    const listIndex = findIndex(lists, captionListFrom);\r\n    if (listIndex === -1){\r\n      return crMsgNotFound('list', captionListFrom);\r\n    }\r\n    if ( isInArraySameCaption(lists, captionListTo) ){\r\n      return crMsgListExisted(captionListTo, captionGroup);\r\n    }\r\n\r\n    groupIn.lists = getArrayWithRename(lists, listIndex, captionListTo);\r\n    return { isDone: true };\r\n  },\r\n\r\n  deleteList(watchList, {captionGroup, captionList}){\r\n    const groupFrom = findGroup(watchList, captionGroup);\r\n\r\n    if (!groupFrom){\r\n      return crMsgNotFound('group', captionGroup);\r\n    }\r\n\r\n    groupFrom.lists = filter(groupFrom.lists, captionList);\r\n    return { isDone: true };\r\n  }\r\n\r\n};\r\n\r\nexport default WithLogicList\r\n"]}