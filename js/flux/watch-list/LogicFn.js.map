{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["CAPTION","GROUPS","LISTS","notFoundItem","groupExisted","listExisted","itemExisted","ALERT_DND_LIST","ALERT_DND_ITEM","LogicFn","crMsgNotFound","itemType","name","isDone","message","crMsgGroupExisted","caption","crMsgListExisted","captionList","captionGroup","crMsgItemExisted","crAlertItemExisted","dropId","dragId","itemId","crAlertListExisted","dropGroupCaption","dragListCaption","filter","imArr","filterByPropFn","getArrayWithObj","push","getArrayWithRename","editByPropFn","insertItemInArray","insertItem","findGroup","obj","findInPropArrayByProp","findList","findIndex","arr","findIndexByProp","isInArraySameCaption","isSameByProp"],"mappings":";;;;;;;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,UAAU,SAAhB;AAAA,IACMC,SAAS,QADf;AAAA,IAEMC,QAAQ,OAFd;;IAKEC,Y,sBAAAA,Y;IACAC,Y,sBAAAA,Y;IACAC,W,sBAAAA,W;IACAC,W,sBAAAA,W;IACAC,c,sBAAAA,c;IACAC,c,sBAAAA,c;;;AAIF,IAAMC,UAAU;AAEdC,eAFc,yBAEAC,QAFA,EAEUC,IAFV,EAEe;AAC3B,WAAO;AACLC,cAAQ,KADH;AAELC,eAASX,aAAaQ,QAAb,EAAuBC,IAAvB;AAFJ,KAAP;AAID,GAPa;AAQdG,mBARc,6BAQIC,OARJ,EAQY;AACxB,WAAO;AACLH,cAAQ,KADH;AAELC,eAASV,aAAaY,OAAb;AAFJ,KAAP;AAID,GAba;AAcdC,kBAdc,4BAcGC,WAdH,EAcgBC,YAdhB,EAc6B;AACzC,WAAO;AACLN,cAAQ,KADH;AAELC,eAAST,YAAYa,WAAZ,EAAyBC,YAAzB;AAFJ,KAAP;AAID,GAnBa;AAoBdC,kBApBc,4BAoBGJ,OApBH,EAoBYE,WApBZ,EAoBwB;AACpC,WAAO;AACLL,cAAQ,KADH;AAELC,eAASR,YAAYU,OAAZ,EAAqBE,WAArB;AAFJ,KAAP;AAID,GAzBa;;;AA2Bd;AACAG,oBA5Bc,8BA4BKC,MA5BL,EA4BaC,MA5Bb,EA4BoB;AAChC;AACEV,cAAQ,KADV;AAEEW,cAAWF,MAAX,SAAqBC;AAFvB,OAGKf,cAHL;AAKF,GAlCc;AAmCfiB,oBAnCe,8BAmCIC,gBAnCJ,EAmCsBC,eAnCtB,EAmCsC;AACnD;AACGd,cAAQ,KADX;AAEGW,cAAWE,gBAAX,SAA+BC;AAFlC,OAGMpB,cAHN;AAKD,GAzCc;;;AA6Cf;AACCqB,UAAS,iBAAGC,KAAH,CAASC,cAAT,CAAwB9B,OAAxB,CA9CK;AA+Cd+B,mBAAkB,iBAAGF,KAAH,CAASG,IA/Cb;;AAiDdC,sBAAoB,iBAAGJ,KAAH,CAASK,YAAT,CAAsBlC,OAAtB,CAjDN;;AAmDd;AACAmC,qBAAoB,iBAAGN,KAAH,CAASO,UApDf;AAqDd;;AAEAC,aAAY,iBAAGC,GAAH,CAAOC,qBAAP,CAA6BtC,MAA7B,EAAqCD,OAArC,CAvDE;AAwDdwC,YAAW,iBAAGF,GAAH,CAAOC,qBAAP,CAA6BrC,KAA7B,EAAoCF,OAApC,CAxDG;;AA0DdyC,aAAY,iBAAGC,GAAH,CAAOC,eAAP,CAAuB,SAAvB,CA1DE;AA2DdC,wBAAuB,iBAAGF,GAAH,CAAOG,YAAP,CAAoB7C,OAApB;;AA3DT,CAAhB;;kBA+DeS,O","file":"LogicFn.js","sourcesContent":["\r\nimport MsgWatch from '../../constants/MsgWatch'\r\n\r\nimport ut from '../../utils/fnUtil';\r\n\r\nconst CAPTION = 'caption'\r\n    , GROUPS = 'groups'\r\n    , LISTS = 'lists';\r\n\r\nconst  {\r\n  notFoundItem,\r\n  groupExisted,\r\n  listExisted,\r\n  itemExisted,\r\n  ALERT_DND_LIST,\r\n  ALERT_DND_ITEM\r\n} = MsgWatch;\r\n\r\n\r\nconst LogicFn = {\r\n\r\n  crMsgNotFound(itemType, name){\r\n    return {\r\n      isDone: false,\r\n      message: notFoundItem(itemType, name)\r\n    };\r\n  },\r\n  crMsgGroupExisted(caption){\r\n    return {\r\n      isDone: false,\r\n      message: groupExisted(caption)\r\n    };\r\n  },\r\n  crMsgListExisted(captionList, captionGroup){\r\n    return {\r\n      isDone: false,\r\n      message: listExisted(captionList, captionGroup)\r\n    };\r\n  },\r\n  crMsgItemExisted(caption, captionList){\r\n    return {\r\n      isDone: false,\r\n      message: itemExisted(caption, captionList)\r\n    };\r\n  },\r\n\r\n  /* for DragDrop */\r\n  crAlertItemExisted(dropId, dragId){\r\n    return {\r\n      isDone: false,\r\n      itemId: `${dropId}:${dragId}`,\r\n      ...ALERT_DND_ITEM\r\n   };\r\n },\r\n crAlertListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone: false,\r\n      itemId: `${dropGroupCaption}:${dragListCaption}`,\r\n      ...ALERT_DND_LIST\r\n   };\r\n },\r\n\r\n \r\n\r\n /* for DragDrop */\r\n  filter : ut.imArr.filterByPropFn(CAPTION),\r\n  getArrayWithObj : ut.imArr.push,\r\n\r\n  getArrayWithRename: ut.imArr.editByPropFn(CAPTION),\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : ut.imArr.insertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : ut.obj.findInPropArrayByProp(GROUPS, CAPTION),\r\n  findList : ut.obj.findInPropArrayByProp(LISTS, CAPTION),\r\n\r\n  findIndex : ut.arr.findIndexByProp('caption'),\r\n  isInArraySameCaption : ut.arr.isSameByProp(CAPTION)\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"]}