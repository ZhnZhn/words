{"version":3,"sources":["../../../src/flux/watch-list/LogicFn.js"],"names":["CAPTION","GROUPS","LISTS","notFoundItem","MsgWatch","groupExisted","listExisted","itemExisted","ALERT_DND_LIST","ALERT_DND_ITEM","LogicFn","crMsgNotFound","itemType","name","isDone","message","crMsgGroupExisted","caption","crMsgListExisted","captionList","captionGroup","crMsgItemExisted","crAlertItemExisted","dropId","dragId","itemId","crAlertListExisted","dropGroupCaption","dragListCaption","filter","ut","imArr","filterByPropFn","getArrayWithObj","push","getArrayWithRename","editByPropFn","insertItemInArray","insertItem","findGroup","obj","findInPropArrayByProp","findList","findIndex","arr","findIndexByProp","isInArraySameCaption","isSameByProp"],"mappings":";;;;;;;;;AACA;;AAEA;;AAEA,IAAMA,OAAO,GAAG,SAAhB;AAAA,IACMC,MAAM,GAAG,QADf;AAAA,IAEMC,KAAK,GAAG,OAFd;IAKEC,Y,GAMEC,oB,CANFD,Y;IACAE,Y,GAKED,oB,CALFC,Y;IACAC,W,GAIEF,oB,CAJFE,W;IACAC,W,GAGEH,oB,CAHFG,W;IACAC,c,GAEEJ,oB,CAFFI,c;IACAC,c,GACEL,oB,CADFK,c;AAIF,IAAMC,OAAO,GAAG;AAEdC,EAAAA,aAFc,yBAEAC,QAFA,EAEUC,IAFV,EAEe;AAC3B,WAAO;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEZ,YAAY,CAACS,QAAD,EAAWC,IAAX;AAFhB,KAAP;AAID,GAPa;AAQdG,EAAAA,iBARc,6BAQIC,OARJ,EAQY;AACxB,WAAO;AACLH,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAEV,YAAY,CAACY,OAAD;AAFhB,KAAP;AAID,GAba;AAcdC,EAAAA,gBAdc,4BAcGC,WAdH,EAcgBC,YAdhB,EAc6B;AACzC,WAAO;AACLN,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAET,WAAW,CAACa,WAAD,EAAcC,YAAd;AAFf,KAAP;AAID,GAnBa;AAoBdC,EAAAA,gBApBc,4BAoBGJ,OApBH,EAoBYE,WApBZ,EAoBwB;AACpC,WAAO;AACLL,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,OAAO,EAAER,WAAW,CAACU,OAAD,EAAUE,WAAV;AAFf,KAAP;AAID,GAzBa;;AA2Bd;AACAG,EAAAA,kBA5Bc,8BA4BKC,MA5BL,EA4BaC,MA5Bb,EA4BoB;AAChC;AACEV,MAAAA,MAAM,EAAE,KADV;AAEEW,MAAAA,MAAM,EAAKF,MAAL,SAAeC;AAFvB,OAGKf,cAHL;AAKF,GAlCc;AAmCfiB,EAAAA,kBAnCe,8BAmCIC,gBAnCJ,EAmCsBC,eAnCtB,EAmCsC;AACnD;AACGd,MAAAA,MAAM,EAAE,KADX;AAEGW,MAAAA,MAAM,EAAKE,gBAAL,SAAyBC;AAFlC,OAGMpB,cAHN;AAKD,GAzCc;;AA6Cf;AACCqB,EAAAA,MAAM,EAAGC,mBAAGC,KAAH,CAASC,cAAT,CAAwBhC,OAAxB,CA9CK;AA+CdiC,EAAAA,eAAe,EAAGH,mBAAGC,KAAH,CAASG,IA/Cb;AAiDdC,EAAAA,kBAAkB,EAAEL,mBAAGC,KAAH,CAASK,YAAT,CAAsBpC,OAAtB,CAjDN;;AAmDd;AACAqC,EAAAA,iBAAiB,EAAGP,mBAAGC,KAAH,CAASO,UApDf;;AAqDd;AAEAC,EAAAA,SAAS,EAAGT,mBAAGU,GAAH,CAAOC,qBAAP,CAA6BxC,MAA7B,EAAqCD,OAArC,CAvDE;AAwDd0C,EAAAA,QAAQ,EAAGZ,mBAAGU,GAAH,CAAOC,qBAAP,CAA6BvC,KAA7B,EAAoCF,OAApC,CAxDG;AA0Dd2C,EAAAA,SAAS,EAAGb,mBAAGc,GAAH,CAAOC,eAAP,CAAuB,SAAvB,CA1DE;AA2DdC,EAAAA,oBAAoB,EAAGhB,mBAAGc,GAAH,CAAOG,YAAP,CAAoB/C,OAApB;AA3DT,CAAhB;eA+DeU,O","sourcesContent":["\r\nimport MsgWatch from '../../constants/MsgWatch'\r\n\r\nimport ut from '../../utils/fnUtil';\r\n\r\nconst CAPTION = 'caption'\r\n    , GROUPS = 'groups'\r\n    , LISTS = 'lists';\r\n\r\nconst  {\r\n  notFoundItem,\r\n  groupExisted,\r\n  listExisted,\r\n  itemExisted,\r\n  ALERT_DND_LIST,\r\n  ALERT_DND_ITEM\r\n} = MsgWatch;\r\n\r\n\r\nconst LogicFn = {\r\n\r\n  crMsgNotFound(itemType, name){\r\n    return {\r\n      isDone: false,\r\n      message: notFoundItem(itemType, name)\r\n    };\r\n  },\r\n  crMsgGroupExisted(caption){\r\n    return {\r\n      isDone: false,\r\n      message: groupExisted(caption)\r\n    };\r\n  },\r\n  crMsgListExisted(captionList, captionGroup){\r\n    return {\r\n      isDone: false,\r\n      message: listExisted(captionList, captionGroup)\r\n    };\r\n  },\r\n  crMsgItemExisted(caption, captionList){\r\n    return {\r\n      isDone: false,\r\n      message: itemExisted(caption, captionList)\r\n    };\r\n  },\r\n\r\n  /* for DragDrop */\r\n  crAlertItemExisted(dropId, dragId){\r\n    return {\r\n      isDone: false,\r\n      itemId: `${dropId}:${dragId}`,\r\n      ...ALERT_DND_ITEM\r\n   };\r\n },\r\n crAlertListExisted(dropGroupCaption, dragListCaption){\r\n   return {\r\n      isDone: false,\r\n      itemId: `${dropGroupCaption}:${dragListCaption}`,\r\n      ...ALERT_DND_LIST\r\n   };\r\n },\r\n\r\n \r\n\r\n /* for DragDrop */\r\n  filter : ut.imArr.filterByPropFn(CAPTION),\r\n  getArrayWithObj : ut.imArr.push,\r\n\r\n  getArrayWithRename: ut.imArr.editByPropFn(CAPTION),\r\n\r\n  /* for DragDrop */\r\n  insertItemInArray : ut.imArr.insertItem,\r\n  /* for DragDrop */\r\n\r\n  findGroup : ut.obj.findInPropArrayByProp(GROUPS, CAPTION),\r\n  findList : ut.obj.findInPropArrayByProp(LISTS, CAPTION),\r\n\r\n  findIndex : ut.arr.findIndexByProp('caption'),\r\n  isInArraySameCaption : ut.arr.isSameByProp(CAPTION)\r\n\r\n};\r\n\r\nexport default LogicFn\r\n"],"file":"LogicFn.js"}