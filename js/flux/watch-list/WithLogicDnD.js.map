{"version":3,"sources":["../../../src/flux/watch-list/WithLogicDnD.js"],"names":["crAlertItemExisted","LogicFn","crAlertListExisted","findGroup","findList","findIndex","isInArraySameCaption","filter","insertItemInArray","WithLogicDnD","dragDropItem","watchList","dragId","dropId","split","dragGroupId","dragListId","dragItemId","dragGroup","dragList","dragIndex","items","dragItem","dropGroupId","dropListId","dropItemId","dropGroup","dropList","dropIndex","caption","isDone","dragDropList","dragGroupCaption","dragListCaption","dropGroupCaption","dropListCaption","lists","dragDropGroup","groups"],"mappings":"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","sourcesContent":["import LogicFn from './LogicFn';\r\n\r\nconst {\r\n  crAlertItemExisted,\r\n  crAlertListExisted,\r\n\r\n  findGroup,\r\n  findList,\r\n  findIndex,\r\n\r\n  isInArraySameCaption,\r\n  filter,\r\n  insertItemInArray\r\n} = LogicFn;\r\n\r\nconst WithLogicDnD = {\r\n\r\n  dragDropItem(watchList, {dragId, dropId}){\r\n\r\n    const [\r\n           dragGroupId,\r\n           dragListId,\r\n           dragItemId\r\n          ] = dragId.split(';')\r\n        , dragGroup = findGroup(watchList, dragGroupId)\r\n        , dragList = findList(dragGroup, dragListId)\r\n        , dragIndex = findIndex(dragList.items, dragItemId)\r\n        , dragItem = dragList.items[dragIndex];\r\n\r\n    const [\r\n           dropGroupId,\r\n           dropListId,\r\n           dropItemId\r\n         ] = dropId.split(';')\r\n        , dropGroup = findGroup(watchList, dropGroupId)\r\n        , dropList = findList(dropGroup, dropListId)\r\n        , dropIndex = (dropItemId)\r\n             ? findIndex(dropList.items, dropItemId)\r\n             : 0;\r\n\r\n    //dragArr[3] => dragArr[2]\r\n    if ( dragList.caption !== dropList.caption\r\n         && isInArraySameCaption(\r\n              dropList.items, dragItemId\r\n            )\r\n      )\r\n    {\r\n        return crAlertItemExisted(\r\n          dropListId, dragItemId\r\n        );\r\n    }\r\n\r\n    dragList.items = filter(dragList.items, dragItemId)\r\n    dropList.items = insertItemInArray(dragItem, dropIndex, dropList.items);\r\n\r\n    return { isDone: true };\r\n  },\r\n\r\n  dragDropList(watchList, {dragId, dropId}){\r\n    const [ dragGroupCaption, dragListCaption ] = dragId.split(';')\r\n        , dragGroup = findGroup(watchList, dragGroupCaption)\r\n        , dragList = findList(dragGroup, dragListCaption);\r\n\r\n    const [ dropGroupCaption, dropListCaption ] = dropId.split(';')\r\n        , dropGroup = findGroup(watchList, dropGroupCaption)\r\n        , dropIndex = (dropListCaption)\r\n              ? findIndex(dropGroup.lists, dropListCaption)\r\n              : 0;\r\n\r\n    if ( dragGroup.caption !== dropGroup.caption &&\r\n         isInArraySameCaption(dropGroup.lists, dragListCaption) )\r\n    {\r\n      return crAlertListExisted(\r\n        dropGroupCaption,\r\n        dragListCaption\r\n      );\r\n    }\r\n\r\n    dragGroup.lists = filter(dragGroup.lists, dragListCaption);\r\n    dropGroup.lists = insertItemInArray(dragList, dropIndex, dropGroup.lists);\r\n\r\n    return { isDone : true };\r\n  },\r\n\r\n  dragDropGroup(watchList, {dragId, dropId}){\r\n     const [ dragGroupCaption ] = dragId.split(';')\r\n         , dragGroup = findGroup(watchList, dragGroupCaption)\r\n\r\n         , [ dropGroupCaption ] = dropId.split(';')\r\n         , dropIndex = (dropGroupCaption)\r\n               ? findIndex(watchList.groups, dropGroupCaption)\r\n               : 0;\r\n\r\n      watchList.groups = filter(watchList.groups, dragGroupCaption);\r\n      watchList.groups = insertItemInArray(dragGroup, dropIndex, watchList.groups)\r\n\r\n      return { isDone: true };\r\n  }\r\n\r\n};\r\n\r\nexport default WithLogicDnD\r\n"],"file":"WithLogicDnD.js"}