{"version":3,"sources":["../../src/utils/throttle.js"],"names":["_fnNow","Date","now","getTime","throttle","func","wait","options","timeout","context","args","result","previous","later","leading","apply","throttled","remaining","arguments","clearTimeout","trailing","setTimeout","cancel"],"mappings":";;;;;AACA;AAEA,IAAMA,MAAM,GAAGC,IAAI,CAACC,GAAL,IAAY,YAAW;AACpC,SAAO,IAAID,IAAJ,GAAWE,OAAX,EAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC7C,MAAIC,OAAJ,EAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,MAA5B;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAI,CAACL,OAAL,EAAcA,OAAO,GAAG,EAAV;;AAEd,MAAIM,KAAK,GAAG,SAARA,KAAQ,GAAW;AACrBD,IAAAA,QAAQ,GAAGL,OAAO,CAACO,OAAR,KAAoB,KAApB,GAA4B,CAA5B,GAAgCd,MAAM,EAAjD;AACAQ,IAAAA,OAAO,GAAG,IAAV;AACAG,IAAAA,MAAM,GAAGN,IAAI,CAACU,KAAL,CAAWN,OAAX,EAAoBC,IAApB,CAAT;AACA,QAAI,CAACF,OAAL,EAAcC,OAAO,GAAGC,IAAI,GAAG,IAAjB;AACf,GALD;;AAOA,MAAIM,SAAS,GAAG,SAAZA,SAAY,GAAW;AACzB,QAAId,GAAG,GAAGF,MAAM,EAAhB;;AACA,QAAI,CAACY,QAAD,IAAaL,OAAO,CAACO,OAAR,KAAoB,KAArC,EAA4CF,QAAQ,GAAGV,GAAX;AAC5C,QAAIe,SAAS,GAAGX,IAAI,IAAIJ,GAAG,GAAGU,QAAV,CAApB;AACAH,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,IAAI,GAAGQ,SAAP;;AACA,QAAID,SAAS,IAAI,CAAb,IAAkBA,SAAS,GAAGX,IAAlC,EAAwC;AACtC,UAAIE,OAAJ,EAAa;AACXW,QAAAA,YAAY,CAACX,OAAD,CAAZ;AACAA,QAAAA,OAAO,GAAG,IAAV;AACD;;AACDI,MAAAA,QAAQ,GAAGV,GAAX;AACAS,MAAAA,MAAM,GAAGN,IAAI,CAACU,KAAL,CAAWN,OAAX,EAAoBC,IAApB,CAAT;AACA,UAAI,CAACF,OAAL,EAAcC,OAAO,GAAGC,IAAI,GAAG,IAAjB;AACf,KARD,MAQO,IAAI,CAACF,OAAD,IAAYD,OAAO,CAACa,QAAR,KAAqB,KAArC,EAA4C;AACjDZ,MAAAA,OAAO,GAAGa,UAAU,CAACR,KAAD,EAAQI,SAAR,CAApB;AACD;;AACD,WAAON,MAAP;AACD,GAlBD;;AAoBAK,EAAAA,SAAS,CAACM,MAAV,GAAmB,YAAW;AAC5BH,IAAAA,YAAY,CAACX,OAAD,CAAZ;AACAI,IAAAA,QAAQ,GAAG,CAAX;AACAJ,IAAAA,OAAO,GAAGC,OAAO,GAAGC,IAAI,GAAG,IAA3B;AACD,GAJD;;AAMA,SAAOM,SAAP;AACD,CAvCD;;eAyCeZ,Q","sourcesContent":["\r\n//undescore.js throttle\r\n\r\nconst _fnNow = Date.now || function() {\r\n  return new Date().getTime();\r\n};\r\n\r\n// Returns a function, that, when invoked, will only be triggered at most once\r\n// during a given window of time. Normally, the throttled function will run\r\n// as much as it can, without ever going more than once per `wait` duration;\r\n// but if you'd like to disable the execution on the leading edge, pass\r\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n\r\nconst throttle = function(func, wait, options) {\r\n  var timeout, context, args, result;\r\n  var previous = 0;\r\n  if (!options) options = {};\r\n\r\n  var later = function() {\r\n    previous = options.leading === false ? 0 : _fnNow();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n\r\n  var throttled = function() {\r\n    var now = _fnNow();\r\n    if (!previous && options.leading === false) previous = now;\r\n    var remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  throttled.cancel = function() {\r\n    clearTimeout(timeout);\r\n    previous = 0;\r\n    timeout = context = args = null;\r\n  };\r\n\r\n  return throttled;\r\n};\r\n\r\nexport default throttle\r\n"],"file":"throttle.js"}