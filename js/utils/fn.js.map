{"version":3,"sources":["../../src/utils/fn.js"],"names":["LIMIT_REMAINING","FREQUENCY_RESTRICTION","MSG_FREQUENCY_RESTRICTION","_lastUri","_msLastFetch","_crMsgFrequency","msDiff","_s","toFixed","_isFn","fn","fnFetch","uri","option","fetchOptions","onCheckResponse","onFetch","onCompleted","onFailed","onCatch","_msNow","Date","now","_msDiff","msg","fetch","then","res","status","statusText","headers","Promise","all","resolve","get","undefined","json","limitRemaining","message","catch","error"],"mappings":"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","file":"fn.js","sourcesContent":["//const LIMIT_REMAINING = 'X-RateLimit-Remaining';\r\n\r\n/*\r\nconst _fnMsg400 = (option) => {\r\n  if (option.loadId === \"EU_STAT\"){\r\n    return '400 : Bad request.\\nDataset contains no data. One or more filtering elements (query parameters) are probably invalid.\\nMaybe try request with older date.';\r\n  } else {\r\n    return '400 : Bad request';\r\n  }\r\n}\r\n*/\r\nconst LIMIT_REMAINING = 'X-RateLimit-requests-Remaining';\r\n\r\nconst FREQUENCY_RESTRICTION = 5000;\r\nconst MSG_FREQUENCY_RESTRICTION = 'Request frequency restriction.\\nOne request per 5 second.\\n Remain'\r\n//const MSG_LOAD_RESTRICTION = 'Request has already loaded.\\n1 Request per 5 second.';\r\nlet _lastUri;\r\nlet _msLastFetch;\r\n\r\nconst _crMsgFrequency = (msDiff) => {\r\n  const _s = (msDiff/1000).toFixed(1);\r\n  return `${MSG_FREQUENCY_RESTRICTION} ${_s} seconds`;\r\n}\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst fnFetch = function({\r\n   uri, option, fetchOptions,\r\n   onCheckResponse, onFetch, onCompleted, onFailed, onCatch\r\n }){\r\n  const _msNow = Date.now()\r\n      , _msDiff =_msNow - _msLastFetch ;\r\n  if ( _msDiff < FREQUENCY_RESTRICTION ) {\r\n    if ( _lastUri !== uri ) {\r\n      onFailed({ msg: _crMsgFrequency(_msDiff) })\r\n    }\r\n  } else {\r\n    _lastUri = uri;\r\n    _msLastFetch = _msNow;\r\n    fetch(uri, fetchOptions)\r\n      .then((res) => {\r\n        const {\r\n                status, statusText,\r\n                headers={}\r\n              } = res;\r\n        return Promise.all([\r\n          Promise.resolve(status),\r\n          Promise.resolve(statusText),\r\n          _isFn(headers.get)\r\n             ? Promise.resolve(headers.get(LIMIT_REMAINING))\r\n             : Promise.resolve(undefined),\r\n          _isFn(res.json)\r\n             ? res.json()\r\n             : Promise.resolve(undefined),\r\n        ]);\r\n        /*\r\n        if ((status>=200 && status<400) || ok) {\r\n          if (_isFn(headers.get)){\r\n            return Promise.all([\r\n               Promise.resolve(headers.get(LIMIT_REMAINING)),\r\n               res.json()\r\n            ]);\r\n          } else {\r\n            return Promise.all([\r\n               Promise.resolve(status),\r\n               Promise.resolve(statusText),\r\n               Promise.resolve(undefined),\r\n               res.json()\r\n            ]);\r\n          }\r\n       } else if (status === 404) {\r\n          throw {\r\n            msg: `Not Found ${status}`\r\n          };\r\n       } else {\r\n          throw {\r\n            msg : `Response Error ${status}: ${statusText}`\r\n          };\r\n       }\r\n       */\r\n      })\r\n      .then(([status, statusText, limitRemaining, json ]) => {\r\n         if ( status>=200 && status<400 ) {\r\n           if (onCheckResponse(json, option)){\r\n             option.limitRemaining = limitRemaining;\r\n             onFetch({ json, option, onCompleted });\r\n           }\r\n         } else if (status === 404) {\r\n           throw {\r\n             msg: `${status}: Not Found`\r\n           };\r\n         } else {\r\n           throw {\r\n             msg: `${status}: ${statusText}. ${json.message || ''}`\r\n           };\r\n         }\r\n      })\r\n      .catch((error) => {\r\n         onCatch({ error, option, onFailed })\r\n      })\r\n   }\r\n}\r\n\r\nexport default fnFetch\r\n"]}