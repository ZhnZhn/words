{"version":3,"sources":["../../src/utils/fn.js"],"names":["LIMIT_REMAINING","FREQUENCY_RESTRICTION","MSG_FREQUENCY_RESTRICTION","_lastUri","_msLastFetch","_crMsgFrequency","msDiff","_s","toFixed","_isFn","fn","fnFetch","uri","option","fetchOptions","onCheckResponse","onFetch","onCompleted","onFailed","onCatch","_msNow","Date","now","_msDiff","msg","fetch","then","res","status","statusText","headers","Promise","all","resolve","get","undefined","json","limitRemaining","message","error"],"mappings":"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","sourcesContent":["//const LIMIT_REMAINING = 'X-RateLimit-Remaining';\r\n\r\n/*\r\nconst _fnMsg400 = (option) => {\r\n  if (option.loadId === \"EU_STAT\"){\r\n    return '400 : Bad request.\\nDataset contains no data. One or more filtering elements (query parameters) are probably invalid.\\nMaybe try request with older date.';\r\n  } else {\r\n    return '400 : Bad request';\r\n  }\r\n}\r\n*/\r\nconst LIMIT_REMAINING = 'X-RateLimit-requests-Remaining';\r\n\r\nconst FREQUENCY_RESTRICTION = 5000;\r\nconst MSG_FREQUENCY_RESTRICTION = 'Request frequency restriction.\\nOne request per 5 second.\\n Remain'\r\n//const MSG_LOAD_RESTRICTION = 'Request has already loaded.\\n1 Request per 5 second.';\r\nlet _lastUri;\r\nlet _msLastFetch;\r\n\r\nconst _crMsgFrequency = (msDiff) => {\r\n  const _s = (msDiff/1000).toFixed(1);\r\n  return `${MSG_FREQUENCY_RESTRICTION} ${_s} seconds`;\r\n}\r\n\r\nconst _isFn = fn => typeof fn === 'function';\r\n\r\nconst fnFetch = function({\r\n   uri, option, fetchOptions,\r\n   onCheckResponse, onFetch, onCompleted, onFailed, onCatch\r\n }){\r\n  const _msNow = Date.now()\r\n      , _msDiff =_msNow - _msLastFetch ;\r\n  if ( _msDiff < FREQUENCY_RESTRICTION ) {\r\n    if ( _lastUri !== uri ) {\r\n      onFailed({ msg: _crMsgFrequency(_msDiff) })\r\n    }\r\n  } else {\r\n    _lastUri = uri;\r\n    _msLastFetch = _msNow;\r\n    fetch(uri, fetchOptions)\r\n      .then((res) => {\r\n        const {\r\n                status, statusText,\r\n                headers={}\r\n              } = res;\r\n        return Promise.all([\r\n          Promise.resolve(status),\r\n          Promise.resolve(statusText),\r\n          _isFn(headers.get)\r\n             ? Promise.resolve(headers.get(LIMIT_REMAINING))\r\n             : Promise.resolve(undefined),\r\n          _isFn(res.json)\r\n             ? res.json()\r\n             : Promise.resolve(undefined),\r\n        ]);\r\n        /*\r\n        if ((status>=200 && status<400) || ok) {\r\n          if (_isFn(headers.get)){\r\n            return Promise.all([\r\n               Promise.resolve(headers.get(LIMIT_REMAINING)),\r\n               res.json()\r\n            ]);\r\n          } else {\r\n            return Promise.all([\r\n               Promise.resolve(status),\r\n               Promise.resolve(statusText),\r\n               Promise.resolve(undefined),\r\n               res.json()\r\n            ]);\r\n          }\r\n       } else if (status === 404) {\r\n          throw {\r\n            msg: `Not Found ${status}`\r\n          };\r\n       } else {\r\n          throw {\r\n            msg : `Response Error ${status}: ${statusText}`\r\n          };\r\n       }\r\n       */\r\n      })\r\n      .then(([status, statusText, limitRemaining, json ]) => {\r\n         if ( status>=200 && status<400 ) {\r\n           if (onCheckResponse(json, option)){\r\n             option.limitRemaining = limitRemaining;\r\n             onFetch({ json, option, onCompleted });\r\n           }\r\n         } else if (status === 404) {\r\n           throw {\r\n             msg: `${status}: Not Found`\r\n           };\r\n         } else {\r\n           throw {\r\n             msg: `${status}: ${statusText}. ${json.message || ''}`\r\n           };\r\n         }\r\n      })\r\n      .catch((error) => {\r\n         onCatch({ error, option, onFailed })\r\n      })\r\n   }\r\n}\r\n\r\nexport default fnFetch\r\n"],"file":"fn.js"}